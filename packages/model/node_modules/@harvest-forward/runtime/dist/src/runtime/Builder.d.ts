import { Artifact } from '../system/Artifact';
import { Nameable } from '../system/Nameable';
import { System } from '../system/System';
import { ConfigurationParameter } from './ConfigurationParameter';
export interface Builder extends Nameable {
    getConfiguration(): Record<string, ConfigurationParameter>;
    getConfigurationNames(): string[];
    hasConfigurableValue(name: string): boolean;
    getConfiguredValue(name: string): any;
    setConfiguredValue(name: string, value: any): void;
    isConfigured(): boolean;
    getMissingConfigurationValues(): string[];
    doesConfigurationWork(): Promise<boolean>;
    build(system: System): Promise<Artifact[]>;
}
//# sourceMappingURL=Builder.d.ts.map