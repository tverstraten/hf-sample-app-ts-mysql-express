import { ProgrammingLanguage } from './ProgrammingLanguage';
import { ValueType } from './ValueType';
import { ValueTypeResolver } from './ValueTypeResolver';
export declare class SimpleMappedValueTypeResolver implements ValueTypeResolver {
    readonly language: ProgrammingLanguage;
    readonly optionalValueTypes: Record<string, string>;
    readonly mandatoryValueTypes: Record<string, string>;
    private mandatoryNames;
    constructor(language: ProgrammingLanguage, mandatoryValueTypes: Record<string, string>, optionalValueTypes: Record<string, string>);
    doesSupport(language: ProgrammingLanguage): boolean;
    doesMap(type: ValueType): boolean;
    hasName(name: string): boolean;
    fromType(originalType: ValueType, optional?: boolean): string;
    toType(name: string): string | undefined;
}
//# sourceMappingURL=SimpleMappedValueTypeResolver.d.ts.map