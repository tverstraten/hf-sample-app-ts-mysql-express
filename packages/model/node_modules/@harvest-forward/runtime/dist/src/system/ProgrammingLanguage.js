"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProgrammingLanguage = void 0;
class ProgrammingLanguage {
    constructor(name) {
        this.name = name;
    }
    static hasName(name) {
        for (const key in ProgrammingLanguage.recognizedLanguages) {
            const language = ProgrammingLanguage.recognizedLanguages[key];
            if (language.name === name)
                return true;
        }
        return false;
    }
    static fromName(name) {
        for (const key in ProgrammingLanguage.recognizedLanguages) {
            const language = ProgrammingLanguage.recognizedLanguages[key];
            if (language.name === name)
                return language;
        }
        throw RangeError(`ProgrammingLanguage does not have a value of ${name}`);
    }
}
exports.ProgrammingLanguage = ProgrammingLanguage;
ProgrammingLanguage.cSharp = new ProgrammingLanguage('CSharp');
ProgrammingLanguage.go = new ProgrammingLanguage('Go');
ProgrammingLanguage.java = new ProgrammingLanguage('Java');
ProgrammingLanguage.javaScript = new ProgrammingLanguage('JavaScript');
ProgrammingLanguage.mySql = new ProgrammingLanguage('MySql');
ProgrammingLanguage.php = new ProgrammingLanguage('PHP');
ProgrammingLanguage.postgres = new ProgrammingLanguage('Postgres');
ProgrammingLanguage.python = new ProgrammingLanguage('Python');
ProgrammingLanguage.sql = new ProgrammingLanguage('Sql');
ProgrammingLanguage.tSql = new ProgrammingLanguage('TSql');
ProgrammingLanguage.typeScript = new ProgrammingLanguage('TypeScript');
ProgrammingLanguage.visualBasicNet = new ProgrammingLanguage('VisualBasicNet');
ProgrammingLanguage.visualBasic = new ProgrammingLanguage('VisualBasic');
ProgrammingLanguage.recognizedLanguages = [
    ProgrammingLanguage.cSharp,
    ProgrammingLanguage.go,
    ProgrammingLanguage.java,
    ProgrammingLanguage.javaScript,
    ProgrammingLanguage.mySql,
    ProgrammingLanguage.php,
    ProgrammingLanguage.postgres,
    ProgrammingLanguage.python,
    ProgrammingLanguage.sql,
    ProgrammingLanguage.tSql,
    ProgrammingLanguage.typeScript,
    ProgrammingLanguage.visualBasicNet,
    ProgrammingLanguage.visualBasic,
];
