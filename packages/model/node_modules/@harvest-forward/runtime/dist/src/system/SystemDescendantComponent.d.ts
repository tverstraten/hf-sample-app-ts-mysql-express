import { ComponentOrigin } from './ComponentOrigin';
import { Describable } from './Describable';
import { Nameable } from './Nameable';
import { Permanence } from './Permanence';
import { StringIdentifiable } from './StringIdentifiable';
import { SystemComponent } from './SystemComponent';
import { SystemComponentType } from './SystemComponentType';
export declare class SystemDescendantComponent extends SystemComponent implements StringIdentifiable, Nameable, Describable {
    readonly id: string;
    private _name;
    private _constantCaseName;
    private _pascalCaseName?;
    private _snakeCaseName?;
    private _camelCaseName?;
    private _nameSpace;
    private _constantCaseNameSpace;
    private _pascalCaseNameSpace?;
    private _snakeCaseNameSpace?;
    private _camelCaseNameSpace?;
    private _fullConstantCaseName;
    description: string;
    permanence?: Permanence;
    readonly objectTypeName: string;
    origin?: ComponentOrigin;
    informational: boolean;
    functional: boolean;
    isExternal: boolean;
    isTest: boolean;
    constructor(objectType: string, nameSpace: string, name: string, componentType: SystemComponentType, description: string);
    get name(): string;
    set name(value: string);
    disconnectRecursion(): void;
    reconnectRecursion(system: SystemComponent): void;
    protected setNames(nameSpace: string, name: string): void;
    protected updateDescendentName(oldFullConstantCaseName: string, descendant: SystemDescendantComponent): void;
    get constantCaseName(): string;
    get fullConstantCaseName(): string;
    get pascalCaseName(): string;
    get snakeCaseName(): string;
    get camelCaseName(): string;
    get nameSpace(): string;
    set nameSpace(value: string);
    get constantCaseNameSpace(): string;
    get pascalCaseNameSpace(): string;
    get snakeCaseNameSpace(): string;
    get camelCaseNameSpace(): string;
    get constantCaseFullName(): string;
}
//# sourceMappingURL=SystemDescendantComponent.d.ts.map