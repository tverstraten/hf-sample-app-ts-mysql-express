export default class VisualBasic6ParserVisitor {
    visitStartRule(ctx: any): any;
    visitModule(ctx: any): any;
    visitModuleReferences(ctx: any): any;
    visitModuleReference(ctx: any): any;
    visitModuleReferenceValue(ctx: any): any;
    visitModuleReferenceComponent(ctx: any): any;
    visitModuleHeader(ctx: any): any;
    visitModuleConfig(ctx: any): any;
    visitModuleConfigElement(ctx: any): any;
    visitModuleAttributes(ctx: any): any;
    visitModuleOptions(ctx: any): any;
    visitOptionBaseStmt(ctx: any): any;
    visitOptionCompareStmt(ctx: any): any;
    visitOptionExplicitStmt(ctx: any): any;
    visitOptionPrivateModuleStmt(ctx: any): any;
    visitModuleBody(ctx: any): any;
    visitModuleBodyElement(ctx: any): any;
    visitControlProperties(ctx: any): any;
    visitCp_Properties(ctx: any): any;
    visitCp_SingleProperty(ctx: any): any;
    visitCp_PropertyName(ctx: any): any;
    visitCp_PropertyValue(ctx: any): any;
    visitCp_NestedProperty(ctx: any): any;
    visitCp_ControlType(ctx: any): any;
    visitCp_ControlIdentifier(ctx: any): any;
    visitModuleBlock(ctx: any): any;
    visitAttributeStmt(ctx: any): any;
    visitBlock(ctx: any): any;
    visitBlockStmt(ctx: any): any;
    visitAppActivateStmt(ctx: any): any;
    visitBeepStmt(ctx: any): any;
    visitChDirStmt(ctx: any): any;
    visitChDriveStmt(ctx: any): any;
    visitCloseStmt(ctx: any): any;
    visitConstStmt(ctx: any): any;
    visitConstSubStmt(ctx: any): any;
    visitDateStmt(ctx: any): any;
    visitDeclareStmt(ctx: any): any;
    visitDeftypeStmt(ctx: any): any;
    visitDeleteSettingStmt(ctx: any): any;
    visitDoLoopStmt(ctx: any): any;
    visitEndStmt(ctx: any): any;
    visitEnumerationStmt(ctx: any): any;
    visitEnumerationStmt_Constant(ctx: any): any;
    visitEraseStmt(ctx: any): any;
    visitErrorStmt(ctx: any): any;
    visitEventStmt(ctx: any): any;
    visitExitStmt(ctx: any): any;
    visitFilecopyStmt(ctx: any): any;
    visitForEachStmt(ctx: any): any;
    visitForNextStmt(ctx: any): any;
    visitFunctionStmt(ctx: any): any;
    visitGetStmt(ctx: any): any;
    visitGoSubStmt(ctx: any): any;
    visitGoToStmt(ctx: any): any;
    visitInlineIfThenElse(ctx: any): any;
    visitBlockIfThenElse(ctx: any): any;
    visitIfBlockStmt(ctx: any): any;
    visitIfConditionStmt(ctx: any): any;
    visitIfElseIfBlockStmt(ctx: any): any;
    visitIfElseBlockStmt(ctx: any): any;
    visitImplementsStmt(ctx: any): any;
    visitInputStmt(ctx: any): any;
    visitKillStmt(ctx: any): any;
    visitLetStmt(ctx: any): any;
    visitLineInputStmt(ctx: any): any;
    visitLoadStmt(ctx: any): any;
    visitLockStmt(ctx: any): any;
    visitLsetStmt(ctx: any): any;
    visitMacroIfThenElseStmt(ctx: any): any;
    visitMacroIfBlockStmt(ctx: any): any;
    visitMacroElseIfBlockStmt(ctx: any): any;
    visitMacroElseBlockStmt(ctx: any): any;
    visitMidStmt(ctx: any): any;
    visitMkdirStmt(ctx: any): any;
    visitNameStmt(ctx: any): any;
    visitOnErrorStmt(ctx: any): any;
    visitOnGoToStmt(ctx: any): any;
    visitOnGoSubStmt(ctx: any): any;
    visitOpenStmt(ctx: any): any;
    visitOutputList(ctx: any): any;
    visitOutputList_Expression(ctx: any): any;
    visitPrintStmt(ctx: any): any;
    visitPropertyGetStmt(ctx: any): any;
    visitPropertySetStmt(ctx: any): any;
    visitPropertyLetStmt(ctx: any): any;
    visitPutStmt(ctx: any): any;
    visitRaiseEventStmt(ctx: any): any;
    visitRandomizeStmt(ctx: any): any;
    visitRedimStmt(ctx: any): any;
    visitRedimSubStmt(ctx: any): any;
    visitResetStmt(ctx: any): any;
    visitResumeStmt(ctx: any): any;
    visitReturnStmt(ctx: any): any;
    visitRmdirStmt(ctx: any): any;
    visitRsetStmt(ctx: any): any;
    visitSavepictureStmt(ctx: any): any;
    visitSaveSettingStmt(ctx: any): any;
    visitSeekStmt(ctx: any): any;
    visitSelectCaseStmt(ctx: any): any;
    visitSC_Case(ctx: any): any;
    visitCaseCondElse(ctx: any): any;
    visitCaseCondExpr(ctx: any): any;
    visitCaseCondExprIs(ctx: any): any;
    visitCaseCondExprValue(ctx: any): any;
    visitCaseCondExprTo(ctx: any): any;
    visitSendkeysStmt(ctx: any): any;
    visitSetattrStmt(ctx: any): any;
    visitSetStmt(ctx: any): any;
    visitStopStmt(ctx: any): any;
    visitSubStmt(ctx: any): any;
    visitTimeStmt(ctx: any): any;
    visitTypeStmt(ctx: any): any;
    visitTypeStmt_Element(ctx: any): any;
    visitTypeOfStmt(ctx: any): any;
    visitUnloadStmt(ctx: any): any;
    visitUnlockStmt(ctx: any): any;
    visitVsAssign(ctx: any): any;
    visitVsNot(ctx: any): any;
    visitVsStruct(ctx: any): any;
    visitVsMultDiv(ctx: any): any;
    visitVsTypeOf(ctx: any): any;
    visitVsICS(ctx: any): any;
    visitVsXor(ctx: any): any;
    visitVsAddSub(ctx: any): any;
    visitVsAnd(ctx: any): any;
    visitVsPow(ctx: any): any;
    visitVsMod(ctx: any): any;
    visitVsAmp(ctx: any): any;
    visitVsAddressOf(ctx: any): any;
    visitVsNew(ctx: any): any;
    visitVsPlusMinus(ctx: any): any;
    visitVsIDiv(ctx: any): any;
    visitVsOr(ctx: any): any;
    visitVsLiteral(ctx: any): any;
    visitVsEqv(ctx: any): any;
    visitVsImp(ctx: any): any;
    visitVsComp(ctx: any): any;
    visitVsMid(ctx: any): any;
    visitVariableStmt(ctx: any): any;
    visitVariableListStmt(ctx: any): any;
    visitVariableSubStmt(ctx: any): any;
    visitWhileWendStmt(ctx: any): any;
    visitWidthStmt(ctx: any): any;
    visitWithStmt(ctx: any): any;
    visitWriteStmt(ctx: any): any;
    visitExplicitCallStmt(ctx: any): any;
    visitECS_ProcedureCall(ctx: any): any;
    visitECS_MemberProcedureCall(ctx: any): any;
    visitImplicitCallStmt_InBlock(ctx: any): any;
    visitICS_B_ProcedureCall(ctx: any): any;
    visitICS_B_MemberProcedureCall(ctx: any): any;
    visitImplicitCallStmt_InStmt(ctx: any): any;
    visitICS_S_VariableOrProcedureCall(ctx: any): any;
    visitICS_S_ProcedureOrArrayCall(ctx: any): any;
    visitICS_S_NestedProcedureCall(ctx: any): any;
    visitICS_S_MembersCall(ctx: any): any;
    visitICS_S_MemberCall(ctx: any): any;
    visitICS_S_DictionaryCall(ctx: any): any;
    visitArgsCall(ctx: any): any;
    visitArgCall(ctx: any): any;
    visitDictionaryCallStmt(ctx: any): any;
    visitArgList(ctx: any): any;
    visitArg(ctx: any): any;
    visitArgDefaultValue(ctx: any): any;
    visitSubscripts(ctx: any): any;
    visitSubscript_(ctx: any): any;
    visitAmbiguousIdentifier(ctx: any): any;
    visitAsTypeClause(ctx: any): any;
    visitBaseType(ctx: any): any;
    visitCertainIdentifier(ctx: any): any;
    visitComparisonOperator(ctx: any): any;
    visitComplexType(ctx: any): any;
    visitFieldLength(ctx: any): any;
    visitLetterrange(ctx: any): any;
    visitLineLabel(ctx: any): any;
    visitLiteral(ctx: any): any;
    visitPublicPrivateVisibility(ctx: any): any;
    visitPublicPrivateGlobalVisibility(ctx: any): any;
    visitType_(ctx: any): any;
    visitTypeHint(ctx: any): any;
    visitVisibility(ctx: any): any;
    visitAmbiguousKeyword(ctx: any): any;
}
//# sourceMappingURL=VisualBasic6ParserVisitor.d.ts.map