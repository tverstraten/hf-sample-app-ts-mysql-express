"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const antlr4_1 = __importDefault(require("antlr4"));
const VisualBasic6ParserListener_js_1 = __importDefault(require("./VisualBasic6ParserListener.js"));
const VisualBasic6ParserVisitor_js_1 = __importDefault(require("./VisualBasic6ParserVisitor.js"));
const serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786",
    "\u5964\u0003\u00e0\u0b05\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004",
    "\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t",
    "\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
    "\u0004\u0014\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017",
    "\t\u0017\u0004\u0018\t\u0018\u0004\u0019\t\u0019\u0004\u001a\t\u001a",
    "\u0004\u001b\t\u001b\u0004\u001c\t\u001c\u0004\u001d\t\u001d\u0004\u001e",
    "\t\u001e\u0004\u001f\t\u001f\u0004 \t \u0004!\t!\u0004\"\t\"\u0004#",
    "\t#\u0004$\t$\u0004%\t%\u0004&\t&\u0004\'\t\'\u0004(\t(\u0004)\t)\u0004",
    "*\t*\u0004+\t+\u0004,\t,\u0004-\t-\u0004.\t.\u0004/\t/\u00040\t0\u0004",
    "1\t1\u00042\t2\u00043\t3\u00044\t4\u00045\t5\u00046\t6\u00047\t7\u0004",
    "8\t8\u00049\t9\u0004:\t:\u0004;\t;\u0004<\t<\u0004=\t=\u0004>\t>\u0004",
    "?\t?\u0004@\t@\u0004A\tA\u0004B\tB\u0004C\tC\u0004D\tD\u0004E\tE\u0004",
    "F\tF\u0004G\tG\u0004H\tH\u0004I\tI\u0004J\tJ\u0004K\tK\u0004L\tL\u0004",
    "M\tM\u0004N\tN\u0004O\tO\u0004P\tP\u0004Q\tQ\u0004R\tR\u0004S\tS\u0004",
    "T\tT\u0004U\tU\u0004V\tV\u0004W\tW\u0004X\tX\u0004Y\tY\u0004Z\tZ\u0004",
    "[\t[\u0004\\\t\\\u0004]\t]\u0004^\t^\u0004_\t_\u0004`\t`\u0004a\ta\u0004",
    "b\tb\u0004c\tc\u0004d\td\u0004e\te\u0004f\tf\u0004g\tg\u0004h\th\u0004",
    "i\ti\u0004j\tj\u0004k\tk\u0004l\tl\u0004m\tm\u0004n\tn\u0004o\to\u0004",
    "p\tp\u0004q\tq\u0004r\tr\u0004s\ts\u0004t\tt\u0004u\tu\u0004v\tv\u0004",
    "w\tw\u0004x\tx\u0004y\ty\u0004z\tz\u0004{\t{\u0004|\t|\u0004}\t}\u0004",
    "~\t~\u0004\u007f\t\u007f\u0004\u0080\t\u0080\u0004\u0081\t\u0081\u0004",
    "\u0082\t\u0082\u0004\u0083\t\u0083\u0004\u0084\t\u0084\u0004\u0085\t",
    "\u0085\u0004\u0086\t\u0086\u0004\u0087\t\u0087\u0004\u0088\t\u0088\u0004",
    "\u0089\t\u0089\u0004\u008a\t\u008a\u0004\u008b\t\u008b\u0004\u008c\t",
    "\u008c\u0004\u008d\t\u008d\u0004\u008e\t\u008e\u0004\u008f\t\u008f\u0004",
    "\u0090\t\u0090\u0004\u0091\t\u0091\u0004\u0092\t\u0092\u0004\u0093\t",
    "\u0093\u0004\u0094\t\u0094\u0004\u0095\t\u0095\u0004\u0096\t\u0096\u0004",
    "\u0097\t\u0097\u0004\u0098\t\u0098\u0004\u0099\t\u0099\u0004\u009a\t",
    "\u009a\u0004\u009b\t\u009b\u0004\u009c\t\u009c\u0003\u0002\u0003\u0002",
    "\u0003\u0002\u0003\u0003\u0005\u0003\u013d\n\u0003\u0003\u0003\u0007",
    "\u0003\u0140\n\u0003\f\u0003\u000e\u0003\u0143\u000b\u0003\u0003\u0003",
    "\u0003\u0003\u0006\u0003\u0147\n\u0003\r\u0003\u000e\u0003\u0148\u0005",
    "\u0003\u014b\n\u0003\u0003\u0003\u0005\u0003\u014e\n\u0003\u0003\u0003",
    "\u0007\u0003\u0151\n\u0003\f\u0003\u000e\u0003\u0154\u000b\u0003\u0003",
    "\u0003\u0005\u0003\u0157\n\u0003\u0003\u0003\u0007\u0003\u015a\n\u0003",
    "\f\u0003\u000e\u0003\u015d\u000b\u0003\u0003\u0003\u0005\u0003\u0160",
    "\n\u0003\u0003\u0003\u0007\u0003\u0163\n\u0003\f\u0003\u000e\u0003\u0166",
    "\u000b\u0003\u0003\u0003\u0005\u0003\u0169\n\u0003\u0003\u0003\u0007",
    "\u0003\u016c\n\u0003\f\u0003\u000e\u0003\u016f\u000b\u0003\u0003\u0003",
    "\u0005\u0003\u0172\n\u0003\u0003\u0003\u0007\u0003\u0175\n\u0003\f\u0003",
    "\u000e\u0003\u0178\u000b\u0003\u0003\u0003\u0005\u0003\u017b\n\u0003",
    "\u0003\u0003\u0007\u0003\u017e\n\u0003\f\u0003\u000e\u0003\u0181\u000b",
    "\u0003\u0003\u0003\u0005\u0003\u0184\n\u0003\u0003\u0004\u0006\u0004",
    "\u0187\n\u0004\r\u0004\u000e\u0004\u0188\u0003\u0005\u0003\u0005\u0005",
    "\u0005\u018d\n\u0005\u0003\u0005\u0003\u0005\u0005\u0005\u0191\n\u0005",
    "\u0003\u0005\u0003\u0005\u0003\u0005\u0005\u0005\u0196\n\u0005\u0003",
    "\u0005\u0005\u0005\u0199\n\u0005\u0003\u0005\u0007\u0005\u019c\n\u0005",
    "\f\u0005\u000e\u0005\u019f\u000b\u0005\u0003\u0006\u0003\u0006\u0003",
    "\u0007\u0003\u0007\u0003\b\u0003\b\u0003\b\u0003\b\u0003\b\u0005\b\u01aa",
    "\n\b\u0003\t\u0003\t\u0006\t\u01ae\n\t\r\t\u000e\t\u01af\u0003\t\u0006",
    "\t\u01b3\n\t\r\t\u000e\t\u01b4\u0003\t\u0003\t\u0006\t\u01b9\n\t\r\t",
    "\u000e\t\u01ba\u0003\n\u0003\n\u0005\n\u01bf\n\n\u0003\n\u0003\n\u0005",
    "\n\u01c3\n\n\u0003\n\u0003\n\u0003\n\u0003\u000b\u0003\u000b\u0006\u000b",
    "\u01ca\n\u000b\r\u000b\u000e\u000b\u01cb\u0006\u000b\u01ce\n\u000b\r",
    "\u000b\u000e\u000b\u01cf\u0003\f\u0003\f\u0006\f\u01d4\n\f\r\f\u000e",
    "\f\u01d5\u0006\f\u01d8\n\f\r\f\u000e\f\u01d9\u0003\r\u0003\r\u0003\r",
    "\u0003\r\u0003\r\u0003\r\u0003\r\u0003\r\u0005\r\u01e4\n\r\u0003\u000e",
    "\u0003\u000e\u0006\u000e\u01e8\n\u000e\r\u000e\u000e\u000e\u01e9\u0003",
    "\u000e\u0007\u000e\u01ed\n\u000e\f\u000e\u000e\u000e\u01f0\u000b\u000e",
    "\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f",
    "\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f",
    "\u0005\u000f\u01fe\n\u000f\u0003\u0010\u0005\u0010\u0201\n\u0010\u0003",
    "\u0010\u0003\u0010\u0003\u0010\u0003\u0010\u0003\u0010\u0003\u0010\u0005",
    "\u0010\u0209\n\u0010\u0003\u0010\u0006\u0010\u020c\n\u0010\r\u0010\u000e",
    "\u0010\u020d\u0003\u0010\u0006\u0010\u0211\n\u0010\r\u0010\u000e\u0010",
    "\u0212\u0003\u0010\u0003\u0010\u0007\u0010\u0217\n\u0010\f\u0010\u000e",
    "\u0010\u021a\u000b\u0010\u0003\u0011\u0003\u0011\u0003\u0011\u0005\u0011",
    "\u021f\n\u0011\u0003\u0012\u0005\u0012\u0222\n\u0012\u0003\u0012\u0003",
    "\u0012\u0005\u0012\u0226\n\u0012\u0003\u0012\u0003\u0012\u0005\u0012",
    "\u022a\n\u0012\u0003\u0012\u0005\u0012\u022d\n\u0012\u0003\u0012\u0003",
    "\u0012\u0005\u0012\u0231\n\u0012\u0003\u0012\u0006\u0012\u0234\n\u0012",
    "\r\u0012\u000e\u0012\u0235\u0003\u0013\u0003\u0013\u0005\u0013\u023a",
    "\n\u0013\u0003\u0013\u0003\u0013\u0003\u0013\u0003\u0013\u0003\u0013",
    "\u0005\u0013\u0241\n\u0013\u0003\u0013\u0003\u0013\u0003\u0013\u0003",
    "\u0013\u0003\u0013\u0003\u0013\u0005\u0013\u0249\n\u0013\u0007\u0013",
    "\u024b\n\u0013\f\u0013\u000e\u0013\u024e\u000b\u0013\u0003\u0014\u0005",
    "\u0014\u0251\n\u0014\u0003\u0014\u0003\u0014\u0003\u0014\u0003\u0014",
    "\u0003\u0014\u0003\u0014\u0003\u0014\u0005\u0014\u025a\n\u0014\u0003",
    "\u0015\u0005\u0015\u025d\n\u0015\u0003\u0015\u0003\u0015\u0003\u0015",
    "\u0003\u0015\u0003\u0015\u0003\u0015\u0005\u0015\u0265\n\u0015\u0003",
    "\u0015\u0003\u0015\u0005\u0015\u0269\n\u0015\u0003\u0015\u0006\u0015",
    "\u026c\n\u0015\r\u0015\u000e\u0015\u026d\u0003\u0015\u0006\u0015\u0271",
    "\n\u0015\r\u0015\u000e\u0015\u0272\u0005\u0015\u0275\n\u0015\u0003\u0015",
    "\u0003\u0015\u0006\u0015\u0279\n\u0015\r\u0015\u000e\u0015\u027a\u0003",
    "\u0016\u0003\u0016\u0003\u0017\u0003\u0017\u0003\u0018\u0003\u0018\u0003",
    "\u0019\u0003\u0019\u0003\u0019\u0003\u0019\u0005\u0019\u0287\n\u0019",
    "\u0003\u0019\u0003\u0019\u0005\u0019\u028b\n\u0019\u0003\u0019\u0003",
    "\u0019\u0005\u0019\u028f\n\u0019\u0003\u0019\u0003\u0019\u0005\u0019",
    "\u0293\n\u0019\u0003\u0019\u0007\u0019\u0296\n\u0019\f\u0019\u000e\u0019",
    "\u0299\u000b\u0019\u0003\u001a\u0003\u001a\u0006\u001a\u029d\n\u001a",
    "\r\u001a\u000e\u001a\u029e\u0003\u001a\u0005\u001a\u02a2\n\u001a\u0003",
    "\u001a\u0007\u001a\u02a5\n\u001a\f\u001a\u000e\u001a\u02a8\u000b\u001a",
    "\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b",
    "\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b",
    "\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b",
    "\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b",
    "\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b",
    "\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b",
    "\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b",
    "\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b",
    "\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b",
    "\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b",
    "\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b",
    "\u0003\u001b\u0005\u001b\u02ed\n\u001b\u0003\u001c\u0003\u001c\u0003",
    "\u001c\u0003\u001c\u0005\u001c\u02f3\n\u001c\u0003\u001c\u0003\u001c",
    "\u0005\u001c\u02f7\n\u001c\u0003\u001c\u0005\u001c\u02fa\n\u001c\u0003",
    "\u001d\u0003\u001d\u0003\u001e\u0003\u001e\u0003\u001e\u0003\u001e\u0003",
    "\u001f\u0003\u001f\u0003\u001f\u0003\u001f\u0003 \u0003 \u0003 \u0003",
    " \u0005 \u030a\n \u0003 \u0003 \u0005 \u030e\n \u0003 \u0007 \u0311",
    "\n \f \u000e \u0314\u000b \u0005 \u0316\n \u0003!\u0003!\u0003!\u0005",
    "!\u031b\n!\u0003!\u0003!\u0003!\u0003!\u0005!\u0321\n!\u0003!\u0003",
    "!\u0005!\u0325\n!\u0003!\u0007!\u0328\n!\f!\u000e!\u032b\u000b!\u0003",
    "\"\u0003\"\u0005\"\u032f\n\"\u0003\"\u0003\"\u0005\"\u0333\n\"\u0003",
    "\"\u0005\"\u0336\n\"\u0003\"\u0003\"\u0005\"\u033a\n\"\u0003\"\u0003",
    "\"\u0003#\u0003#\u0005#\u0340\n#\u0003#\u0003#\u0005#\u0344\n#\u0003",
    "#\u0003#\u0003$\u0003$\u0003$\u0005$\u034b\n$\u0003$\u0003$\u0003$\u0003",
    "$\u0005$\u0351\n$\u0003$\u0005$\u0354\n$\u0003$\u0003$\u0003$\u0005",
    "$\u0359\n$\u0003$\u0003$\u0003$\u0003$\u0003$\u0003$\u0003$\u0003$\u0005",
    "$\u0363\n$\u0003$\u0005$\u0366\n$\u0003$\u0005$\u0369\n$\u0003$\u0003",
    "$\u0005$\u036d\n$\u0003%\u0003%\u0003%\u0003%\u0005%\u0373\n%\u0003",
    "%\u0003%\u0005%\u0377\n%\u0003%\u0007%\u037a\n%\f%\u000e%\u037d\u000b",
    "%\u0003&\u0003&\u0003&\u0003&\u0005&\u0383\n&\u0003&\u0003&\u0005&\u0387",
    "\n&\u0003&\u0003&\u0005&\u038b\n&\u0003&\u0003&\u0005&\u038f\n&\u0003",
    "&\u0005&\u0392\n&\u0003\'\u0003\'\u0006\'\u0396\n\'\r\'\u000e\'\u0397",
    "\u0003\'\u0003\'\u0006\'\u039c\n\'\r\'\u000e\'\u039d\u0005\'\u03a0\n",
    "\'\u0003\'\u0003\'\u0003\'\u0003\'\u0003\'\u0003\'\u0003\'\u0006\'\u03a9",
    "\n\'\r\'\u000e\'\u03aa\u0003\'\u0003\'\u0006\'\u03af\n\'\r\'\u000e\'",
    "\u03b0\u0005\'\u03b3\n\'\u0003\'\u0003\'\u0003\'\u0003\'\u0006\'\u03b9",
    "\n\'\r\'\u000e\'\u03ba\u0003\'\u0003\'\u0006\'\u03bf\n\'\r\'\u000e\'",
    "\u03c0\u0003\'\u0003\'\u0003\'\u0003\'\u0003\'\u0003\'\u0005\'\u03c9",
    "\n\'\u0003(\u0003(\u0003)\u0003)\u0003)\u0005)\u03d0\n)\u0003)\u0003",
    ")\u0003)\u0003)\u0006)\u03d6\n)\r)\u000e)\u03d7\u0003)\u0007)\u03db",
    "\n)\f)\u000e)\u03de\u000b)\u0003)\u0003)\u0003*\u0003*\u0005*\u03e4",
    "\n*\u0003*\u0003*\u0005*\u03e8\n*\u0003*\u0005*\u03eb\n*\u0003*\u0006",
    "*\u03ee\n*\r*\u000e*\u03ef\u0003+\u0003+\u0003+\u0003+\u0005+\u03f6",
    "\n+\u0003+\u0003+\u0005+\u03fa\n+\u0003+\u0007+\u03fd\n+\f+\u000e+\u0400",
    "\u000b+\u0003,\u0003,\u0003,\u0003,\u0003-\u0003-\u0003-\u0005-\u0409",
    "\n-\u0003-\u0003-\u0003-\u0003-\u0005-\u040f\n-\u0003-\u0003-\u0003",
    ".\u0003.\u0003/\u0003/\u0003/\u0003/\u0005/\u0419\n/\u0003/\u0003/\u0005",
    "/\u041d\n/\u0003/\u0003/\u00030\u00030\u00030\u00030\u00030\u00030\u0005",
    "0\u0427\n0\u00030\u00030\u00030\u00030\u00030\u00060\u042e\n0\r0\u000e",
    "0\u042f\u00030\u00030\u00060\u0434\n0\r0\u000e0\u0435\u00050\u0438\n",
    "0\u00030\u00030\u00030\u00050\u043d\n0\u00031\u00031\u00031\u00031\u0005",
    "1\u0443\n1\u00031\u00031\u00051\u0447\n1\u00031\u00051\u044a\n1\u0003",
    "1\u00031\u00051\u044e\n1\u00031\u00031\u00031\u00031\u00031\u00031\u0003",
    "1\u00031\u00031\u00051\u0459\n1\u00031\u00061\u045c\n1\r1\u000e1\u045d",
    "\u00031\u00031\u00061\u0462\n1\r1\u000e1\u0463\u00051\u0466\n1\u0003",
    "1\u00031\u00031\u00031\u00051\u046c\n1\u00051\u046e\n1\u00032\u0003",
    "2\u00032\u00052\u0473\n2\u00032\u00032\u00052\u0477\n2\u00032\u0003",
    "2\u00032\u00032\u00052\u047d\n2\u00032\u00052\u0480\n2\u00032\u0003",
    "2\u00052\u0484\n2\u00032\u00062\u0487\n2\r2\u000e2\u0488\u00032\u0003",
    "2\u00062\u048d\n2\r2\u000e2\u048e\u00052\u0491\n2\u00032\u00032\u0003",
    "3\u00033\u00033\u00033\u00053\u0499\n3\u00033\u00033\u00053\u049d\n",
    "3\u00033\u00053\u04a0\n3\u00033\u00053\u04a3\n3\u00033\u00033\u0005",
    "3\u04a7\n3\u00033\u00033\u00034\u00034\u00034\u00034\u00035\u00035\u0003",
    "5\u00035\u00036\u00036\u00036\u00036\u00036\u00036\u00036\u00036\u0003",
    "6\u00036\u00036\u00056\u04be\n6\u00036\u00036\u00076\u04c2\n6\f6\u000e",
    "6\u04c5\u000b6\u00036\u00056\u04c8\n6\u00036\u00036\u00056\u04cc\n6",
    "\u00037\u00037\u00037\u00037\u00037\u00037\u00067\u04d4\n7\r7\u000e",
    "7\u04d5\u00037\u00037\u00067\u04da\n7\r7\u000e7\u04db\u00057\u04de\n",
    "7\u00038\u00038\u00039\u00039\u00039\u00039\u00039\u00039\u00069\u04e8",
    "\n9\r9\u000e9\u04e9\u00039\u00039\u00069\u04ee\n9\r9\u000e9\u04ef\u0005",
    "9\u04f2\n9\u0003:\u0003:\u0006:\u04f6\n:\r:\u000e:\u04f7\u0003:\u0003",
    ":\u0006:\u04fc\n:\r:\u000e:\u04fd\u0005:\u0500\n:\u0003;\u0003;\u0003",
    ";\u0003;\u0003<\u0003<\u0003<\u0003<\u0005<\u050a\n<\u0003<\u0003<\u0005",
    "<\u050e\n<\u0003<\u0006<\u0511\n<\r<\u000e<\u0512\u0003=\u0003=\u0003",
    "=\u0003=\u0003>\u0003>\u0005>\u051b\n>\u0003>\u0003>\u0005>\u051f\n",
    ">\u0003>\u0003>\u0005>\u0523\n>\u0003>\u0003>\u0003?\u0003?\u0003?\u0003",
    "?\u0005?\u052b\n?\u0003?\u0003?\u0005?\u052f\n?\u0003?\u0003?\u0003",
    "@\u0003@\u0003@\u0003@\u0003A\u0003A\u0003A\u0003A\u0005A\u053b\nA\u0003",
    "A\u0003A\u0005A\u053f\nA\u0003A\u0003A\u0003A\u0003A\u0003A\u0005A\u0546",
    "\nA\u0005A\u0548\nA\u0003B\u0003B\u0003B\u0003B\u0005B\u054e\nB\u0003",
    "B\u0003B\u0005B\u0552\nB\u0003B\u0003B\u0003C\u0003C\u0007C\u0558\n",
    "C\fC\u000eC\u055b\u000bC\u0003C\u0005C\u055e\nC\u0003C\u0003C\u0003",
    "D\u0003D\u0003D\u0003D\u0003D\u0003D\u0006D\u0568\nD\rD\u000eD\u0569",
    "\u0003D\u0003D\u0006D\u056e\nD\rD\u000eD\u056f\u0005D\u0572\nD\u0003",
    "E\u0003E\u0003E\u0003E\u0003E\u0003E\u0006E\u057a\nE\rE\u000eE\u057b",
    "\u0003E\u0003E\u0006E\u0580\nE\rE\u000eE\u0581\u0005E\u0584\nE\u0003",
    "F\u0003F\u0006F\u0588\nF\rF\u000eF\u0589\u0003F\u0003F\u0006F\u058e",
    "\nF\rF\u000eF\u058f\u0005F\u0592\nF\u0003G\u0003G\u0005G\u0596\nG\u0003",
    "G\u0003G\u0005G\u059a\nG\u0003G\u0003G\u0005G\u059e\nG\u0003G\u0003",
    "G\u0003H\u0003H\u0003H\u0003H\u0003I\u0003I\u0003I\u0003I\u0003I\u0003",
    "I\u0003I\u0003I\u0003J\u0003J\u0003J\u0003J\u0003J\u0003J\u0005J\u05b4",
    "\nJ\u0003J\u0003J\u0003J\u0005J\u05b9\nJ\u0003K\u0003K\u0003K\u0003",
    "K\u0003K\u0003K\u0003K\u0003K\u0005K\u05c3\nK\u0003K\u0003K\u0005K\u05c7",
    "\nK\u0003K\u0007K\u05ca\nK\fK\u000eK\u05cd\u000bK\u0003L\u0003L\u0003",
    "L\u0003L\u0003L\u0003L\u0003L\u0003L\u0005L\u05d7\nL\u0003L\u0003L\u0005",
    "L\u05db\nL\u0003L\u0007L\u05de\nL\fL\u000eL\u05e1\u000bL\u0003M\u0003",
    "M\u0003M\u0003M\u0003M\u0003M\u0003M\u0003M\u0003M\u0003M\u0003M\u0005",
    "M\u05ee\nM\u0003M\u0003M\u0005M\u05f2\nM\u0003M\u0003M\u0003M\u0003",
    "M\u0003M\u0003M\u0003M\u0005M\u05fb\nM\u0003M\u0003M\u0005M\u05ff\n",
    "M\u0003M\u0005M\u0602\nM\u0003N\u0003N\u0005N\u0606\nN\u0003N\u0003",
    "N\u0005N\u060a\nN\u0003N\u0005N\u060d\nN\u0007N\u060f\nN\fN\u000eN\u0612",
    "\u000bN\u0003N\u0005N\u0615\nN\u0003N\u0005N\u0618\nN\u0003N\u0003N",
    "\u0005N\u061c\nN\u0003N\u0005N\u061f\nN\u0006N\u0621\nN\rN\u000eN\u0622",
    "\u0005N\u0625\nN\u0003O\u0003O\u0005O\u0629\nO\u0003O\u0003O\u0005O",
    "\u062d\nO\u0003O\u0003O\u0005O\u0631\nO\u0003O\u0003O\u0005O\u0635\n",
    "O\u0003O\u0005O\u0638\nO\u0003P\u0003P\u0003P\u0003P\u0005P\u063e\n",
    "P\u0003P\u0003P\u0005P\u0642\nP\u0003P\u0005P\u0645\nP\u0003Q\u0003",
    "Q\u0003Q\u0005Q\u064a\nQ\u0003Q\u0003Q\u0005Q\u064e\nQ\u0003Q\u0003",
    "Q\u0003Q\u0003Q\u0005Q\u0654\nQ\u0003Q\u0005Q\u0657\nQ\u0003Q\u0005",
    "Q\u065a\nQ\u0003Q\u0003Q\u0005Q\u065e\nQ\u0003Q\u0006Q\u0661\nQ\rQ\u000e",
    "Q\u0662\u0003Q\u0003Q\u0006Q\u0667\nQ\rQ\u000eQ\u0668\u0005Q\u066b\n",
    "Q\u0003Q\u0003Q\u0003R\u0003R\u0003R\u0005R\u0672\nR\u0003R\u0003R\u0005",
    "R\u0676\nR\u0003R\u0003R\u0003R\u0003R\u0005R\u067c\nR\u0003R\u0005",
    "R\u067f\nR\u0003R\u0006R\u0682\nR\rR\u000eR\u0683\u0003R\u0003R\u0006",
    "R\u0688\nR\rR\u000eR\u0689\u0005R\u068c\nR\u0003R\u0003R\u0003S\u0003",
    "S\u0003S\u0005S\u0693\nS\u0003S\u0003S\u0005S\u0697\nS\u0003S\u0003",
    "S\u0003S\u0003S\u0005S\u069d\nS\u0003S\u0005S\u06a0\nS\u0003S\u0006",
    "S\u06a3\nS\rS\u000eS\u06a4\u0003S\u0003S\u0006S\u06a9\nS\rS\u000eS\u06aa",
    "\u0005S\u06ad\nS\u0003S\u0003S\u0003T\u0003T\u0003T\u0003T\u0005T\u06b5",
    "\nT\u0003T\u0003T\u0005T\u06b9\nT\u0003T\u0005T\u06bc\nT\u0003T\u0005",
    "T\u06bf\nT\u0003T\u0003T\u0005T\u06c3\nT\u0003T\u0003T\u0003U\u0003",
    "U\u0003U\u0003U\u0005U\u06cb\nU\u0003U\u0003U\u0005U\u06cf\nU\u0003",
    "U\u0003U\u0005U\u06d3\nU\u0005U\u06d5\nU\u0003U\u0005U\u06d8\nU\u0003",
    "V\u0003V\u0003V\u0005V\u06dd\nV\u0003W\u0003W\u0003W\u0003W\u0005W\u06e3",
    "\nW\u0003W\u0003W\u0005W\u06e7\nW\u0003W\u0003W\u0005W\u06eb\nW\u0003",
    "W\u0007W\u06ee\nW\fW\u000eW\u06f1\u000bW\u0003X\u0003X\u0005X\u06f5",
    "\nX\u0003X\u0003X\u0005X\u06f9\nX\u0003X\u0003X\u0005X\u06fd\nX\u0003",
    "X\u0003X\u0003X\u0005X\u0702\nX\u0003Y\u0003Y\u0003Z\u0003Z\u0003Z\u0003",
    "Z\u0005Z\u070a\nZ\u0005Z\u070c\nZ\u0003[\u0003[\u0003\\\u0003\\\u0003",
    "\\\u0003\\\u0003]\u0003]\u0003]\u0003]\u0005]\u0718\n]\u0003]\u0003",
    "]\u0005]\u071c\n]\u0003]\u0003]\u0003^\u0003^\u0003^\u0003^\u0005^\u0724",
    "\n^\u0003^\u0003^\u0005^\u0728\n^\u0003^\u0003^\u0003_\u0003_\u0003",
    "_\u0003_\u0005_\u0730\n_\u0003_\u0003_\u0005_\u0734\n_\u0003_\u0003",
    "_\u0005_\u0738\n_\u0003_\u0003_\u0005_\u073c\n_\u0003_\u0003_\u0005",
    "_\u0740\n_\u0003_\u0003_\u0005_\u0744\n_\u0003_\u0003_\u0003`\u0003",
    "`\u0003`\u0003`\u0005`\u074c\n`\u0003`\u0003`\u0005`\u0750\n`\u0003",
    "`\u0003`\u0003a\u0003a\u0003a\u0003a\u0003a\u0003a\u0006a\u075a\na\r",
    "a\u000ea\u075b\u0003a\u0007a\u075f\na\fa\u000ea\u0762\u000ba\u0003a",
    "\u0005a\u0765\na\u0003a\u0003a\u0003b\u0003b\u0003b\u0003b\u0005b\u076d",
    "\nb\u0003b\u0005b\u0770\nb\u0003b\u0007b\u0773\nb\fb\u000eb\u0776\u000b",
    "b\u0003b\u0006b\u0779\nb\rb\u000eb\u077a\u0005b\u077d\nb\u0003b\u0003",
    "b\u0006b\u0781\nb\rb\u000eb\u0782\u0005b\u0785\nb\u0003c\u0003c\u0003",
    "c\u0005c\u078a\nc\u0003c\u0003c\u0005c\u078e\nc\u0003c\u0007c\u0791",
    "\nc\fc\u000ec\u0794\u000bc\u0005c\u0796\nc\u0003d\u0003d\u0005d\u079a",
    "\nd\u0003d\u0003d\u0005d\u079e\nd\u0003d\u0003d\u0003d\u0003d\u0003",
    "d\u0003d\u0003d\u0003d\u0003d\u0005d\u07a9\nd\u0003e\u0003e\u0003e\u0003",
    "e\u0005e\u07af\ne\u0003e\u0003e\u0005e\u07b3\ne\u0003e\u0005e\u07b6",
    "\ne\u0003f\u0003f\u0003f\u0003f\u0005f\u07bc\nf\u0003f\u0003f\u0005",
    "f\u07c0\nf\u0003f\u0003f\u0003g\u0003g\u0003g\u0003g\u0005g\u07c8\n",
    "g\u0003g\u0003g\u0005g\u07cc\ng\u0003g\u0003g\u0003h\u0003h\u0003i\u0003",
    "i\u0003i\u0005i\u07d5\ni\u0003i\u0003i\u0005i\u07d9\ni\u0003i\u0003",
    "i\u0003i\u0003i\u0005i\u07df\ni\u0003i\u0005i\u07e2\ni\u0003i\u0006",
    "i\u07e5\ni\ri\u000ei\u07e6\u0003i\u0003i\u0006i\u07eb\ni\ri\u000ei\u07ec",
    "\u0005i\u07ef\ni\u0003i\u0003i\u0003j\u0003j\u0005j\u07f5\nj\u0003j",
    "\u0003j\u0005j\u07f9\nj\u0003j\u0003j\u0003k\u0003k\u0003k\u0005k\u0800",
    "\nk\u0003k\u0003k\u0003k\u0003k\u0006k\u0806\nk\rk\u000ek\u0807\u0003",
    "k\u0007k\u080b\nk\fk\u000ek\u080e\u000bk\u0003k\u0003k\u0003l\u0003",
    "l\u0005l\u0814\nl\u0003l\u0003l\u0005l\u0818\nl\u0003l\u0005l\u081b",
    "\nl\u0003l\u0005l\u081e\nl\u0003l\u0005l\u0821\nl\u0003l\u0003l\u0005",
    "l\u0825\nl\u0003l\u0006l\u0828\nl\rl\u000el\u0829\u0003m\u0003m\u0003",
    "m\u0003m\u0003m\u0003m\u0003m\u0005m\u0833\nm\u0003n\u0003n\u0003n\u0003",
    "n\u0003o\u0003o\u0003o\u0003o\u0005o\u083d\no\u0003o\u0003o\u0005o\u0841",
    "\no\u0003o\u0003o\u0003o\u0003o\u0003o\u0005o\u0848\no\u0005o\u084a",
    "\no\u0003p\u0003p\u0003p\u0003p\u0005p\u0850\np\u0003p\u0003p\u0005",
    "p\u0854\np\u0003p\u0003p\u0005p\u0858\np\u0003p\u0007p\u085b\np\fp\u000e",
    "p\u085e\u000bp\u0003p\u0005p\u0861\np\u0003p\u0003p\u0003p\u0003p\u0003",
    "p\u0003p\u0003p\u0003p\u0003p\u0003p\u0003p\u0005p\u086e\np\u0003p\u0003",
    "p\u0005p\u0872\np\u0003p\u0003p\u0003p\u0003p\u0005p\u0878\np\u0003",
    "p\u0003p\u0003p\u0003p\u0003p\u0003p\u0005p\u0880\np\u0003p\u0003p\u0005",
    "p\u0884\np\u0003p\u0003p\u0005p\u0888\np\u0003p\u0003p\u0005p\u088c",
    "\np\u0003p\u0003p\u0005p\u0890\np\u0003p\u0003p\u0005p\u0894\np\u0003",
    "p\u0003p\u0003p\u0005p\u0899\np\u0003p\u0003p\u0005p\u089d\np\u0003",
    "p\u0003p\u0003p\u0005p\u08a2\np\u0003p\u0003p\u0005p\u08a6\np\u0003",
    "p\u0003p\u0003p\u0005p\u08ab\np\u0003p\u0003p\u0005p\u08af\np\u0003",
    "p\u0003p\u0003p\u0005p\u08b4\np\u0003p\u0003p\u0005p\u08b8\np\u0003",
    "p\u0003p\u0003p\u0005p\u08bd\np\u0003p\u0003p\u0005p\u08c1\np\u0003",
    "p\u0003p\u0003p\u0005p\u08c6\np\u0003p\u0003p\u0005p\u08ca\np\u0003",
    "p\u0003p\u0003p\u0005p\u08cf\np\u0003p\u0003p\u0005p\u08d3\np\u0003",
    "p\u0003p\u0003p\u0005p\u08d8\np\u0003p\u0003p\u0005p\u08dc\np\u0003",
    "p\u0003p\u0003p\u0005p\u08e1\np\u0003p\u0003p\u0005p\u08e5\np\u0003",
    "p\u0003p\u0003p\u0005p\u08ea\np\u0003p\u0003p\u0005p\u08ee\np\u0003",
    "p\u0003p\u0003p\u0005p\u08f3\np\u0003p\u0003p\u0005p\u08f7\np\u0003",
    "p\u0007p\u08fa\np\fp\u000ep\u08fd\u000bp\u0003q\u0003q\u0003q\u0005",
    "q\u0902\nq\u0003q\u0003q\u0003q\u0005q\u0907\nq\u0003q\u0003q\u0003",
    "r\u0003r\u0005r\u090d\nr\u0003r\u0003r\u0005r\u0911\nr\u0003r\u0007",
    "r\u0914\nr\fr\u000er\u0917\u000br\u0003s\u0003s\u0005s\u091b\ns\u0003",
    "s\u0005s\u091e\ns\u0003s\u0003s\u0005s\u0922\ns\u0003s\u0003s\u0005",
    "s\u0926\ns\u0005s\u0928\ns\u0003s\u0003s\u0005s\u092c\ns\u0005s\u092e",
    "\ns\u0003s\u0003s\u0005s\u0932\ns\u0003t\u0003t\u0003t\u0003t\u0006",
    "t\u0938\nt\rt\u000et\u0939\u0003t\u0007t\u093d\nt\ft\u000et\u0940\u000b",
    "t\u0003t\u0007t\u0943\nt\ft\u000et\u0946\u000bt\u0003t\u0003t\u0003",
    "u\u0003u\u0003u\u0003u\u0005u\u094e\nu\u0003u\u0003u\u0005u\u0952\n",
    "u\u0003u\u0003u\u0003v\u0003v\u0003v\u0003v\u0005v\u095a\nv\u0003v\u0003",
    "v\u0006v\u095e\nv\rv\u000ev\u095f\u0003v\u0003v\u0006v\u0964\nv\rv\u000e",
    "v\u0965\u0005v\u0968\nv\u0003v\u0003v\u0003w\u0003w\u0003w\u0003w\u0005",
    "w\u0970\nw\u0003w\u0003w\u0005w\u0974\nw\u0003w\u0005w\u0977\nw\u0003",
    "x\u0003x\u0005x\u097b\nx\u0003y\u0003y\u0003y\u0003y\u0005y\u0981\n",
    "y\u0003y\u0005y\u0984\ny\u0003y\u0003y\u0005y\u0988\ny\u0003y\u0003",
    "y\u0005y\u098c\ny\u0003y\u0003y\u0005y\u0990\ny\u0003z\u0003z\u0003",
    "z\u0005z\u0995\nz\u0003z\u0003z\u0005z\u0999\nz\u0003z\u0003z\u0005",
    "z\u099d\nz\u0003z\u0005z\u09a0\nz\u0003z\u0003z\u0005z\u09a4\nz\u0003",
    "z\u0003z\u0005z\u09a8\nz\u0003z\u0003z\u0005z\u09ac\nz\u0003{\u0003",
    "{\u0005{\u09b0\n{\u0003|\u0003|\u0003|\u0005|\u09b5\n|\u0003}\u0005",
    "}\u09b8\n}\u0003}\u0003}\u0003}\u0005}\u09bd\n}\u0003}\u0003}\u0005",
    "}\u09c1\n}\u0003}\u0005}\u09c4\n}\u0003~\u0003~\u0003~\u0003~\u0005",
    "~\u09ca\n~\u0003\u007f\u0003\u007f\u0005\u007f\u09ce\n\u007f\u0003\u007f",
    "\u0005\u007f\u09d1\n\u007f\u0003\u0080\u0003\u0080\u0003\u0080\u0005",
    "\u0080\u09d6\n\u0080\u0003\u0080\u0005\u0080\u09d9\n\u0080\u0003\u0080",
    "\u0005\u0080\u09dc\n\u0080\u0003\u0080\u0003\u0080\u0005\u0080\u09e0",
    "\n\u0080\u0003\u0080\u0003\u0080\u0005\u0080\u09e4\n\u0080\u0005\u0080",
    "\u09e6\n\u0080\u0003\u0080\u0006\u0080\u09e9\n\u0080\r\u0080\u000e\u0080",
    "\u09ea\u0003\u0080\u0005\u0080\u09ee\n\u0080\u0003\u0081\u0003\u0081",
    "\u0005\u0081\u09f2\n\u0081\u0003\u0081\u0005\u0081\u09f5\n\u0081\u0003",
    "\u0081\u0003\u0081\u0005\u0081\u09f9\n\u0081\u0003\u0081\u0003\u0081",
    "\u0005\u0081\u09fd\n\u0081\u0005\u0081\u09ff\n\u0081\u0003\u0081\u0003",
    "\u0081\u0003\u0082\u0003\u0082\u0005\u0082\u0a05\n\u0082\u0003\u0082",
    "\u0006\u0082\u0a08\n\u0082\r\u0082\u000e\u0082\u0a09\u0003\u0082\u0005",
    "\u0082\u0a0d\n\u0082\u0003\u0083\u0005\u0083\u0a10\n\u0083\u0003\u0083",
    "\u0003\u0083\u0003\u0083\u0005\u0083\u0a15\n\u0083\u0003\u0084\u0003",
    "\u0084\u0003\u0085\u0005\u0085\u0a1a\n\u0085\u0003\u0085\u0005\u0085",
    "\u0a1d\n\u0085\u0003\u0085\u0003\u0085\u0005\u0085\u0a21\n\u0085\u0007",
    "\u0085\u0a23\n\u0085\f\u0085\u000e\u0085\u0a26\u000b\u0085\u0003\u0085",
    "\u0003\u0085\u0005\u0085\u0a2a\n\u0085\u0003\u0085\u0003\u0085\u0005",
    "\u0085\u0a2e\n\u0085\u0003\u0085\u0005\u0085\u0a31\n\u0085\u0007\u0085",
    "\u0a33\n\u0085\f\u0085\u000e\u0085\u0a36\u000b\u0085\u0003\u0086\u0003",
    "\u0086\u0005\u0086\u0a3a\n\u0086\u0003\u0086\u0003\u0086\u0003\u0087",
    "\u0003\u0087\u0003\u0087\u0005\u0087\u0a41\n\u0087\u0003\u0088\u0003",
    "\u0088\u0005\u0088\u0a45\n\u0088\u0003\u0088\u0003\u0088\u0005\u0088",
    "\u0a49\n\u0088\u0003\u0088\u0003\u0088\u0005\u0088\u0a4d\n\u0088\u0003",
    "\u0088\u0007\u0088\u0a50\n\u0088\f\u0088\u000e\u0088\u0a53\u000b\u0088",
    "\u0005\u0088\u0a55\n\u0088\u0003\u0088\u0005\u0088\u0a58\n\u0088\u0003",
    "\u0088\u0003\u0088\u0003\u0089\u0003\u0089\u0005\u0089\u0a5e\n\u0089",
    "\u0003\u0089\u0003\u0089\u0005\u0089\u0a62\n\u0089\u0003\u0089\u0003",
    "\u0089\u0005\u0089\u0a66\n\u0089\u0003\u0089\u0003\u0089\u0005\u0089",
    "\u0a6a\n\u0089\u0003\u0089\u0005\u0089\u0a6d\n\u0089\u0003\u0089\u0003",
    "\u0089\u0005\u0089\u0a71\n\u0089\u0003\u0089\u0005\u0089\u0a74\n\u0089",
    "\u0003\u0089\u0003\u0089\u0005\u0089\u0a78\n\u0089\u0003\u0089\u0005",
    "\u0089\u0a7b\n\u0089\u0003\u0089\u0005\u0089\u0a7e\n\u0089\u0003\u008a",
    "\u0003\u008a\u0005\u008a\u0a82\n\u008a\u0003\u008a\u0003\u008a\u0003",
    "\u008b\u0003\u008b\u0005\u008b\u0a88\n\u008b\u0003\u008b\u0003\u008b",
    "\u0005\u008b\u0a8c\n\u008b\u0003\u008b\u0007\u008b\u0a8f\n\u008b\f\u008b",
    "\u000e\u008b\u0a92\u000b\u008b\u0003\u008c\u0003\u008c\u0003\u008c\u0003",
    "\u008c\u0003\u008c\u0005\u008c\u0a99\n\u008c\u0003\u008c\u0003\u008c",
    "\u0003\u008d\u0003\u008d\u0006\u008d\u0a9f\n\u008d\r\u008d\u000e\u008d",
    "\u0aa0\u0003\u008d\u0003\u008d\u0003\u008d\u0006\u008d\u0aa6\n\u008d",
    "\r\u008d\u000e\u008d\u0aa7\u0003\u008d\u0005\u008d\u0aab\n\u008d\u0003",
    "\u008e\u0003\u008e\u0003\u008e\u0003\u008e\u0005\u008e\u0ab1\n\u008e",
    "\u0003\u008e\u0003\u008e\u0003\u008e\u0005\u008e\u0ab6\n\u008e\u0003",
    "\u008f\u0003\u008f\u0003\u0090\u0003\u0090\u0003\u0090\u0007\u0090\u0abd",
    "\n\u0090\f\u0090\u000e\u0090\u0ac0\u000b\u0090\u0003\u0090\u0003\u0090",
    "\u0003\u0090\u0006\u0090\u0ac5\n\u0090\r\u0090\u000e\u0090\u0ac6\u0005",
    "\u0090\u0ac9\n\u0090\u0003\u0091\u0003\u0091\u0003\u0092\u0003\u0092",
    "\u0003\u0092\u0007\u0092\u0ad0\n\u0092\f\u0092\u000e\u0092\u0ad3\u000b",
    "\u0092\u0003\u0093\u0003\u0093\u0005\u0093\u0ad7\n\u0093\u0003\u0093",
    "\u0003\u0093\u0005\u0093\u0adb\n\u0093\u0003\u0094\u0003\u0094\u0005",
    "\u0094\u0adf\n\u0094\u0003\u0094\u0003\u0094\u0005\u0094\u0ae3\n\u0094",
    "\u0003\u0094\u0005\u0094\u0ae6\n\u0094\u0003\u0095\u0003\u0095\u0003",
    "\u0095\u0003\u0096\u0003\u0096\u0003\u0097\u0003\u0097\u0003\u0098\u0003",
    "\u0098\u0003\u0099\u0003\u0099\u0005\u0099\u0af3\n\u0099\u0003\u0099",
    "\u0005\u0099\u0af6\n\u0099\u0003\u0099\u0003\u0099\u0005\u0099\u0afa",
    "\n\u0099\u0003\u0099\u0005\u0099\u0afd\n\u0099\u0003\u009a\u0003\u009a",
    "\u0003\u009b\u0003\u009b\u0003\u009c\u0003\u009c\u0003\u009c\u0002\u0003",
    "\u00de\u009d\u0002\u0004\u0006\b\n\f\u000e\u0010\u0012\u0014\u0016\u0018",
    "\u001a\u001c\u001e \"$&(*,.02468:<>@BDFHJLNPRTVXZ\\^`bdfhjlnprtvxz|",
    "~\u0080\u0082\u0084\u0086\u0088\u008a\u008c\u008e\u0090\u0092\u0094",
    "\u0096\u0098\u009a\u009c\u009e\u00a0\u00a2\u00a4\u00a6\u00a8\u00aa\u00ac",
    "\u00ae\u00b0\u00b2\u00b4\u00b6\u00b8\u00ba\u00bc\u00be\u00c0\u00c2\u00c4",
    "\u00c6\u00c8\u00ca\u00cc\u00ce\u00d0\u00d2\u00d4\u00d6\u00d8\u00da\u00dc",
    "\u00de\u00e0\u00e2\u00e4\u00e6\u00e8\u00ea\u00ec\u00ee\u00f0\u00f2\u00f4",
    "\u00f6\u00f8\u00fa\u00fc\u00fe\u0100\u0102\u0104\u0106\u0108\u010a\u010c",
    "\u010e\u0110\u0112\u0114\u0116\u0118\u011a\u011c\u011e\u0120\u0122\u0124",
    "\u0126\u0128\u012a\u012c\u012e\u0130\u0132\u0134\u0136\u0002\u0019\u0004",
    "\u0002\u000e\u000e\u00a1\u00a1\u0003\u0002\u001d(\u0004\u0002\u00aa",
    "\u00aa\u00ae\u00ae\u0003\u0002?C\u0005\u0002\u00bd\u00bd\u00c7\u00c7",
    "\u00cc\u00cc\u0003\u0002rs\u0007\u0002\t\t\u000e\u000eQQ{{\u0085\u0085",
    "\u0004\u0002\u0088\u0089\u00b2\u00b2\u0004\u0002^`\u0098\u0098\u0004",
    "\u0002\u00b8\u00b8\u00d0\u00d0\u0004\u0002\u009a\u009a\u00a0\u00a0\u0004",
    "\u0002\u00c6\u00c6\u00cb\u00cb\u0004\u0002\u00ba\u00ba\u00c8\u00c8\t",
    "\u0002RR\\\\\u00bd\u00bd\u00bf\u00c0\u00c2\u00c2\u00c5\u00c5\u00c9\u00c9",
    "\u0004\u0002\u0010\u0011||\u0003\u0002\u0010\u0011\r\u0002\u000f\u000f",
    "\u0012\u0012\u0019\u0019\u001b\u001b,,SSWWpp\u0099\u0099\u009e\u009e",
    "\u00ab\u00ab\u0006\u0002DDno\u00a5\u00a5\u00d3\u00d9\u0004\u0002\u007f",
    "\u007f\u0083\u0083\u0005\u0002JJ\u007f\u007f\u0083\u0083\b\u0002\u00b4",
    "\u00b4\u00b6\u00b6\u00bb\u00bb\u00be\u00be\u00c1\u00c1\u00ca\u00ca\u0006",
    "\u0002FFJJ\u007f\u007f\u0083\u0083\r\u0002\u0003\f\u000e/88:>D\\aaf",
    "qtuz\u007f\u0083\u0088\u008a\u00b3\u0002\u0cb8\u0002\u0138\u0003\u0002",
    "\u0002\u0002\u0004\u013c\u0003\u0002\u0002\u0002\u0006\u0186\u0003\u0002",
    "\u0002\u0002\b\u018a\u0003\u0002\u0002\u0002\n\u01a0\u0003\u0002\u0002",
    "\u0002\f\u01a2\u0003\u0002\u0002\u0002\u000e\u01a4\u0003\u0002\u0002",
    "\u0002\u0010\u01ab\u0003\u0002\u0002\u0002\u0012\u01bc\u0003\u0002\u0002",
    "\u0002\u0014\u01cd\u0003\u0002\u0002\u0002\u0016\u01d7\u0003\u0002\u0002",
    "\u0002\u0018\u01e3\u0003\u0002\u0002\u0002\u001a\u01e5\u0003\u0002\u0002",
    "\u0002\u001c\u01fd\u0003\u0002\u0002\u0002\u001e\u0200\u0003\u0002\u0002",
    "\u0002 \u021e\u0003\u0002\u0002\u0002\"\u0221\u0003\u0002\u0002\u0002",
    "$\u0239\u0003\u0002\u0002\u0002&\u0250\u0003\u0002\u0002\u0002(\u025c",
    "\u0003\u0002\u0002\u0002*\u027c\u0003\u0002\u0002\u0002,\u027e\u0003",
    "\u0002\u0002\u0002.\u0280\u0003\u0002\u0002\u00020\u0282\u0003\u0002",
    "\u0002\u00022\u029a\u0003\u0002\u0002\u00024\u02ec\u0003\u0002\u0002",
    "\u00026\u02ee\u0003\u0002\u0002\u00028\u02fb\u0003\u0002\u0002\u0002",
    ":\u02fd\u0003\u0002\u0002\u0002<\u0301\u0003\u0002\u0002\u0002>\u0305",
    "\u0003\u0002\u0002\u0002@\u031a\u0003\u0002\u0002\u0002B\u032c\u0003",
    "\u0002\u0002\u0002D\u033d\u0003\u0002\u0002\u0002F\u034a\u0003\u0002",
    "\u0002\u0002H\u036e\u0003\u0002\u0002\u0002J\u037e\u0003\u0002\u0002",
    "\u0002L\u03c8\u0003\u0002\u0002\u0002N\u03ca\u0003\u0002\u0002\u0002",
    "P\u03cf\u0003\u0002\u0002\u0002R\u03e1\u0003\u0002\u0002\u0002T\u03f1",
    "\u0003\u0002\u0002\u0002V\u0401\u0003\u0002\u0002\u0002X\u0408\u0003",
    "\u0002\u0002\u0002Z\u0412\u0003\u0002\u0002\u0002\\\u0414\u0003\u0002",
    "\u0002\u0002^\u0420\u0003\u0002\u0002\u0002`\u043e\u0003\u0002\u0002",
    "\u0002b\u0472\u0003\u0002\u0002\u0002d\u0494\u0003\u0002\u0002\u0002",
    "f\u04aa\u0003\u0002\u0002\u0002h\u04ae\u0003\u0002\u0002\u0002j\u04cb",
    "\u0003\u0002\u0002\u0002l\u04cd\u0003\u0002\u0002\u0002n\u04df\u0003",
    "\u0002\u0002\u0002p\u04e1\u0003\u0002\u0002\u0002r\u04f3\u0003\u0002",
    "\u0002\u0002t\u0501\u0003\u0002\u0002\u0002v\u0505\u0003\u0002\u0002",
    "\u0002x\u0514\u0003\u0002\u0002\u0002z\u051a\u0003\u0002\u0002\u0002",
    "|\u0526\u0003\u0002\u0002\u0002~\u0532\u0003\u0002\u0002\u0002\u0080",
    "\u0536\u0003\u0002\u0002\u0002\u0082\u0549\u0003\u0002\u0002\u0002\u0084",
    "\u0555\u0003\u0002\u0002\u0002\u0086\u0561\u0003\u0002\u0002\u0002\u0088",
    "\u0573\u0003\u0002\u0002\u0002\u008a\u0585\u0003\u0002\u0002\u0002\u008c",
    "\u0593\u0003\u0002\u0002\u0002\u008e\u05a1\u0003\u0002\u0002\u0002\u0090",
    "\u05a5\u0003\u0002\u0002\u0002\u0092\u05ad\u0003\u0002\u0002\u0002\u0094",
    "\u05ba\u0003\u0002\u0002\u0002\u0096\u05ce\u0003\u0002\u0002\u0002\u0098",
    "\u05e2\u0003\u0002\u0002\u0002\u009a\u0624\u0003\u0002\u0002\u0002\u009c",
    "\u0637\u0003\u0002\u0002\u0002\u009e\u0639\u0003\u0002\u0002\u0002\u00a0",
    "\u0649\u0003\u0002\u0002\u0002\u00a2\u0671\u0003\u0002\u0002\u0002\u00a4",
    "\u0692\u0003\u0002\u0002\u0002\u00a6\u06b0\u0003\u0002\u0002\u0002\u00a8",
    "\u06c6\u0003\u0002\u0002\u0002\u00aa\u06d9\u0003\u0002\u0002\u0002\u00ac",
    "\u06de\u0003\u0002\u0002\u0002\u00ae\u06f2\u0003\u0002\u0002\u0002\u00b0",
    "\u0703\u0003\u0002\u0002\u0002\u00b2\u0705\u0003\u0002\u0002\u0002\u00b4",
    "\u070d\u0003\u0002\u0002\u0002\u00b6\u070f\u0003\u0002\u0002\u0002\u00b8",
    "\u0713\u0003\u0002\u0002\u0002\u00ba\u071f\u0003\u0002\u0002\u0002\u00bc",
    "\u072b\u0003\u0002\u0002\u0002\u00be\u0747\u0003\u0002\u0002\u0002\u00c0",
    "\u0753\u0003\u0002\u0002\u0002\u00c2\u0768\u0003\u0002\u0002\u0002\u00c4",
    "\u0795\u0003\u0002\u0002\u0002\u00c6\u07a8\u0003\u0002\u0002\u0002\u00c8",
    "\u07aa\u0003\u0002\u0002\u0002\u00ca\u07b7\u0003\u0002\u0002\u0002\u00cc",
    "\u07c3\u0003\u0002\u0002\u0002\u00ce\u07cf\u0003\u0002\u0002\u0002\u00d0",
    "\u07d4\u0003\u0002\u0002\u0002\u00d2\u07f2\u0003\u0002\u0002\u0002\u00d4",
    "\u07ff\u0003\u0002\u0002\u0002\u00d6\u0811\u0003\u0002\u0002\u0002\u00d8",
    "\u082b\u0003\u0002\u0002\u0002\u00da\u0834\u0003\u0002\u0002\u0002\u00dc",
    "\u0838\u0003\u0002\u0002\u0002\u00de\u088b\u0003\u0002\u0002\u0002\u00e0",
    "\u0901\u0003\u0002\u0002\u0002\u00e2\u090a\u0003\u0002\u0002\u0002\u00e4",
    "\u0918\u0003\u0002\u0002\u0002\u00e6\u0933\u0003\u0002\u0002\u0002\u00e8",
    "\u0949\u0003\u0002\u0002\u0002\u00ea\u0955\u0003\u0002\u0002\u0002\u00ec",
    "\u096b\u0003\u0002\u0002\u0002\u00ee\u097a\u0003\u0002\u0002\u0002\u00f0",
    "\u097c\u0003\u0002\u0002\u0002\u00f2\u0991\u0003\u0002\u0002\u0002\u00f4",
    "\u09af\u0003\u0002\u0002\u0002\u00f6\u09b1\u0003\u0002\u0002\u0002\u00f8",
    "\u09b7\u0003\u0002\u0002\u0002\u00fa\u09c9\u0003\u0002\u0002\u0002\u00fc",
    "\u09cb\u0003\u0002\u0002\u0002\u00fe\u09d5\u0003\u0002\u0002\u0002\u0100",
    "\u09ef\u0003\u0002\u0002\u0002\u0102\u0a04\u0003\u0002\u0002\u0002\u0104",
    "\u0a0f\u0003\u0002\u0002\u0002\u0106\u0a16\u0003\u0002\u0002\u0002\u0108",
    "\u0a24\u0003\u0002\u0002\u0002\u010a\u0a39\u0003\u0002\u0002\u0002\u010c",
    "\u0a3d\u0003\u0002\u0002\u0002\u010e\u0a42\u0003\u0002\u0002\u0002\u0110",
    "\u0a5d\u0003\u0002\u0002\u0002\u0112\u0a7f\u0003\u0002\u0002\u0002\u0114",
    "\u0a85\u0003\u0002\u0002\u0002\u0116\u0a98\u0003\u0002\u0002\u0002\u0118",
    "\u0aaa\u0003\u0002\u0002\u0002\u011a\u0aac\u0003\u0002\u0002\u0002\u011c",
    "\u0ab7\u0003\u0002\u0002\u0002\u011e\u0ac8\u0003\u0002\u0002\u0002\u0120",
    "\u0aca\u0003\u0002\u0002\u0002\u0122\u0acc\u0003\u0002\u0002\u0002\u0124",
    "\u0ad4\u0003\u0002\u0002\u0002\u0126\u0adc\u0003\u0002\u0002\u0002\u0128",
    "\u0ae7\u0003\u0002\u0002\u0002\u012a\u0aea\u0003\u0002\u0002\u0002\u012c",
    "\u0aec\u0003\u0002\u0002\u0002\u012e\u0aee\u0003\u0002\u0002\u0002\u0130",
    "\u0af2\u0003\u0002\u0002\u0002\u0132\u0afe\u0003\u0002\u0002\u0002\u0134",
    "\u0b00\u0003\u0002\u0002\u0002\u0136\u0b02\u0003\u0002\u0002\u0002\u0138",
    "\u0139\u0005\u0004\u0003\u0002\u0139\u013a\u0007\u0002\u0002\u0003\u013a",
    "\u0003\u0003\u0002\u0002\u0002\u013b\u013d\u0007\u00e0\u0002\u0002\u013c",
    "\u013b\u0003\u0002\u0002\u0002\u013c\u013d\u0003\u0002\u0002\u0002\u013d",
    "\u0141\u0003\u0002\u0002\u0002\u013e\u0140\u0007\u00de\u0002\u0002\u013f",
    "\u013e\u0003\u0002\u0002\u0002\u0140\u0143\u0003\u0002\u0002\u0002\u0141",
    "\u013f\u0003\u0002\u0002\u0002\u0141\u0142\u0003\u0002\u0002\u0002\u0142",
    "\u014a\u0003\u0002\u0002\u0002\u0143\u0141\u0003\u0002\u0002\u0002\u0144",
    "\u0146\u0005\u000e\b\u0002\u0145\u0147\u0007\u00de\u0002\u0002\u0146",
    "\u0145\u0003\u0002\u0002\u0002\u0147\u0148\u0003\u0002\u0002\u0002\u0148",
    "\u0146\u0003\u0002\u0002\u0002\u0148\u0149\u0003\u0002\u0002\u0002\u0149",
    "\u014b\u0003\u0002\u0002\u0002\u014a\u0144\u0003\u0002\u0002\u0002\u014a",
    "\u014b\u0003\u0002\u0002\u0002\u014b\u014d\u0003\u0002\u0002\u0002\u014c",
    "\u014e\u0005\u0006\u0004\u0002\u014d\u014c\u0003\u0002\u0002\u0002\u014d",
    "\u014e\u0003\u0002\u0002\u0002\u014e\u0152\u0003\u0002\u0002\u0002\u014f",
    "\u0151\u0007\u00de\u0002\u0002\u0150\u014f\u0003\u0002\u0002\u0002\u0151",
    "\u0154\u0003\u0002\u0002\u0002\u0152\u0150\u0003\u0002\u0002\u0002\u0152",
    "\u0153\u0003\u0002\u0002\u0002\u0153\u0156\u0003\u0002\u0002\u0002\u0154",
    "\u0152\u0003\u0002\u0002\u0002\u0155\u0157\u0005\u001e\u0010\u0002\u0156",
    "\u0155\u0003\u0002\u0002\u0002\u0156\u0157\u0003\u0002\u0002\u0002\u0157",
    "\u015b\u0003\u0002\u0002\u0002\u0158\u015a\u0007\u00de\u0002\u0002\u0159",
    "\u0158\u0003\u0002\u0002\u0002\u015a\u015d\u0003\u0002\u0002\u0002\u015b",
    "\u0159\u0003\u0002\u0002\u0002\u015b\u015c\u0003\u0002\u0002\u0002\u015c",
    "\u015f\u0003\u0002\u0002\u0002\u015d\u015b\u0003\u0002\u0002\u0002\u015e",
    "\u0160\u0005\u0010\t\u0002\u015f\u015e\u0003\u0002\u0002\u0002\u015f",
    "\u0160\u0003\u0002\u0002\u0002\u0160\u0164\u0003\u0002\u0002\u0002\u0161",
    "\u0163\u0007\u00de\u0002\u0002\u0162\u0161\u0003\u0002\u0002\u0002\u0163",
    "\u0166\u0003\u0002\u0002\u0002\u0164\u0162\u0003\u0002\u0002\u0002\u0164",
    "\u0165\u0003\u0002\u0002\u0002\u0165\u0168\u0003\u0002\u0002\u0002\u0166",
    "\u0164\u0003\u0002\u0002\u0002\u0167\u0169\u0005\u0014\u000b\u0002\u0168",
    "\u0167\u0003\u0002\u0002\u0002\u0168\u0169\u0003\u0002\u0002\u0002\u0169",
    "\u016d\u0003\u0002\u0002\u0002\u016a\u016c\u0007\u00de\u0002\u0002\u016b",
    "\u016a\u0003\u0002\u0002\u0002\u016c\u016f\u0003\u0002\u0002\u0002\u016d",
    "\u016b\u0003\u0002\u0002\u0002\u016d\u016e\u0003\u0002\u0002\u0002\u016e",
    "\u0171\u0003\u0002\u0002\u0002\u016f\u016d\u0003\u0002\u0002\u0002\u0170",
    "\u0172\u0005\u0016\f\u0002\u0171\u0170\u0003\u0002\u0002\u0002\u0171",
    "\u0172\u0003\u0002\u0002\u0002\u0172\u0176\u0003\u0002\u0002\u0002\u0173",
    "\u0175\u0007\u00de\u0002\u0002\u0174\u0173\u0003\u0002\u0002\u0002\u0175",
    "\u0178\u0003\u0002\u0002\u0002\u0176\u0174\u0003\u0002\u0002\u0002\u0176",
    "\u0177\u0003\u0002\u0002\u0002\u0177\u017a\u0003\u0002\u0002\u0002\u0178",
    "\u0176\u0003\u0002\u0002\u0002\u0179\u017b\u0005\u001a\u000e\u0002\u017a",
    "\u0179\u0003\u0002\u0002\u0002\u017a\u017b\u0003\u0002\u0002\u0002\u017b",
    "\u017f\u0003\u0002\u0002\u0002\u017c\u017e\u0007\u00de\u0002\u0002\u017d",
    "\u017c\u0003\u0002\u0002\u0002\u017e\u0181\u0003\u0002\u0002\u0002\u017f",
    "\u017d\u0003\u0002\u0002\u0002\u017f\u0180\u0003\u0002\u0002\u0002\u0180",
    "\u0183\u0003\u0002\u0002\u0002\u0181\u017f\u0003\u0002\u0002\u0002\u0182",
    "\u0184\u0007\u00e0\u0002\u0002\u0183\u0182\u0003\u0002\u0002\u0002\u0183",
    "\u0184\u0003\u0002\u0002\u0002\u0184\u0005\u0003\u0002\u0002\u0002\u0185",
    "\u0187\u0005\b\u0005\u0002\u0186\u0185\u0003\u0002\u0002\u0002\u0187",
    "\u0188\u0003\u0002\u0002\u0002\u0188\u0186\u0003\u0002\u0002\u0002\u0188",
    "\u0189\u0003\u0002\u0002\u0002\u0189\u0007\u0003\u0002\u0002\u0002\u018a",
    "\u018c\u0007p\u0002\u0002\u018b\u018d\u0007\u00e0\u0002\u0002\u018c",
    "\u018b\u0003\u0002\u0002\u0002\u018c\u018d\u0003\u0002\u0002\u0002\u018d",
    "\u018e\u0003\u0002\u0002\u0002\u018e\u0190\u0007\u00bd\u0002\u0002\u018f",
    "\u0191\u0007\u00e0\u0002\u0002\u0190\u018f\u0003\u0002\u0002\u0002\u0190",
    "\u0191\u0003\u0002\u0002\u0002\u0191\u0192\u0003\u0002\u0002\u0002\u0192",
    "\u0198\u0005\n\u0006\u0002\u0193\u0195\u0007\u00d0\u0002\u0002\u0194",
    "\u0196\u0007\u00e0\u0002\u0002\u0195\u0194\u0003\u0002\u0002\u0002\u0195",
    "\u0196\u0003\u0002\u0002\u0002\u0196\u0197\u0003\u0002\u0002\u0002\u0197",
    "\u0199\u0005\f\u0007\u0002\u0198\u0193\u0003\u0002\u0002\u0002\u0198",
    "\u0199\u0003\u0002\u0002\u0002\u0199\u019d\u0003\u0002\u0002\u0002\u019a",
    "\u019c\u0007\u00de\u0002\u0002\u019b\u019a\u0003\u0002\u0002\u0002\u019c",
    "\u019f\u0003\u0002\u0002\u0002\u019d\u019b\u0003\u0002\u0002\u0002\u019d",
    "\u019e\u0003\u0002\u0002\u0002\u019e\t\u0003\u0002\u0002\u0002\u019f",
    "\u019d\u0003\u0002\u0002\u0002\u01a0\u01a1\u0007\u00d3\u0002\u0002\u01a1",
    "\u000b\u0003\u0002\u0002\u0002\u01a2\u01a3\u0007\u00d3\u0002\u0002\u01a3",
    "\r\u0003\u0002\u0002\u0002\u01a4\u01a5\u0007\u00ac\u0002\u0002\u01a5",
    "\u01a6\u0007\u00e0\u0002\u0002\u01a6\u01a9\u0007\u00d7\u0002\u0002\u01a7",
    "\u01a8\u0007\u00e0\u0002\u0002\u01a8\u01aa\u0007\u0017\u0002\u0002\u01a9",
    "\u01a7\u0003\u0002\u0002\u0002\u01a9\u01aa\u0003\u0002\u0002\u0002\u01aa",
    "\u000f\u0003\u0002\u0002\u0002\u01ab\u01ad\u0007\f\u0002\u0002\u01ac",
    "\u01ae\u0007\u00de\u0002\u0002\u01ad\u01ac\u0003\u0002\u0002\u0002\u01ae",
    "\u01af\u0003\u0002\u0002\u0002\u01af\u01ad\u0003\u0002\u0002\u0002\u01af",
    "\u01b0\u0003\u0002\u0002\u0002\u01b0\u01b2\u0003\u0002\u0002\u0002\u01b1",
    "\u01b3\u0005\u0012\n\u0002\u01b2\u01b1\u0003\u0002\u0002\u0002\u01b3",
    "\u01b4\u0003\u0002\u0002\u0002\u01b4\u01b2\u0003\u0002\u0002\u0002\u01b4",
    "\u01b5\u0003\u0002\u0002\u0002\u01b5\u01b6\u0003\u0002\u0002\u0002\u01b6",
    "\u01b8\u00078\u0002\u0002\u01b7\u01b9\u0007\u00de\u0002\u0002\u01b8",
    "\u01b7\u0003\u0002\u0002\u0002\u01b9\u01ba\u0003\u0002\u0002\u0002\u01ba",
    "\u01b8\u0003\u0002\u0002\u0002\u01ba\u01bb\u0003\u0002\u0002\u0002\u01bb",
    "\u0011\u0003\u0002\u0002\u0002\u01bc\u01be\u0005\u0118\u008d\u0002\u01bd",
    "\u01bf\u0007\u00e0\u0002\u0002\u01be\u01bd\u0003\u0002\u0002\u0002\u01be",
    "\u01bf\u0003\u0002\u0002\u0002\u01bf\u01c0\u0003\u0002\u0002\u0002\u01c0",
    "\u01c2\u0007\u00bd\u0002\u0002\u01c1\u01c3\u0007\u00e0\u0002\u0002\u01c2",
    "\u01c1\u0003\u0002\u0002\u0002\u01c2\u01c3\u0003\u0002\u0002\u0002\u01c3",
    "\u01c4\u0003\u0002\u0002\u0002\u01c4\u01c5\u0005\u012a\u0096\u0002\u01c5",
    "\u01c6\u0007\u00de\u0002\u0002\u01c6\u0013\u0003\u0002\u0002\u0002\u01c7",
    "\u01c9\u00050\u0019\u0002\u01c8\u01ca\u0007\u00de\u0002\u0002\u01c9",
    "\u01c8\u0003\u0002\u0002\u0002\u01ca\u01cb\u0003\u0002\u0002\u0002\u01cb",
    "\u01c9\u0003\u0002\u0002\u0002\u01cb\u01cc\u0003\u0002\u0002\u0002\u01cc",
    "\u01ce\u0003\u0002\u0002\u0002\u01cd\u01c7\u0003\u0002\u0002\u0002\u01ce",
    "\u01cf\u0003\u0002\u0002\u0002\u01cf\u01cd\u0003\u0002\u0002\u0002\u01cf",
    "\u01d0\u0003\u0002\u0002\u0002\u01d0\u0015\u0003\u0002\u0002\u0002\u01d1",
    "\u01d3\u0005\u0018\r\u0002\u01d2\u01d4\u0007\u00de\u0002\u0002\u01d3",
    "\u01d2\u0003\u0002\u0002\u0002\u01d4\u01d5\u0003\u0002\u0002\u0002\u01d5",
    "\u01d3\u0003\u0002\u0002\u0002\u01d5\u01d6\u0003\u0002\u0002\u0002\u01d6",
    "\u01d8\u0003\u0002\u0002\u0002\u01d7\u01d1\u0003\u0002\u0002\u0002\u01d8",
    "\u01d9\u0003\u0002\u0002\u0002\u01d9\u01d7\u0003\u0002\u0002\u0002\u01d9",
    "\u01da\u0003\u0002\u0002\u0002\u01da\u0017\u0003\u0002\u0002\u0002\u01db",
    "\u01dc\u0007v\u0002\u0002\u01dc\u01dd\u0007\u00e0\u0002\u0002\u01dd",
    "\u01e4\u0007\u00d6\u0002\u0002\u01de\u01df\u0007x\u0002\u0002\u01df",
    "\u01e0\u0007\u00e0\u0002\u0002\u01e0\u01e4\t\u0002\u0002\u0002\u01e1",
    "\u01e4\u0007w\u0002\u0002\u01e2\u01e4\u0007y\u0002\u0002\u01e3\u01db",
    "\u0003\u0002\u0002\u0002\u01e3\u01de\u0003\u0002\u0002\u0002\u01e3\u01e1",
    "\u0003\u0002\u0002\u0002\u01e3\u01e2\u0003\u0002\u0002\u0002\u01e4\u0019",
    "\u0003\u0002\u0002\u0002\u01e5\u01ee\u0005\u001c\u000f\u0002\u01e6\u01e8",
    "\u0007\u00de\u0002\u0002\u01e7\u01e6\u0003\u0002\u0002\u0002\u01e8\u01e9",
    "\u0003\u0002\u0002\u0002\u01e9\u01e7\u0003\u0002\u0002\u0002\u01e9\u01ea",
    "\u0003\u0002\u0002\u0002\u01ea\u01eb\u0003\u0002\u0002\u0002\u01eb\u01ed",
    "\u0005\u001c\u000f\u0002\u01ec\u01e7\u0003\u0002\u0002\u0002\u01ed\u01f0",
    "\u0003\u0002\u0002\u0002\u01ee\u01ec\u0003\u0002\u0002\u0002\u01ee\u01ef",
    "\u0003\u0002\u0002\u0002\u01ef\u001b\u0003\u0002\u0002\u0002\u01f0\u01ee",
    "\u0003\u0002\u0002\u0002\u01f1\u01fe\u0005.\u0018\u0002\u01f2\u01fe",
    "\u0005\u0018\r\u0002\u01f3\u01fe\u0005F$\u0002\u01f4\u01fe\u0005P)\u0002",
    "\u01f5\u01fe\u0005X-\u0002\u01f6\u01fe\u0005b2\u0002\u01f7\u01fe\u0005",
    "\u0084C\u0002\u01f8\u01fe\u0005\u00a0Q\u0002\u01f9\u01fe\u0005\u00a2",
    "R\u0002\u01fa\u01fe\u0005\u00a4S\u0002\u01fb\u01fe\u0005\u00d0i\u0002",
    "\u01fc\u01fe\u0005\u00d4k\u0002\u01fd\u01f1\u0003\u0002\u0002\u0002",
    "\u01fd\u01f2\u0003\u0002\u0002\u0002\u01fd\u01f3\u0003\u0002\u0002\u0002",
    "\u01fd\u01f4\u0003\u0002\u0002\u0002\u01fd\u01f5\u0003\u0002\u0002\u0002",
    "\u01fd\u01f6\u0003\u0002\u0002\u0002\u01fd\u01f7\u0003\u0002\u0002\u0002",
    "\u01fd\u01f8\u0003\u0002\u0002\u0002\u01fd\u01f9\u0003\u0002\u0002\u0002",
    "\u01fd\u01fa\u0003\u0002\u0002\u0002\u01fd\u01fb\u0003\u0002\u0002\u0002",
    "\u01fd\u01fc\u0003\u0002\u0002\u0002\u01fe\u001d\u0003\u0002\u0002\u0002",
    "\u01ff\u0201\u0007\u00e0\u0002\u0002\u0200\u01ff\u0003\u0002\u0002\u0002",
    "\u0200\u0201\u0003\u0002\u0002\u0002\u0201\u0202\u0003\u0002\u0002\u0002",
    "\u0202\u0203\u0007\f\u0002\u0002\u0203\u0204\u0007\u00e0\u0002\u0002",
    "\u0204\u0205\u0005*\u0016\u0002\u0205\u0206\u0007\u00e0\u0002\u0002",
    "\u0206\u0208\u0005,\u0017\u0002\u0207\u0209\u0007\u00e0\u0002\u0002",
    "\u0208\u0207\u0003\u0002\u0002\u0002\u0208\u0209\u0003\u0002\u0002\u0002",
    "\u0209\u020b\u0003\u0002\u0002\u0002\u020a\u020c\u0007\u00de\u0002\u0002",
    "\u020b\u020a\u0003\u0002\u0002\u0002\u020c\u020d\u0003\u0002\u0002\u0002",
    "\u020d\u020b\u0003\u0002\u0002\u0002\u020d\u020e\u0003\u0002\u0002\u0002",
    "\u020e\u0210\u0003\u0002\u0002\u0002\u020f\u0211\u0005 \u0011\u0002",
    "\u0210\u020f\u0003\u0002\u0002\u0002\u0211\u0212\u0003\u0002\u0002\u0002",
    "\u0212\u0210\u0003\u0002\u0002\u0002\u0212\u0213\u0003\u0002\u0002\u0002",
    "\u0213\u0214\u0003\u0002\u0002\u0002\u0214\u0218\u00078\u0002\u0002",
    "\u0215\u0217\u0007\u00de\u0002\u0002\u0216\u0215\u0003\u0002\u0002\u0002",
    "\u0217\u021a\u0003\u0002\u0002\u0002\u0218\u0216\u0003\u0002\u0002\u0002",
    "\u0218\u0219\u0003\u0002\u0002\u0002\u0219\u001f\u0003\u0002\u0002\u0002",
    "\u021a\u0218\u0003\u0002\u0002\u0002\u021b\u021f\u0005\"\u0012\u0002",
    "\u021c\u021f\u0005(\u0015\u0002\u021d\u021f\u0005\u001e\u0010\u0002",
    "\u021e\u021b\u0003\u0002\u0002\u0002\u021e\u021c\u0003\u0002\u0002\u0002",
    "\u021e\u021d\u0003\u0002\u0002\u0002\u021f!\u0003\u0002\u0002\u0002",
    "\u0220\u0222\u0007\u00e0\u0002\u0002\u0221\u0220\u0003\u0002\u0002\u0002",
    "\u0221\u0222\u0003\u0002\u0002\u0002\u0222\u0223\u0003\u0002\u0002\u0002",
    "\u0223\u0225\u0005\u00fa~\u0002\u0224\u0226\u0007\u00e0\u0002\u0002",
    "\u0225\u0224\u0003\u0002\u0002\u0002\u0225\u0226\u0003\u0002\u0002\u0002",
    "\u0226\u0227\u0003\u0002\u0002\u0002\u0227\u0229\u0007\u00bd\u0002\u0002",
    "\u0228\u022a\u0007\u00e0\u0002\u0002\u0229\u0228\u0003\u0002\u0002\u0002",
    "\u0229\u022a\u0003\u0002\u0002\u0002\u022a\u022c\u0003\u0002\u0002\u0002",
    "\u022b\u022d\u0007\u00bb\u0002\u0002\u022c\u022b\u0003\u0002\u0002\u0002",
    "\u022c\u022d\u0003\u0002\u0002\u0002\u022d\u022e\u0003\u0002\u0002\u0002",
    "\u022e\u0230\u0005&\u0014\u0002\u022f\u0231\u0007\u00da\u0002\u0002",
    "\u0230\u022f\u0003\u0002\u0002\u0002\u0230\u0231\u0003\u0002\u0002\u0002",
    "\u0231\u0233\u0003\u0002\u0002\u0002\u0232\u0234\u0007\u00de\u0002\u0002",
    "\u0233\u0232\u0003\u0002\u0002\u0002\u0234\u0235\u0003\u0002\u0002\u0002",
    "\u0235\u0233\u0003\u0002\u0002\u0002\u0235\u0236\u0003\u0002\u0002\u0002",
    "\u0236#\u0003\u0002\u0002\u0002\u0237\u0238\u0007p\u0002\u0002\u0238",
    "\u023a\u0007\u00bc\u0002\u0002\u0239\u0237\u0003\u0002\u0002\u0002\u0239",
    "\u023a\u0003\u0002\u0002\u0002\u023a\u023b\u0003\u0002\u0002\u0002\u023b",
    "\u0240\u0005\u0118\u008d\u0002\u023c\u023d\u0007\u00c4\u0002\u0002\u023d",
    "\u023e\u0005\u012a\u0096\u0002\u023e\u023f\u0007\u00cf\u0002\u0002\u023f",
    "\u0241\u0003\u0002\u0002\u0002\u0240\u023c\u0003\u0002\u0002\u0002\u0240",
    "\u0241\u0003\u0002\u0002\u0002\u0241\u024c\u0003\u0002\u0002\u0002\u0242",
    "\u0243\u0007\u00bc\u0002\u0002\u0243\u0248\u0005\u0118\u008d\u0002\u0244",
    "\u0245\u0007\u00c4\u0002\u0002\u0245\u0246\u0005\u012a\u0096\u0002\u0246",
    "\u0247\u0007\u00cf\u0002\u0002\u0247\u0249\u0003\u0002\u0002\u0002\u0248",
    "\u0244\u0003\u0002\u0002\u0002\u0248\u0249\u0003\u0002\u0002\u0002\u0249",
    "\u024b\u0003\u0002\u0002\u0002\u024a\u0242\u0003\u0002\u0002\u0002\u024b",
    "\u024e\u0003\u0002\u0002\u0002\u024c\u024a\u0003\u0002\u0002\u0002\u024c",
    "\u024d\u0003\u0002\u0002\u0002\u024d%\u0003\u0002\u0002\u0002\u024e",
    "\u024c\u0003\u0002\u0002\u0002\u024f\u0251\u0007\u00bb\u0002\u0002\u0250",
    "\u024f\u0003\u0002\u0002\u0002\u0250\u0251\u0003\u0002\u0002\u0002\u0251",
    "\u0259\u0003\u0002\u0002\u0002\u0252\u025a\u0005\u012a\u0096\u0002\u0253",
    "\u0254\u0007\u00c3\u0002\u0002\u0254\u0255\u0005\u0118\u008d\u0002\u0255",
    "\u0256\u0007\u00ce\u0002\u0002\u0256\u025a\u0003\u0002\u0002\u0002\u0257",
    "\u0258\u0007\u00cd\u0002\u0002\u0258\u025a\u0005\u0118\u008d\u0002\u0259",
    "\u0252\u0003\u0002\u0002\u0002\u0259\u0253\u0003\u0002\u0002\u0002\u0259",
    "\u0257\u0003\u0002\u0002\u0002\u025a\'\u0003\u0002\u0002\u0002\u025b",
    "\u025d\u0007\u00e0\u0002\u0002\u025c\u025b\u0003\u0002\u0002\u0002\u025c",
    "\u025d\u0003\u0002\u0002\u0002\u025d\u025e\u0003\u0002\u0002\u0002\u025e",
    "\u025f\u0007\r\u0002\u0002\u025f\u0260\u0007\u00e0\u0002\u0002\u0260",
    "\u0264\u0005\u0118\u008d\u0002\u0261\u0262\u0007\u00c4\u0002\u0002\u0262",
    "\u0263\u0007\u00d6\u0002\u0002\u0263\u0265\u0007\u00cf\u0002\u0002\u0264",
    "\u0261\u0003\u0002\u0002\u0002\u0264\u0265\u0003\u0002\u0002\u0002\u0265",
    "\u0268\u0003\u0002\u0002\u0002\u0266\u0267\u0007\u00e0\u0002\u0002\u0267",
    "\u0269\u0007\u00db\u0002\u0002\u0268\u0266\u0003\u0002\u0002\u0002\u0268",
    "\u0269\u0003\u0002\u0002\u0002\u0269\u026b\u0003\u0002\u0002\u0002\u026a",
    "\u026c\u0007\u00de\u0002\u0002\u026b\u026a\u0003\u0002\u0002\u0002\u026c",
    "\u026d\u0003\u0002\u0002\u0002\u026d\u026b\u0003\u0002\u0002\u0002\u026d",
    "\u026e\u0003\u0002\u0002\u0002\u026e\u0274\u0003\u0002\u0002\u0002\u026f",
    "\u0271\u0005 \u0011\u0002\u0270\u026f\u0003\u0002\u0002\u0002\u0271",
    "\u0272\u0003\u0002\u0002\u0002\u0272\u0270\u0003\u0002\u0002\u0002\u0272",
    "\u0273\u0003\u0002\u0002\u0002\u0273\u0275\u0003\u0002\u0002\u0002\u0274",
    "\u0270\u0003\u0002\u0002\u0002\u0274\u0275\u0003\u0002\u0002\u0002\u0275",
    "\u0276\u0003\u0002\u0002\u0002\u0276\u0278\u00079\u0002\u0002\u0277",
    "\u0279\u0007\u00de\u0002\u0002\u0278\u0277\u0003\u0002\u0002\u0002\u0279",
    "\u027a\u0003\u0002\u0002\u0002\u027a\u0278\u0003\u0002\u0002\u0002\u027a",
    "\u027b\u0003\u0002\u0002\u0002\u027b)\u0003\u0002\u0002\u0002\u027c",
    "\u027d\u0005\u0122\u0092\u0002\u027d+\u0003\u0002\u0002\u0002\u027e",
    "\u027f\u0005\u0118\u008d\u0002\u027f-\u0003\u0002\u0002\u0002\u0280",
    "\u0281\u00052\u001a\u0002\u0281/\u0003\u0002\u0002\u0002\u0282\u0283",
    "\u0007\u0007\u0002\u0002\u0283\u0284\u0007\u00e0\u0002\u0002\u0284\u0286",
    "\u0005\u00fa~\u0002\u0285\u0287\u0007\u00e0\u0002\u0002\u0286\u0285",
    "\u0003\u0002\u0002\u0002\u0286\u0287\u0003\u0002\u0002\u0002\u0287\u0288",
    "\u0003\u0002\u0002\u0002\u0288\u028a\u0007\u00bd\u0002\u0002\u0289\u028b",
    "\u0007\u00e0\u0002\u0002\u028a\u0289\u0003\u0002\u0002\u0002\u028a\u028b",
    "\u0003\u0002\u0002\u0002\u028b\u028c\u0003\u0002\u0002\u0002\u028c\u0297",
    "\u0005\u012a\u0096\u0002\u028d\u028f\u0007\u00e0\u0002\u0002\u028e\u028d",
    "\u0003\u0002\u0002\u0002\u028e\u028f\u0003\u0002\u0002\u0002\u028f\u0290",
    "\u0003\u0002\u0002\u0002\u0290\u0292\u0007\u00b8\u0002\u0002\u0291\u0293",
    "\u0007\u00e0\u0002\u0002\u0292\u0291\u0003\u0002\u0002\u0002\u0292\u0293",
    "\u0003\u0002\u0002\u0002\u0293\u0294\u0003\u0002\u0002\u0002\u0294\u0296",
    "\u0005\u012a\u0096\u0002\u0295\u028e\u0003\u0002\u0002\u0002\u0296\u0299",
    "\u0003\u0002\u0002\u0002\u0297\u0295\u0003\u0002\u0002\u0002\u0297\u0298",
    "\u0003\u0002\u0002\u0002\u02981\u0003\u0002\u0002\u0002\u0299\u0297",
    "\u0003\u0002\u0002\u0002\u029a\u02a6\u00054\u001b\u0002\u029b\u029d",
    "\u0007\u00de\u0002\u0002\u029c\u029b\u0003\u0002\u0002\u0002\u029d\u029e",
    "\u0003\u0002\u0002\u0002\u029e\u029c\u0003\u0002\u0002\u0002\u029e\u029f",
    "\u0003\u0002\u0002\u0002\u029f\u02a1\u0003\u0002\u0002\u0002\u02a0\u02a2",
    "\u0007\u00e0\u0002\u0002\u02a1\u02a0\u0003\u0002\u0002\u0002\u02a1\u02a2",
    "\u0003\u0002\u0002\u0002\u02a2\u02a3\u0003\u0002\u0002\u0002\u02a3\u02a5",
    "\u00054\u001b\u0002\u02a4\u029c\u0003\u0002\u0002\u0002\u02a5\u02a8",
    "\u0003\u0002\u0002\u0002\u02a6\u02a4\u0003\u0002\u0002\u0002\u02a6\u02a7",
    "\u0003\u0002\u0002\u0002\u02a73\u0003\u0002\u0002\u0002\u02a8\u02a6",
    "\u0003\u0002\u0002\u0002\u02a9\u02ed\u00056\u001c\u0002\u02aa\u02ed",
    "\u00050\u0019\u0002\u02ab\u02ed\u00058\u001d\u0002\u02ac\u02ed\u0005",
    ":\u001e\u0002\u02ad\u02ed\u0005<\u001f\u0002\u02ae\u02ed\u0005> \u0002",
    "\u02af\u02ed\u0005@!\u0002\u02b0\u02ed\u0005D#\u0002\u02b1\u02ed\u0005",
    "J&\u0002\u02b2\u02ed\u0005H%\u0002\u02b3\u02ed\u0005L\'\u0002\u02b4",
    "\u02ed\u0005N(\u0002\u02b5\u02ed\u0005T+\u0002\u02b6\u02ed\u0005V,\u0002",
    "\u02b7\u02ed\u0005Z.\u0002\u02b8\u02ed\u0005\u00eex\u0002\u02b9\u02ed",
    "\u0005\\/\u0002\u02ba\u02ed\u0005^0\u0002\u02bb\u02ed\u0005`1\u0002",
    "\u02bc\u02ed\u0005d3\u0002\u02bd\u02ed\u0005f4\u0002\u02be\u02ed\u0005",
    "h5\u0002\u02bf\u02ed\u0005j6\u0002\u02c0\u02ed\u0005t;\u0002\u02c1\u02ed",
    "\u0005v<\u0002\u02c2\u02ed\u0005x=\u0002\u02c3\u02ed\u0005z>\u0002\u02c4",
    "\u02ed\u0005|?\u0002\u02c5\u02ed\u0005\u0128\u0095\u0002\u02c6\u02ed",
    "\u0005~@\u0002\u02c7\u02ed\u0005\u0080A\u0002\u02c8\u02ed\u0005\u0082",
    "B\u0002\u02c9\u02ed\u0005\u0084C\u0002\u02ca\u02ed\u0005\u008cG\u0002",
    "\u02cb\u02ed\u0005\u008eH\u0002\u02cc\u02ed\u0005\u0090I\u0002\u02cd",
    "\u02ed\u0005\u0092J\u0002\u02ce\u02ed\u0005\u0094K\u0002\u02cf\u02ed",
    "\u0005\u0096L\u0002\u02d0\u02ed\u0005\u0098M\u0002\u02d1\u02ed\u0005",
    "\u009eP\u0002\u02d2\u02ed\u0005\u00a6T\u0002\u02d3\u02ed\u0005\u00a8",
    "U\u0002\u02d4\u02ed\u0005\u00aaV\u0002\u02d5\u02ed\u0005\u00acW\u0002",
    "\u02d6\u02ed\u0005\u00b0Y\u0002\u02d7\u02ed\u0005\u00b2Z\u0002\u02d8",
    "\u02ed\u0005\u00b4[\u0002\u02d9\u02ed\u0005\u00b6\\\u0002\u02da\u02ed",
    "\u0005\u00b8]\u0002\u02db\u02ed\u0005\u00ba^\u0002\u02dc\u02ed\u0005",
    "\u00bc_\u0002\u02dd\u02ed\u0005\u00be`\u0002\u02de\u02ed\u0005\u00c0",
    "a\u0002\u02df\u02ed\u0005\u00c8e\u0002\u02e0\u02ed\u0005\u00caf\u0002",
    "\u02e1\u02ed\u0005\u00ccg\u0002\u02e2\u02ed\u0005\u00ceh\u0002\u02e3",
    "\u02ed\u0005\u00d2j\u0002\u02e4\u02ed\u0005\u00dan\u0002\u02e5\u02ed",
    "\u0005\u00dco\u0002\u02e6\u02ed\u0005\u00e0q\u0002\u02e7\u02ed\u0005",
    "\u00e6t\u0002\u02e8\u02ed\u0005\u00e8u\u0002\u02e9\u02ed\u0005\u00ea",
    "v\u0002\u02ea\u02ed\u0005\u00ecw\u0002\u02eb\u02ed\u0005\u00f4{\u0002",
    "\u02ec\u02a9\u0003\u0002\u0002\u0002\u02ec\u02aa\u0003\u0002\u0002\u0002",
    "\u02ec\u02ab\u0003\u0002\u0002\u0002\u02ec\u02ac\u0003\u0002\u0002\u0002",
    "\u02ec\u02ad\u0003\u0002\u0002\u0002\u02ec\u02ae\u0003\u0002\u0002\u0002",
    "\u02ec\u02af\u0003\u0002\u0002\u0002\u02ec\u02b0\u0003\u0002\u0002\u0002",
    "\u02ec\u02b1\u0003\u0002\u0002\u0002\u02ec\u02b2\u0003\u0002\u0002\u0002",
    "\u02ec\u02b3\u0003\u0002\u0002\u0002\u02ec\u02b4\u0003\u0002\u0002\u0002",
    "\u02ec\u02b5\u0003\u0002\u0002\u0002\u02ec\u02b6\u0003\u0002\u0002\u0002",
    "\u02ec\u02b7\u0003\u0002\u0002\u0002\u02ec\u02b8\u0003\u0002\u0002\u0002",
    "\u02ec\u02b9\u0003\u0002\u0002\u0002\u02ec\u02ba\u0003\u0002\u0002\u0002",
    "\u02ec\u02bb\u0003\u0002\u0002\u0002\u02ec\u02bc\u0003\u0002\u0002\u0002",
    "\u02ec\u02bd\u0003\u0002\u0002\u0002\u02ec\u02be\u0003\u0002\u0002\u0002",
    "\u02ec\u02bf\u0003\u0002\u0002\u0002\u02ec\u02c0\u0003\u0002\u0002\u0002",
    "\u02ec\u02c1\u0003\u0002\u0002\u0002\u02ec\u02c2\u0003\u0002\u0002\u0002",
    "\u02ec\u02c3\u0003\u0002\u0002\u0002\u02ec\u02c4\u0003\u0002\u0002\u0002",
    "\u02ec\u02c5\u0003\u0002\u0002\u0002\u02ec\u02c6\u0003\u0002\u0002\u0002",
    "\u02ec\u02c7\u0003\u0002\u0002\u0002\u02ec\u02c8\u0003\u0002\u0002\u0002",
    "\u02ec\u02c9\u0003\u0002\u0002\u0002\u02ec\u02ca\u0003\u0002\u0002\u0002",
    "\u02ec\u02cb\u0003\u0002\u0002\u0002\u02ec\u02cc\u0003\u0002\u0002\u0002",
    "\u02ec\u02cd\u0003\u0002\u0002\u0002\u02ec\u02ce\u0003\u0002\u0002\u0002",
    "\u02ec\u02cf\u0003\u0002\u0002\u0002\u02ec\u02d0\u0003\u0002\u0002\u0002",
    "\u02ec\u02d1\u0003\u0002\u0002\u0002\u02ec\u02d2\u0003\u0002\u0002\u0002",
    "\u02ec\u02d3\u0003\u0002\u0002\u0002\u02ec\u02d4\u0003\u0002\u0002\u0002",
    "\u02ec\u02d5\u0003\u0002\u0002\u0002\u02ec\u02d6\u0003\u0002\u0002\u0002",
    "\u02ec\u02d7\u0003\u0002\u0002\u0002\u02ec\u02d8\u0003\u0002\u0002\u0002",
    "\u02ec\u02d9\u0003\u0002\u0002\u0002\u02ec\u02da\u0003\u0002\u0002\u0002",
    "\u02ec\u02db\u0003\u0002\u0002\u0002\u02ec\u02dc\u0003\u0002\u0002\u0002",
    "\u02ec\u02dd\u0003\u0002\u0002\u0002\u02ec\u02de\u0003\u0002\u0002\u0002",
    "\u02ec\u02df\u0003\u0002\u0002\u0002\u02ec\u02e0\u0003\u0002\u0002\u0002",
    "\u02ec\u02e1\u0003\u0002\u0002\u0002\u02ec\u02e2\u0003\u0002\u0002\u0002",
    "\u02ec\u02e3\u0003\u0002\u0002\u0002\u02ec\u02e4\u0003\u0002\u0002\u0002",
    "\u02ec\u02e5\u0003\u0002\u0002\u0002\u02ec\u02e6\u0003\u0002\u0002\u0002",
    "\u02ec\u02e7\u0003\u0002\u0002\u0002\u02ec\u02e8\u0003\u0002\u0002\u0002",
    "\u02ec\u02e9\u0003\u0002\u0002\u0002\u02ec\u02ea\u0003\u0002\u0002\u0002",
    "\u02ec\u02eb\u0003\u0002\u0002\u0002\u02ed5\u0003\u0002\u0002\u0002",
    "\u02ee\u02ef\u0007\b\u0002\u0002\u02ef\u02f0\u0007\u00e0\u0002\u0002",
    "\u02f0\u02f9\u0005\u00dep\u0002\u02f1\u02f3\u0007\u00e0\u0002\u0002",
    "\u02f2\u02f1\u0003\u0002\u0002\u0002\u02f2\u02f3\u0003\u0002\u0002\u0002",
    "\u02f3\u02f4\u0003\u0002\u0002\u0002\u02f4\u02f6\u0007\u00b8\u0002\u0002",
    "\u02f5\u02f7\u0007\u00e0\u0002\u0002\u02f6\u02f5\u0003\u0002\u0002\u0002",
    "\u02f6\u02f7\u0003\u0002\u0002\u0002\u02f7\u02f8\u0003\u0002\u0002\u0002",
    "\u02f8\u02fa\u0005\u00dep\u0002\u02f9\u02f2\u0003\u0002\u0002\u0002",
    "\u02f9\u02fa\u0003\u0002\u0002\u0002\u02fa7\u0003\u0002\u0002\u0002",
    "\u02fb\u02fc\u0007\u000b\u0002\u0002\u02fc9\u0003\u0002\u0002\u0002",
    "\u02fd\u02fe\u0007\u0015\u0002\u0002\u02fe\u02ff\u0007\u00e0\u0002\u0002",
    "\u02ff\u0300\u0005\u00dep\u0002\u0300;\u0003\u0002\u0002\u0002\u0301",
    "\u0302\u0007\u0016\u0002\u0002\u0302\u0303\u0007\u00e0\u0002\u0002\u0303",
    "\u0304\u0005\u00dep\u0002\u0304=\u0003\u0002\u0002\u0002\u0305\u0315",
    "\u0007\u0018\u0002\u0002\u0306\u0307\u0007\u00e0\u0002\u0002\u0307\u0312",
    "\u0005\u00dep\u0002\u0308\u030a\u0007\u00e0\u0002\u0002\u0309\u0308",
    "\u0003\u0002\u0002\u0002\u0309\u030a\u0003\u0002\u0002\u0002\u030a\u030b",
    "\u0003\u0002\u0002\u0002\u030b\u030d\u0007\u00b8\u0002\u0002\u030c\u030e",
    "\u0007\u00e0\u0002\u0002\u030d\u030c\u0003\u0002\u0002\u0002\u030d\u030e",
    "\u0003\u0002\u0002\u0002\u030e\u030f\u0003\u0002\u0002\u0002\u030f\u0311",
    "\u0005\u00dep\u0002\u0310\u0309\u0003\u0002\u0002\u0002\u0311\u0314",
    "\u0003\u0002\u0002\u0002\u0312\u0310\u0003\u0002\u0002\u0002\u0312\u0313",
    "\u0003\u0002\u0002\u0002\u0313\u0316\u0003\u0002\u0002\u0002\u0314\u0312",
    "\u0003\u0002\u0002\u0002\u0315\u0306\u0003\u0002\u0002\u0002\u0315\u0316",
    "\u0003\u0002\u0002\u0002\u0316?\u0003\u0002\u0002\u0002\u0317\u0318",
    "\u0005\u012e\u0098\u0002\u0318\u0319\u0007\u00e0\u0002\u0002\u0319\u031b",
    "\u0003\u0002\u0002\u0002\u031a\u0317\u0003\u0002\u0002\u0002\u031a\u031b",
    "\u0003\u0002\u0002\u0002\u031b\u031c\u0003\u0002\u0002\u0002\u031c\u031d",
    "\u0007\u001a\u0002\u0002\u031d\u031e\u0007\u00e0\u0002\u0002\u031e\u0329",
    "\u0005B\"\u0002\u031f\u0321\u0007\u00e0\u0002\u0002\u0320\u031f\u0003",
    "\u0002\u0002\u0002\u0320\u0321\u0003\u0002\u0002\u0002\u0321\u0322\u0003",
    "\u0002\u0002\u0002\u0322\u0324\u0007\u00b8\u0002\u0002\u0323\u0325\u0007",
    "\u00e0\u0002\u0002\u0324\u0323\u0003\u0002\u0002\u0002\u0324\u0325\u0003",
    "\u0002\u0002\u0002\u0325\u0326\u0003\u0002\u0002\u0002\u0326\u0328\u0005",
    "B\"\u0002\u0327\u0320\u0003\u0002\u0002\u0002\u0328\u032b\u0003\u0002",
    "\u0002\u0002\u0329\u0327\u0003\u0002\u0002\u0002\u0329\u032a\u0003\u0002",
    "\u0002\u0002\u032aA\u0003\u0002\u0002\u0002\u032b\u0329\u0003\u0002",
    "\u0002\u0002\u032c\u032e\u0005\u0118\u008d\u0002\u032d\u032f\u0005\u0132",
    "\u009a\u0002\u032e\u032d\u0003\u0002\u0002\u0002\u032e\u032f\u0003\u0002",
    "\u0002\u0002\u032f\u0332\u0003\u0002\u0002\u0002\u0330\u0331\u0007\u00e0",
    "\u0002\u0002\u0331\u0333\u0005\u011a\u008e\u0002\u0332\u0330\u0003\u0002",
    "\u0002\u0002\u0332\u0333\u0003\u0002\u0002\u0002\u0333\u0335\u0003\u0002",
    "\u0002\u0002\u0334\u0336\u0007\u00e0\u0002\u0002\u0335\u0334\u0003\u0002",
    "\u0002\u0002\u0335\u0336\u0003\u0002\u0002\u0002\u0336\u0337\u0003\u0002",
    "\u0002\u0002\u0337\u0339\u0007\u00bd\u0002\u0002\u0338\u033a\u0007\u00e0",
    "\u0002\u0002\u0339\u0338\u0003\u0002\u0002\u0002\u0339\u033a\u0003\u0002",
    "\u0002\u0002\u033a\u033b\u0003\u0002\u0002\u0002\u033b\u033c\u0005\u00de",
    "p\u0002\u033cC\u0003\u0002\u0002\u0002\u033d\u033f\u0007\u001b\u0002",
    "\u0002\u033e\u0340\u0007\u00e0\u0002\u0002\u033f\u033e\u0003\u0002\u0002",
    "\u0002\u033f\u0340\u0003\u0002\u0002\u0002\u0340\u0341\u0003\u0002\u0002",
    "\u0002\u0341\u0343\u0007\u00bd\u0002\u0002\u0342\u0344\u0007\u00e0\u0002",
    "\u0002\u0343\u0342\u0003\u0002\u0002\u0002\u0343\u0344\u0003\u0002\u0002",
    "\u0002\u0344\u0345\u0003\u0002\u0002\u0002\u0345\u0346\u0005\u00dep",
    "\u0002\u0346E\u0003\u0002\u0002\u0002\u0347\u0348\u0005\u0134\u009b",
    "\u0002\u0348\u0349\u0007\u00e0\u0002\u0002\u0349\u034b\u0003\u0002\u0002",
    "\u0002\u034a\u0347\u0003\u0002\u0002\u0002\u034a\u034b\u0003\u0002\u0002",
    "\u0002\u034b\u034c\u0003\u0002\u0002\u0002\u034c\u034d\u0007\u001c\u0002",
    "\u0002\u034d\u0353\u0007\u00e0\u0002\u0002\u034e\u0350\u0007H\u0002",
    "\u0002\u034f\u0351\u0005\u0132\u009a\u0002\u0350\u034f\u0003\u0002\u0002",
    "\u0002\u0350\u0351\u0003\u0002\u0002\u0002\u0351\u0354\u0003\u0002\u0002",
    "\u0002\u0352\u0354\u0007\u009f\u0002\u0002\u0353\u034e\u0003\u0002\u0002",
    "\u0002\u0353\u0352\u0003\u0002\u0002\u0002\u0354\u0355\u0003\u0002\u0002",
    "\u0002\u0355\u0356\u0007\u00e0\u0002\u0002\u0356\u0358\u0005\u0118\u008d",
    "\u0002\u0357\u0359\u0005\u0132\u009a\u0002\u0358\u0357\u0003\u0002\u0002",
    "\u0002\u0358\u0359\u0003\u0002\u0002\u0002\u0359\u035a\u0003\u0002\u0002",
    "\u0002\u035a\u035b\u0007\u00e0\u0002\u0002\u035b\u035c\u0007[\u0002",
    "\u0002\u035c\u035d\u0007\u00e0\u0002\u0002\u035d\u0362\u0007\u00d3\u0002",
    "\u0002\u035e\u035f\u0007\u00e0\u0002\u0002\u035f\u0360\u0007\u0005\u0002",
    "\u0002\u0360\u0361\u0007\u00e0\u0002\u0002\u0361\u0363\u0007\u00d3\u0002",
    "\u0002\u0362\u035e\u0003\u0002\u0002\u0002\u0362\u0363\u0003\u0002\u0002",
    "\u0002\u0363\u0368\u0003\u0002\u0002\u0002\u0364\u0366\u0007\u00e0\u0002",
    "\u0002\u0365\u0364\u0003\u0002\u0002\u0002\u0365\u0366\u0003\u0002\u0002",
    "\u0002\u0366\u0367\u0003\u0002\u0002\u0002\u0367\u0369\u0005\u010e\u0088",
    "\u0002\u0368\u0365\u0003\u0002\u0002\u0002\u0368\u0369\u0003\u0002\u0002",
    "\u0002\u0369\u036c\u0003\u0002\u0002\u0002\u036a\u036b\u0007\u00e0\u0002",
    "\u0002\u036b\u036d\u0005\u011a\u008e\u0002\u036c\u036a\u0003\u0002\u0002",
    "\u0002\u036c\u036d\u0003\u0002\u0002\u0002\u036dG\u0003\u0002\u0002",
    "\u0002\u036e\u036f\t\u0003\u0002\u0002\u036f\u0370\u0007\u00e0\u0002",
    "\u0002\u0370\u037b\u0005\u0126\u0094\u0002\u0371\u0373\u0007\u00e0\u0002",
    "\u0002\u0372\u0371\u0003\u0002\u0002\u0002\u0372\u0373\u0003\u0002\u0002",
    "\u0002\u0373\u0374\u0003\u0002\u0002\u0002\u0374\u0376\u0007\u00b8\u0002",
    "\u0002\u0375\u0377\u0007\u00e0\u0002\u0002\u0376\u0375\u0003\u0002\u0002",
    "\u0002\u0376\u0377\u0003\u0002\u0002\u0002\u0377\u0378\u0003\u0002\u0002",
    "\u0002\u0378\u037a\u0005\u0126\u0094\u0002\u0379\u0372\u0003\u0002\u0002",
    "\u0002\u037a\u037d\u0003\u0002\u0002\u0002\u037b\u0379\u0003\u0002\u0002",
    "\u0002\u037b\u037c\u0003\u0002\u0002\u0002\u037cI\u0003\u0002\u0002",
    "\u0002\u037d\u037b\u0003\u0002\u0002\u0002\u037e\u037f\u0007)\u0002",
    "\u0002\u037f\u0380\u0007\u00e0\u0002\u0002\u0380\u0382\u0005\u00dep",
    "\u0002\u0381\u0383\u0007\u00e0\u0002\u0002\u0382\u0381\u0003\u0002\u0002",
    "\u0002\u0382\u0383\u0003\u0002\u0002\u0002\u0383\u0384\u0003\u0002\u0002",
    "\u0002\u0384\u0386\u0007\u00b8\u0002\u0002\u0385\u0387\u0007\u00e0\u0002",
    "\u0002\u0386\u0385\u0003\u0002\u0002\u0002\u0386\u0387\u0003\u0002\u0002",
    "\u0002\u0387\u0388\u0003\u0002\u0002\u0002\u0388\u0391\u0005\u00dep",
    "\u0002\u0389\u038b\u0007\u00e0\u0002\u0002\u038a\u0389\u0003\u0002\u0002",
    "\u0002\u038a\u038b\u0003\u0002\u0002\u0002\u038b\u038c\u0003\u0002\u0002",
    "\u0002\u038c\u038e\u0007\u00b8\u0002\u0002\u038d\u038f\u0007\u00e0\u0002",
    "\u0002\u038e\u038d\u0003\u0002\u0002\u0002\u038e\u038f\u0003\u0002\u0002",
    "\u0002\u038f\u0390\u0003\u0002\u0002\u0002\u0390\u0392\u0005\u00dep",
    "\u0002\u0391\u038a\u0003\u0002\u0002\u0002\u0391\u0392\u0003\u0002\u0002",
    "\u0002\u0392K\u0003\u0002\u0002\u0002\u0393\u0395\u0007+\u0002\u0002",
    "\u0394\u0396\u0007\u00de\u0002\u0002\u0395\u0394\u0003\u0002\u0002\u0002",
    "\u0396\u0397\u0003\u0002\u0002\u0002\u0397\u0395\u0003\u0002\u0002\u0002",
    "\u0397\u0398\u0003\u0002\u0002\u0002\u0398\u039f\u0003\u0002\u0002\u0002",
    "\u0399\u039b\u00052\u001a\u0002\u039a\u039c\u0007\u00de\u0002\u0002",
    "\u039b\u039a\u0003\u0002\u0002\u0002\u039c\u039d\u0003\u0002\u0002\u0002",
    "\u039d\u039b\u0003\u0002\u0002\u0002\u039d\u039e\u0003\u0002\u0002\u0002",
    "\u039e\u03a0\u0003\u0002\u0002\u0002\u039f\u0399\u0003\u0002\u0002\u0002",
    "\u039f\u03a0\u0003\u0002\u0002\u0002\u03a0\u03a1\u0003\u0002\u0002\u0002",
    "\u03a1\u03c9\u0007X\u0002\u0002\u03a2\u03a3\u0007+\u0002\u0002\u03a3",
    "\u03a4\u0007\u00e0\u0002\u0002\u03a4\u03a5\t\u0004\u0002\u0002\u03a5",
    "\u03a6\u0007\u00e0\u0002\u0002\u03a6\u03a8\u0005\u00dep\u0002\u03a7",
    "\u03a9\u0007\u00de\u0002\u0002\u03a8\u03a7\u0003\u0002\u0002\u0002\u03a9",
    "\u03aa\u0003\u0002\u0002\u0002\u03aa\u03a8\u0003\u0002\u0002\u0002\u03aa",
    "\u03ab\u0003\u0002\u0002\u0002\u03ab\u03b2\u0003\u0002\u0002\u0002\u03ac",
    "\u03ae\u00052\u001a\u0002\u03ad\u03af\u0007\u00de\u0002\u0002\u03ae",
    "\u03ad\u0003\u0002\u0002\u0002\u03af\u03b0\u0003\u0002\u0002\u0002\u03b0",
    "\u03ae\u0003\u0002\u0002\u0002\u03b0\u03b1\u0003\u0002\u0002\u0002\u03b1",
    "\u03b3\u0003\u0002\u0002\u0002\u03b2\u03ac\u0003\u0002\u0002\u0002\u03b2",
    "\u03b3\u0003\u0002\u0002\u0002\u03b3\u03b4\u0003\u0002\u0002\u0002\u03b4",
    "\u03b5\u0007X\u0002\u0002\u03b5\u03c9\u0003\u0002\u0002\u0002\u03b6",
    "\u03b8\u0007+\u0002\u0002\u03b7\u03b9\u0007\u00de\u0002\u0002\u03b8",
    "\u03b7\u0003\u0002\u0002\u0002\u03b9\u03ba\u0003\u0002\u0002\u0002\u03ba",
    "\u03b8\u0003\u0002\u0002\u0002\u03ba\u03bb\u0003\u0002\u0002\u0002\u03bb",
    "\u03bc\u0003\u0002\u0002\u0002\u03bc\u03be\u00052\u001a\u0002\u03bd",
    "\u03bf\u0007\u00de\u0002\u0002\u03be\u03bd\u0003\u0002\u0002\u0002\u03bf",
    "\u03c0\u0003\u0002\u0002\u0002\u03c0\u03be\u0003\u0002\u0002\u0002\u03c0",
    "\u03c1\u0003\u0002\u0002\u0002\u03c1\u03c2\u0003\u0002\u0002\u0002\u03c2",
    "\u03c3\u0007X\u0002\u0002\u03c3\u03c4\u0007\u00e0\u0002\u0002\u03c4",
    "\u03c5\t\u0004\u0002\u0002\u03c5\u03c6\u0007\u00e0\u0002\u0002\u03c6",
    "\u03c7\u0005\u00dep\u0002\u03c7\u03c9\u0003\u0002\u0002\u0002\u03c8",
    "\u0393\u0003\u0002\u0002\u0002\u03c8\u03a2\u0003\u0002\u0002\u0002\u03c8",
    "\u03b6\u0003\u0002\u0002\u0002\u03c9M\u0003\u0002\u0002\u0002\u03ca",
    "\u03cb\u00078\u0002\u0002\u03cbO\u0003\u0002\u0002\u0002\u03cc\u03cd",
    "\u0005\u012c\u0097\u0002\u03cd\u03ce\u0007\u00e0\u0002\u0002\u03ce\u03d0",
    "\u0003\u0002\u0002\u0002\u03cf\u03cc\u0003\u0002\u0002\u0002\u03cf\u03d0",
    "\u0003\u0002\u0002\u0002\u03d0\u03d1\u0003\u0002\u0002\u0002\u03d1\u03d2",
    "\u0007:\u0002\u0002\u03d2\u03d3\u0007\u00e0\u0002\u0002\u03d3\u03d5",
    "\u0005\u0118\u008d\u0002\u03d4\u03d6\u0007\u00de\u0002\u0002\u03d5\u03d4",
    "\u0003\u0002\u0002\u0002\u03d6\u03d7\u0003\u0002\u0002\u0002\u03d7\u03d5",
    "\u0003\u0002\u0002\u0002\u03d7\u03d8\u0003\u0002\u0002\u0002\u03d8\u03dc",
    "\u0003\u0002\u0002\u0002\u03d9\u03db\u0005R*\u0002\u03da\u03d9\u0003",
    "\u0002\u0002\u0002\u03db\u03de\u0003\u0002\u0002\u0002\u03dc\u03da\u0003",
    "\u0002\u0002\u0002\u03dc\u03dd\u0003\u0002\u0002\u0002\u03dd\u03df\u0003",
    "\u0002\u0002\u0002\u03de\u03dc\u0003\u0002\u0002\u0002\u03df\u03e0\u0007",
    "0\u0002\u0002\u03e0Q\u0003\u0002\u0002\u0002\u03e1\u03ea\u0005\u0118",
    "\u008d\u0002\u03e2\u03e4\u0007\u00e0\u0002\u0002\u03e3\u03e2\u0003\u0002",
    "\u0002\u0002\u03e3\u03e4\u0003\u0002\u0002\u0002\u03e4\u03e5\u0003\u0002",
    "\u0002\u0002\u03e5\u03e7\u0007\u00bd\u0002\u0002\u03e6\u03e8\u0007\u00e0",
    "\u0002\u0002\u03e7\u03e6\u0003\u0002\u0002\u0002\u03e7\u03e8\u0003\u0002",
    "\u0002\u0002\u03e8\u03e9\u0003\u0002\u0002\u0002\u03e9\u03eb\u0005\u00de",
    "p\u0002\u03ea\u03e3\u0003\u0002\u0002\u0002\u03ea\u03eb\u0003\u0002",
    "\u0002\u0002\u03eb\u03ed\u0003\u0002\u0002\u0002\u03ec\u03ee\u0007\u00de",
    "\u0002\u0002\u03ed\u03ec\u0003\u0002\u0002\u0002\u03ee\u03ef\u0003\u0002",
    "\u0002\u0002\u03ef\u03ed\u0003\u0002\u0002\u0002\u03ef\u03f0\u0003\u0002",
    "\u0002\u0002\u03f0S\u0003\u0002\u0002\u0002\u03f1\u03f2\u0007<\u0002",
    "\u0002\u03f2\u03f3\u0007\u00e0\u0002\u0002\u03f3\u03fe\u0005\u00dep",
    "\u0002\u03f4\u03f6\u0007\u00e0\u0002\u0002\u03f5\u03f4\u0003\u0002\u0002",
    "\u0002\u03f5\u03f6\u0003\u0002\u0002\u0002\u03f6\u03f7\u0003\u0002\u0002",
    "\u0002\u03f7\u03f9\u0007\u00b8\u0002\u0002\u03f8\u03fa\u0007\u00e0\u0002",
    "\u0002\u03f9\u03f8\u0003\u0002\u0002\u0002\u03f9\u03fa\u0003\u0002\u0002",
    "\u0002\u03fa\u03fb\u0003\u0002\u0002\u0002\u03fb\u03fd\u0005\u00dep",
    "\u0002\u03fc\u03f5\u0003\u0002\u0002\u0002\u03fd\u0400\u0003\u0002\u0002",
    "\u0002\u03fe\u03fc\u0003\u0002\u0002\u0002\u03fe\u03ff\u0003\u0002\u0002",
    "\u0002\u03ffU\u0003\u0002\u0002\u0002\u0400\u03fe\u0003\u0002\u0002",
    "\u0002\u0401\u0402\u0007=\u0002\u0002\u0402\u0403\u0007\u00e0\u0002",
    "\u0002\u0403\u0404\u0005\u00dep\u0002\u0404W\u0003\u0002\u0002\u0002",
    "\u0405\u0406\u0005\u0134\u009b\u0002\u0406\u0407\u0007\u00e0\u0002\u0002",
    "\u0407\u0409\u0003\u0002\u0002\u0002\u0408\u0405\u0003\u0002\u0002\u0002",
    "\u0408\u0409\u0003\u0002\u0002\u0002\u0409\u040a\u0003\u0002\u0002\u0002",
    "\u040a\u040b\u0007>\u0002\u0002\u040b\u040c\u0007\u00e0\u0002\u0002",
    "\u040c\u040e\u0005\u0118\u008d\u0002\u040d\u040f\u0007\u00e0\u0002\u0002",
    "\u040e\u040d\u0003\u0002\u0002\u0002\u040e\u040f\u0003\u0002\u0002\u0002",
    "\u040f\u0410\u0003\u0002\u0002\u0002\u0410\u0411\u0005\u010e\u0088\u0002",
    "\u0411Y\u0003\u0002\u0002\u0002\u0412\u0413\t\u0005\u0002\u0002\u0413",
    "[\u0003\u0002\u0002\u0002\u0414\u0415\u0007E\u0002\u0002\u0415\u0416",
    "\u0007\u00e0\u0002\u0002\u0416\u0418\u0005\u00dep\u0002\u0417\u0419",
    "\u0007\u00e0\u0002\u0002\u0418\u0417\u0003\u0002\u0002\u0002\u0418\u0419",
    "\u0003\u0002\u0002\u0002\u0419\u041a\u0003\u0002\u0002\u0002\u041a\u041c",
    "\u0007\u00b8\u0002\u0002\u041b\u041d\u0007\u00e0\u0002\u0002\u041c\u041b",
    "\u0003\u0002\u0002\u0002\u041c\u041d\u0003\u0002\u0002\u0002\u041d\u041e",
    "\u0003\u0002\u0002\u0002\u041e\u041f\u0005\u00dep\u0002\u041f]\u0003",
    "\u0002\u0002\u0002\u0420\u0421\u0007G\u0002\u0002\u0421\u0422\u0007",
    "\u00e0\u0002\u0002\u0422\u0423\u0007-\u0002\u0002\u0423\u0424\u0007",
    "\u00e0\u0002\u0002\u0424\u0426\u0005\u0118\u008d\u0002\u0425\u0427\u0005",
    "\u0132\u009a\u0002\u0426\u0425\u0003\u0002\u0002\u0002\u0426\u0427\u0003",
    "\u0002\u0002\u0002\u0427\u0428\u0003\u0002\u0002\u0002\u0428\u0429\u0007",
    "\u00e0\u0002\u0002\u0429\u042a\u0007P\u0002\u0002\u042a\u042b\u0007",
    "\u00e0\u0002\u0002\u042b\u042d\u0005\u00dep\u0002\u042c\u042e\u0007",
    "\u00de\u0002\u0002\u042d\u042c\u0003\u0002\u0002\u0002\u042e\u042f\u0003",
    "\u0002\u0002\u0002\u042f\u042d\u0003\u0002\u0002\u0002\u042f\u0430\u0003",
    "\u0002\u0002\u0002\u0430\u0437\u0003\u0002\u0002\u0002\u0431\u0433\u0005",
    "2\u001a\u0002\u0432\u0434\u0007\u00de\u0002\u0002\u0433\u0432\u0003",
    "\u0002\u0002\u0002\u0434\u0435\u0003\u0002\u0002\u0002\u0435\u0433\u0003",
    "\u0002\u0002\u0002\u0435\u0436\u0003\u0002\u0002\u0002\u0436\u0438\u0003",
    "\u0002\u0002\u0002\u0437\u0431\u0003\u0002\u0002\u0002\u0437\u0438\u0003",
    "\u0002\u0002\u0002\u0438\u0439\u0003\u0002\u0002\u0002\u0439\u043c\u0007",
    "k\u0002\u0002\u043a\u043b\u0007\u00e0\u0002\u0002\u043b\u043d\u0005",
    "\u0118\u008d\u0002\u043c\u043a\u0003\u0002\u0002\u0002\u043c\u043d\u0003",
    "\u0002\u0002\u0002\u043d_\u0003\u0002\u0002\u0002\u043e\u043f\u0007",
    "G\u0002\u0002\u043f\u0440\u0007\u00e0\u0002\u0002\u0440\u0442\u0005",
    "\u00fc\u007f\u0002\u0441\u0443\u0005\u0132\u009a\u0002\u0442\u0441\u0003",
    "\u0002\u0002\u0002\u0442\u0443\u0003\u0002\u0002\u0002\u0443\u0446\u0003",
    "\u0002\u0002\u0002\u0444\u0445\u0007\u00e0\u0002\u0002\u0445\u0447\u0005",
    "\u011a\u008e\u0002\u0446\u0444\u0003\u0002\u0002\u0002\u0446\u0447\u0003",
    "\u0002\u0002\u0002\u0447\u0449\u0003\u0002\u0002\u0002\u0448\u044a\u0007",
    "\u00e0\u0002\u0002\u0449\u0448\u0003\u0002\u0002\u0002\u0449\u044a\u0003",
    "\u0002\u0002\u0002\u044a\u044b\u0003\u0002\u0002\u0002\u044b\u044d\u0007",
    "\u00bd\u0002\u0002\u044c\u044e\u0007\u00e0\u0002\u0002\u044d\u044c\u0003",
    "\u0002\u0002\u0002\u044d\u044e\u0003\u0002\u0002\u0002\u044e\u044f\u0003",
    "\u0002\u0002\u0002\u044f\u0450\u0005\u00dep\u0002\u0450\u0451\u0007",
    "\u00e0\u0002\u0002\u0451\u0452\u0007\u00a4\u0002\u0002\u0452\u0453\u0007",
    "\u00e0\u0002\u0002\u0453\u0458\u0005\u00dep\u0002\u0454\u0455\u0007",
    "\u00e0\u0002\u0002\u0455\u0456\u0007\u009c\u0002\u0002\u0456\u0457\u0007",
    "\u00e0\u0002\u0002\u0457\u0459\u0005\u00dep\u0002\u0458\u0454\u0003",
    "\u0002\u0002\u0002\u0458\u0459\u0003\u0002\u0002\u0002\u0459\u045b\u0003",
    "\u0002\u0002\u0002\u045a\u045c\u0007\u00de\u0002\u0002\u045b\u045a\u0003",
    "\u0002\u0002\u0002\u045c\u045d\u0003\u0002\u0002\u0002\u045d\u045b\u0003",
    "\u0002\u0002\u0002\u045d\u045e\u0003\u0002\u0002\u0002\u045e\u0465\u0003",
    "\u0002\u0002\u0002\u045f\u0461\u00052\u001a\u0002\u0460\u0462\u0007",
    "\u00de\u0002\u0002\u0461\u0460\u0003\u0002\u0002\u0002\u0462\u0463\u0003",
    "\u0002\u0002\u0002\u0463\u0461\u0003\u0002\u0002\u0002\u0463\u0464\u0003",
    "\u0002\u0002\u0002\u0464\u0466\u0003\u0002\u0002\u0002\u0465\u045f\u0003",
    "\u0002\u0002\u0002\u0465\u0466\u0003\u0002\u0002\u0002\u0466\u0467\u0003",
    "\u0002\u0002\u0002\u0467\u046d\u0007k\u0002\u0002\u0468\u0469\u0007",
    "\u00e0\u0002\u0002\u0469\u046b\u0005\u0118\u008d\u0002\u046a\u046c\u0005",
    "\u0132\u009a\u0002\u046b\u046a\u0003\u0002\u0002\u0002\u046b\u046c\u0003",
    "\u0002\u0002\u0002\u046c\u046e\u0003\u0002\u0002\u0002\u046d\u0468\u0003",
    "\u0002\u0002\u0002\u046d\u046e\u0003\u0002\u0002\u0002\u046ea\u0003",
    "\u0002\u0002\u0002\u046f\u0470\u0005\u0134\u009b\u0002\u0470\u0471\u0007",
    "\u00e0\u0002\u0002\u0471\u0473\u0003\u0002\u0002\u0002\u0472\u046f\u0003",
    "\u0002\u0002\u0002\u0472\u0473\u0003\u0002\u0002\u0002\u0473\u0476\u0003",
    "\u0002\u0002\u0002\u0474\u0475\u0007\u009b\u0002\u0002\u0475\u0477\u0007",
    "\u00e0\u0002\u0002\u0476\u0474\u0003\u0002\u0002\u0002\u0476\u0477\u0003",
    "\u0002\u0002\u0002\u0477\u0478\u0003\u0002\u0002\u0002\u0478\u0479\u0007",
    "H\u0002\u0002\u0479\u047a\u0007\u00e0\u0002\u0002\u047a\u047f\u0005",
    "\u0118\u008d\u0002\u047b\u047d\u0007\u00e0\u0002\u0002\u047c\u047b\u0003",
    "\u0002\u0002\u0002\u047c\u047d\u0003\u0002\u0002\u0002\u047d\u047e\u0003",
    "\u0002\u0002\u0002\u047e\u0480\u0005\u010e\u0088\u0002\u047f\u047c\u0003",
    "\u0002\u0002\u0002\u047f\u0480\u0003\u0002\u0002\u0002\u0480\u0483\u0003",
    "\u0002\u0002\u0002\u0481\u0482\u0007\u00e0\u0002\u0002\u0482\u0484\u0005",
    "\u011a\u008e\u0002\u0483\u0481\u0003\u0002\u0002\u0002\u0483\u0484\u0003",
    "\u0002\u0002\u0002\u0484\u0486\u0003\u0002\u0002\u0002\u0485\u0487\u0007",
    "\u00de\u0002\u0002\u0486\u0485\u0003\u0002\u0002\u0002\u0487\u0488\u0003",
    "\u0002\u0002\u0002\u0488\u0486\u0003\u0002\u0002\u0002\u0488\u0489\u0003",
    "\u0002\u0002\u0002\u0489\u0490\u0003\u0002\u0002\u0002\u048a\u048c\u0005",
    "2\u001a\u0002\u048b\u048d\u0007\u00de\u0002\u0002\u048c\u048b\u0003",
    "\u0002\u0002\u0002\u048d\u048e\u0003\u0002\u0002\u0002\u048e\u048c\u0003",
    "\u0002\u0002\u0002\u048e\u048f\u0003\u0002\u0002\u0002\u048f\u0491\u0003",
    "\u0002\u0002\u0002\u0490\u048a\u0003\u0002\u0002\u0002\u0490\u0491\u0003",
    "\u0002\u0002\u0002\u0491\u0492\u0003\u0002\u0002\u0002\u0492\u0493\u0007",
    "1\u0002\u0002\u0493c\u0003\u0002\u0002\u0002\u0494\u0495\u0007I\u0002",
    "\u0002\u0495\u0496\u0007\u00e0\u0002\u0002\u0496\u0498\u0005\u00dep",
    "\u0002\u0497\u0499\u0007\u00e0\u0002\u0002\u0498\u0497\u0003\u0002\u0002",
    "\u0002\u0498\u0499\u0003\u0002\u0002\u0002\u0499\u049a\u0003\u0002\u0002",
    "\u0002\u049a\u049c\u0007\u00b8\u0002\u0002\u049b\u049d\u0007\u00e0\u0002",
    "\u0002\u049c\u049b\u0003\u0002\u0002\u0002\u049c\u049d\u0003\u0002\u0002",
    "\u0002\u049d\u049f\u0003\u0002\u0002\u0002\u049e\u04a0\u0005\u00dep",
    "\u0002\u049f\u049e\u0003\u0002\u0002\u0002\u049f\u04a0\u0003\u0002\u0002",
    "\u0002\u04a0\u04a2\u0003\u0002\u0002\u0002\u04a1\u04a3\u0007\u00e0\u0002",
    "\u0002\u04a2\u04a1\u0003\u0002\u0002\u0002\u04a2\u04a3\u0003\u0002\u0002",
    "\u0002\u04a3\u04a4\u0003\u0002\u0002\u0002\u04a4\u04a6\u0007\u00b8\u0002",
    "\u0002\u04a5\u04a7\u0007\u00e0\u0002\u0002\u04a6\u04a5\u0003\u0002\u0002",
    "\u0002\u04a6\u04a7\u0003\u0002\u0002\u0002\u04a7\u04a8\u0003\u0002\u0002",
    "\u0002\u04a8\u04a9\u0005\u00dep\u0002\u04a9e\u0003\u0002\u0002\u0002",
    "\u04aa\u04ab\u0007K\u0002\u0002\u04ab\u04ac\u0007\u00e0\u0002\u0002",
    "\u04ac\u04ad\u0005\u00dep\u0002\u04adg\u0003\u0002\u0002\u0002\u04ae",
    "\u04af\u0007L\u0002\u0002\u04af\u04b0\u0007\u00e0\u0002\u0002\u04b0",
    "\u04b1\u0005\u00dep\u0002\u04b1i\u0003\u0002\u0002\u0002\u04b2\u04b3",
    "\u0007M\u0002\u0002\u04b3\u04b4\u0007\u00e0\u0002\u0002\u04b4\u04b5",
    "\u0005n8\u0002\u04b5\u04b6\u0007\u00e0\u0002\u0002\u04b6\u04b7\u0007",
    "\u00a2\u0002\u0002\u04b7\u04b8\u0007\u00e0\u0002\u0002\u04b8\u04bd\u0005",
    "4\u001b\u0002\u04b9\u04ba\u0007\u00e0\u0002\u0002\u04ba\u04bb\u0007",
    ".\u0002\u0002\u04bb\u04bc\u0007\u00e0\u0002\u0002\u04bc\u04be\u0005",
    "4\u001b\u0002\u04bd\u04b9\u0003\u0002\u0002\u0002\u04bd\u04be\u0003",
    "\u0002\u0002\u0002\u04be\u04cc\u0003\u0002\u0002\u0002\u04bf\u04c3\u0005",
    "l7\u0002\u04c0\u04c2\u0005p9\u0002\u04c1\u04c0\u0003\u0002\u0002\u0002",
    "\u04c2\u04c5\u0003\u0002\u0002\u0002\u04c3\u04c1\u0003\u0002\u0002\u0002",
    "\u04c3\u04c4\u0003\u0002\u0002\u0002\u04c4\u04c7\u0003\u0002\u0002\u0002",
    "\u04c5\u04c3\u0003\u0002\u0002\u0002\u04c6\u04c8\u0005r:\u0002\u04c7",
    "\u04c6\u0003\u0002\u0002\u0002\u04c7\u04c8\u0003\u0002\u0002\u0002\u04c8",
    "\u04c9\u0003\u0002\u0002\u0002\u04c9\u04ca\u00072\u0002\u0002\u04ca",
    "\u04cc\u0003\u0002\u0002\u0002\u04cb\u04b2\u0003\u0002\u0002\u0002\u04cb",
    "\u04bf\u0003\u0002\u0002\u0002\u04cck\u0003\u0002\u0002\u0002\u04cd",
    "\u04ce\u0007M\u0002\u0002\u04ce\u04cf\u0007\u00e0\u0002\u0002\u04cf",
    "\u04d0\u0005n8\u0002\u04d0\u04d1\u0007\u00e0\u0002\u0002\u04d1\u04d3",
    "\u0007\u00a2\u0002\u0002\u04d2\u04d4\u0007\u00de\u0002\u0002\u04d3\u04d2",
    "\u0003\u0002\u0002\u0002\u04d4\u04d5\u0003\u0002\u0002\u0002\u04d5\u04d3",
    "\u0003\u0002\u0002\u0002\u04d5\u04d6\u0003\u0002\u0002\u0002\u04d6\u04dd",
    "\u0003\u0002\u0002\u0002\u04d7\u04d9\u00052\u001a\u0002\u04d8\u04da",
    "\u0007\u00de\u0002\u0002\u04d9\u04d8\u0003\u0002\u0002\u0002\u04da\u04db",
    "\u0003\u0002\u0002\u0002\u04db\u04d9\u0003\u0002\u0002\u0002\u04db\u04dc",
    "\u0003\u0002\u0002\u0002\u04dc\u04de\u0003\u0002\u0002\u0002\u04dd\u04d7",
    "\u0003\u0002\u0002\u0002\u04dd\u04de\u0003\u0002\u0002\u0002\u04dem",
    "\u0003\u0002\u0002\u0002\u04df\u04e0\u0005\u00dep\u0002\u04e0o\u0003",
    "\u0002\u0002\u0002\u04e1\u04e2\u0007/\u0002\u0002\u04e2\u04e3\u0007",
    "\u00e0\u0002\u0002\u04e3\u04e4\u0005n8\u0002\u04e4\u04e5\u0007\u00e0",
    "\u0002\u0002\u04e5\u04e7\u0007\u00a2\u0002\u0002\u04e6\u04e8\u0007\u00de",
    "\u0002\u0002\u04e7\u04e6\u0003\u0002\u0002\u0002\u04e8\u04e9\u0003\u0002",
    "\u0002\u0002\u04e9\u04e7\u0003\u0002\u0002\u0002\u04e9\u04ea\u0003\u0002",
    "\u0002\u0002\u04ea\u04f1\u0003\u0002\u0002\u0002\u04eb\u04ed\u00052",
    "\u001a\u0002\u04ec\u04ee\u0007\u00de\u0002\u0002\u04ed\u04ec\u0003\u0002",
    "\u0002\u0002\u04ee\u04ef\u0003\u0002\u0002\u0002\u04ef\u04ed\u0003\u0002",
    "\u0002\u0002\u04ef\u04f0\u0003\u0002\u0002\u0002\u04f0\u04f2\u0003\u0002",
    "\u0002\u0002\u04f1\u04eb\u0003\u0002\u0002\u0002\u04f1\u04f2\u0003\u0002",
    "\u0002\u0002\u04f2q\u0003\u0002\u0002\u0002\u04f3\u04f5\u0007.\u0002",
    "\u0002\u04f4\u04f6\u0007\u00de\u0002\u0002\u04f5\u04f4\u0003\u0002\u0002",
    "\u0002\u04f6\u04f7\u0003\u0002\u0002\u0002\u04f7\u04f5\u0003\u0002\u0002",
    "\u0002\u04f7\u04f8\u0003\u0002\u0002\u0002\u04f8\u04ff\u0003\u0002\u0002",
    "\u0002\u04f9\u04fb\u00052\u001a\u0002\u04fa\u04fc\u0007\u00de\u0002",
    "\u0002\u04fb\u04fa\u0003\u0002\u0002\u0002\u04fc\u04fd\u0003\u0002\u0002",
    "\u0002\u04fd\u04fb\u0003\u0002\u0002\u0002\u04fd\u04fe\u0003\u0002\u0002",
    "\u0002\u04fe\u0500\u0003\u0002\u0002\u0002\u04ff\u04f9\u0003\u0002\u0002",
    "\u0002\u04ff\u0500\u0003\u0002\u0002\u0002\u0500s\u0003\u0002\u0002",
    "\u0002\u0501\u0502\u0007O\u0002\u0002\u0502\u0503\u0007\u00e0\u0002",
    "\u0002\u0503\u0504\u0005\u0118\u008d\u0002\u0504u\u0003\u0002\u0002",
    "\u0002\u0505\u0506\u0007Q\u0002\u0002\u0506\u0507\u0007\u00e0\u0002",
    "\u0002\u0507\u0510\u0005\u00dep\u0002\u0508\u050a\u0007\u00e0\u0002",
    "\u0002\u0509\u0508\u0003\u0002\u0002\u0002\u0509\u050a\u0003\u0002\u0002",
    "\u0002\u050a\u050b\u0003\u0002\u0002\u0002\u050b\u050d\u0007\u00b8\u0002",
    "\u0002\u050c\u050e\u0007\u00e0\u0002\u0002\u050d\u050c\u0003\u0002\u0002",
    "\u0002\u050d\u050e\u0003\u0002\u0002\u0002\u050e\u050f\u0003\u0002\u0002",
    "\u0002\u050f\u0511\u0005\u00dep\u0002\u0510\u0509\u0003\u0002\u0002",
    "\u0002\u0511\u0512\u0003\u0002\u0002\u0002\u0512\u0510\u0003\u0002\u0002",
    "\u0002\u0512\u0513\u0003\u0002\u0002\u0002\u0513w\u0003\u0002\u0002",
    "\u0002\u0514\u0515\u0007T\u0002\u0002\u0515\u0516\u0007\u00e0\u0002",
    "\u0002\u0516\u0517\u0005\u00dep\u0002\u0517y\u0003\u0002\u0002\u0002",
    "\u0518\u0519\u0007Z\u0002\u0002\u0519\u051b\u0007\u00e0\u0002\u0002",
    "\u051a\u0518\u0003\u0002\u0002\u0002\u051a\u051b\u0003\u0002\u0002\u0002",
    "\u051b\u051c\u0003\u0002\u0002\u0002\u051c\u051e\u0005\u00fa~\u0002",
    "\u051d\u051f\u0007\u00e0\u0002\u0002\u051e\u051d\u0003\u0002\u0002\u0002",
    "\u051e\u051f\u0003\u0002\u0002\u0002\u051f\u0520\u0003\u0002\u0002\u0002",
    "\u0520\u0522\t\u0006\u0002\u0002\u0521\u0523\u0007\u00e0\u0002\u0002",
    "\u0522\u0521\u0003\u0002\u0002\u0002\u0522\u0523\u0003\u0002\u0002\u0002",
    "\u0523\u0524\u0003\u0002\u0002\u0002\u0524\u0525\u0005\u00dep\u0002",
    "\u0525{\u0003\u0002\u0002\u0002\u0526\u0527\u0007]\u0002\u0002\u0527",
    "\u0528\u0007\u00e0\u0002\u0002\u0528\u052a\u0005\u00dep\u0002\u0529",
    "\u052b\u0007\u00e0\u0002\u0002\u052a\u0529\u0003\u0002\u0002\u0002\u052a",
    "\u052b\u0003\u0002\u0002\u0002\u052b\u052c\u0003\u0002\u0002\u0002\u052c",
    "\u052e\u0007\u00b8\u0002\u0002\u052d\u052f\u0007\u00e0\u0002\u0002\u052e",
    "\u052d\u0003\u0002\u0002\u0002\u052e\u052f\u0003\u0002\u0002\u0002\u052f",
    "\u0530\u0003\u0002\u0002\u0002\u0530\u0531\u0005\u00dep\u0002\u0531",
    "}\u0003\u0002\u0002\u0002\u0532\u0533\u0007U\u0002\u0002\u0533\u0534",
    "\u0007\u00e0\u0002\u0002\u0534\u0535\u0005\u00dep\u0002\u0535\u007f",
    "\u0003\u0002\u0002\u0002\u0536\u0537\u0007V\u0002\u0002\u0537\u0538",
    "\u0007\u00e0\u0002\u0002\u0538\u0547\u0005\u00dep\u0002\u0539\u053b",
    "\u0007\u00e0\u0002\u0002\u053a\u0539\u0003\u0002\u0002\u0002\u053a\u053b",
    "\u0003\u0002\u0002\u0002\u053b\u053c\u0003\u0002\u0002\u0002\u053c\u053e",
    "\u0007\u00b8\u0002\u0002\u053d\u053f\u0007\u00e0\u0002\u0002\u053e\u053d",
    "\u0003\u0002\u0002\u0002\u053e\u053f\u0003\u0002\u0002\u0002\u053f\u0540",
    "\u0003\u0002\u0002\u0002\u0540\u0545\u0005\u00dep\u0002\u0541\u0542",
    "\u0007\u00e0\u0002\u0002\u0542\u0543\u0007\u00a4\u0002\u0002\u0543\u0544",
    "\u0007\u00e0\u0002\u0002\u0544\u0546\u0005\u00dep\u0002\u0545\u0541",
    "\u0003\u0002\u0002\u0002\u0545\u0546\u0003\u0002\u0002\u0002\u0546\u0548",
    "\u0003\u0002\u0002\u0002\u0547\u053a\u0003\u0002\u0002\u0002\u0547\u0548",
    "\u0003\u0002\u0002\u0002\u0548\u0081\u0003\u0002\u0002\u0002\u0549\u054a",
    "\u0007a\u0002\u0002\u054a\u054b\u0007\u00e0\u0002\u0002\u054b\u054d",
    "\u0005\u00fa~\u0002\u054c\u054e\u0007\u00e0\u0002\u0002\u054d\u054c",
    "\u0003\u0002\u0002\u0002\u054d\u054e\u0003\u0002\u0002\u0002\u054e\u054f",
    "\u0003\u0002\u0002\u0002\u054f\u0551\u0007\u00bd\u0002\u0002\u0550\u0552",
    "\u0007\u00e0\u0002\u0002\u0551\u0550\u0003\u0002\u0002\u0002\u0551\u0552",
    "\u0003\u0002\u0002\u0002\u0552\u0553\u0003\u0002\u0002\u0002\u0553\u0554",
    "\u0005\u00dep\u0002\u0554\u0083\u0003\u0002\u0002\u0002\u0555\u0559",
    "\u0005\u0086D\u0002\u0556\u0558\u0005\u0088E\u0002\u0557\u0556\u0003",
    "\u0002\u0002\u0002\u0558\u055b\u0003\u0002\u0002\u0002\u0559\u0557\u0003",
    "\u0002\u0002\u0002\u0559\u055a\u0003\u0002\u0002\u0002\u055a\u055d\u0003",
    "\u0002\u0002\u0002\u055b\u0559\u0003\u0002\u0002\u0002\u055c\u055e\u0005",
    "\u008aF\u0002\u055d\u055c\u0003\u0002\u0002\u0002\u055d\u055e\u0003",
    "\u0002\u0002\u0002\u055e\u055f\u0003\u0002\u0002\u0002\u055f\u0560\u0007",
    "e\u0002\u0002\u0560\u0085\u0003\u0002\u0002\u0002\u0561\u0562\u0007",
    "b\u0002\u0002\u0562\u0563\u0007\u00e0\u0002\u0002\u0563\u0564\u0005",
    "n8\u0002\u0564\u0565\u0007\u00e0\u0002\u0002\u0565\u0567\u0007\u00a2",
    "\u0002\u0002\u0566\u0568\u0007\u00de\u0002\u0002\u0567\u0566\u0003\u0002",
    "\u0002\u0002\u0568\u0569\u0003\u0002\u0002\u0002\u0569\u0567\u0003\u0002",
    "\u0002\u0002\u0569\u056a\u0003\u0002\u0002\u0002\u056a\u0571\u0003\u0002",
    "\u0002\u0002\u056b\u056d\u0005\u001a\u000e\u0002\u056c\u056e\u0007\u00de",
    "\u0002\u0002\u056d\u056c\u0003\u0002\u0002\u0002\u056e\u056f\u0003\u0002",
    "\u0002\u0002\u056f\u056d\u0003\u0002\u0002\u0002\u056f\u0570\u0003\u0002",
    "\u0002\u0002\u0570\u0572\u0003\u0002\u0002\u0002\u0571\u056b\u0003\u0002",
    "\u0002\u0002\u0571\u0572\u0003\u0002\u0002\u0002\u0572\u0087\u0003\u0002",
    "\u0002\u0002\u0573\u0574\u0007c\u0002\u0002\u0574\u0575\u0007\u00e0",
    "\u0002\u0002\u0575\u0576\u0005n8\u0002\u0576\u0577\u0007\u00e0\u0002",
    "\u0002\u0577\u0579\u0007\u00a2\u0002\u0002\u0578\u057a\u0007\u00de\u0002",
    "\u0002\u0579\u0578\u0003\u0002\u0002\u0002\u057a\u057b\u0003\u0002\u0002",
    "\u0002\u057b\u0579\u0003\u0002\u0002\u0002\u057b\u057c\u0003\u0002\u0002",
    "\u0002\u057c\u0583\u0003\u0002\u0002\u0002\u057d\u057f\u0005\u001a\u000e",
    "\u0002\u057e\u0580\u0007\u00de\u0002\u0002\u057f\u057e\u0003\u0002\u0002",
    "\u0002\u0580\u0581\u0003\u0002\u0002\u0002\u0581\u057f\u0003\u0002\u0002",
    "\u0002\u0581\u0582\u0003\u0002\u0002\u0002\u0582\u0584\u0003\u0002\u0002",
    "\u0002\u0583\u057d\u0003\u0002\u0002\u0002\u0583\u0584\u0003\u0002\u0002",
    "\u0002\u0584\u0089\u0003\u0002\u0002\u0002\u0585\u0587\u0007d\u0002",
    "\u0002\u0586\u0588\u0007\u00de\u0002\u0002\u0587\u0586\u0003\u0002\u0002",
    "\u0002\u0588\u0589\u0003\u0002\u0002\u0002\u0589\u0587\u0003\u0002\u0002",
    "\u0002\u0589\u058a\u0003\u0002\u0002\u0002\u058a\u0591\u0003\u0002\u0002",
    "\u0002\u058b\u058d\u0005\u001a\u000e\u0002\u058c\u058e\u0007\u00de\u0002",
    "\u0002\u058d\u058c\u0003\u0002\u0002\u0002\u058e\u058f\u0003\u0002\u0002",
    "\u0002\u058f\u058d\u0003\u0002\u0002\u0002\u058f\u0590\u0003\u0002\u0002",
    "\u0002\u0590\u0592\u0003\u0002\u0002\u0002\u0591\u058b\u0003\u0002\u0002",
    "\u0002\u0591\u0592\u0003\u0002\u0002\u0002\u0592\u008b\u0003\u0002\u0002",
    "\u0002\u0593\u0595\u0007g\u0002\u0002\u0594\u0596\u0007\u00e0\u0002",
    "\u0002\u0595\u0594\u0003\u0002\u0002\u0002\u0595\u0596\u0003\u0002\u0002",
    "\u0002\u0596\u0597\u0003\u0002\u0002\u0002\u0597\u0599\u0007\u00c4\u0002",
    "\u0002\u0598\u059a\u0007\u00e0\u0002\u0002\u0599\u0598\u0003\u0002\u0002",
    "\u0002\u0599\u059a\u0003\u0002\u0002\u0002\u059a\u059b\u0003\u0002\u0002",
    "\u0002\u059b\u059d\u0005\u0108\u0085\u0002\u059c\u059e\u0007\u00e0\u0002",
    "\u0002\u059d\u059c\u0003\u0002\u0002\u0002\u059d\u059e\u0003\u0002\u0002",
    "\u0002\u059e\u059f\u0003\u0002\u0002\u0002\u059f\u05a0\u0007\u00cf\u0002",
    "\u0002\u05a0\u008d\u0003\u0002\u0002\u0002\u05a1\u05a2\u0007h\u0002",
    "\u0002\u05a2\u05a3\u0007\u00e0\u0002\u0002\u05a3\u05a4\u0005\u00dep",
    "\u0002\u05a4\u008f\u0003\u0002\u0002\u0002\u05a5\u05a6\u0007j\u0002",
    "\u0002\u05a6\u05a7\u0007\u00e0\u0002\u0002\u05a7\u05a8\u0005\u00dep",
    "\u0002\u05a8\u05a9\u0007\u00e0\u0002\u0002\u05a9\u05aa\u0007\n\u0002",
    "\u0002\u05aa\u05ab\u0007\u00e0\u0002\u0002\u05ab\u05ac\u0005\u00dep",
    "\u0002\u05ac\u0091\u0003\u0002\u0002\u0002\u05ad\u05ae\t\u0007\u0002",
    "\u0002\u05ae\u05b8\u0007\u00e0\u0002\u0002\u05af\u05b0\u0007L\u0002",
    "\u0002\u05b0\u05b1\u0007\u00e0\u0002\u0002\u05b1\u05b3\u0005\u00dep",
    "\u0002\u05b2\u05b4\u0007\u00b7\u0002\u0002\u05b3\u05b2\u0003\u0002\u0002",
    "\u0002\u05b3\u05b4\u0003\u0002\u0002\u0002\u05b4\u05b9\u0003\u0002\u0002",
    "\u0002\u05b5\u05b6\u0007\u008d\u0002\u0002\u05b6\u05b7\u0007\u00e0\u0002",
    "\u0002\u05b7\u05b9\u0007k\u0002\u0002\u05b8\u05af\u0003\u0002\u0002",
    "\u0002\u05b8\u05b5\u0003\u0002\u0002\u0002\u05b9\u0093\u0003\u0002\u0002",
    "\u0002\u05ba\u05bb\u0007q\u0002\u0002\u05bb\u05bc\u0007\u00e0\u0002",
    "\u0002\u05bc\u05bd\u0005\u00dep\u0002\u05bd\u05be\u0007\u00e0\u0002",
    "\u0002\u05be\u05bf\u0007L\u0002\u0002\u05bf\u05c0\u0007\u00e0\u0002",
    "\u0002\u05c0\u05cb\u0005\u00dep\u0002\u05c1\u05c3\u0007\u00e0\u0002",
    "\u0002\u05c2\u05c1\u0003\u0002\u0002\u0002\u05c2\u05c3\u0003\u0002\u0002",
    "\u0002\u05c3\u05c4\u0003\u0002\u0002\u0002\u05c4\u05c6\u0007\u00b8\u0002",
    "\u0002\u05c5\u05c7\u0007\u00e0\u0002\u0002\u05c6\u05c5\u0003\u0002\u0002",
    "\u0002\u05c6\u05c7\u0003\u0002\u0002\u0002\u05c7\u05c8\u0003\u0002\u0002",
    "\u0002\u05c8\u05ca\u0005\u00dep\u0002\u05c9\u05c2\u0003\u0002\u0002",
    "\u0002\u05ca\u05cd\u0003\u0002\u0002\u0002\u05cb\u05c9\u0003\u0002\u0002",
    "\u0002\u05cb\u05cc\u0003\u0002\u0002\u0002\u05cc\u0095\u0003\u0002\u0002",
    "\u0002\u05cd\u05cb\u0003\u0002\u0002\u0002\u05ce\u05cf\u0007q\u0002",
    "\u0002\u05cf\u05d0\u0007\u00e0\u0002\u0002\u05d0\u05d1\u0005\u00dep",
    "\u0002\u05d1\u05d2\u0007\u00e0\u0002\u0002\u05d2\u05d3\u0007K\u0002",
    "\u0002\u05d3\u05d4\u0007\u00e0\u0002\u0002\u05d4\u05df\u0005\u00dep",
    "\u0002\u05d5\u05d7\u0007\u00e0\u0002\u0002\u05d6\u05d5\u0003\u0002\u0002",
    "\u0002\u05d6\u05d7\u0003\u0002\u0002\u0002\u05d7\u05d8\u0003\u0002\u0002",
    "\u0002\u05d8\u05da\u0007\u00b8\u0002\u0002\u05d9\u05db\u0007\u00e0\u0002",
    "\u0002\u05da\u05d9\u0003\u0002\u0002\u0002\u05da\u05db\u0003\u0002\u0002",
    "\u0002\u05db\u05dc\u0003\u0002\u0002\u0002\u05dc\u05de\u0005\u00dep",
    "\u0002\u05dd\u05d6\u0003\u0002\u0002\u0002\u05de\u05e1\u0003\u0002\u0002",
    "\u0002\u05df\u05dd\u0003\u0002\u0002\u0002\u05df\u05e0\u0003\u0002\u0002",
    "\u0002\u05e0\u0097\u0003\u0002\u0002\u0002\u05e1\u05df\u0003\u0002\u0002",
    "\u0002\u05e2\u05e3\u0007t\u0002\u0002\u05e3\u05e4\u0007\u00e0\u0002",
    "\u0002\u05e4\u05e5\u0005\u00dep\u0002\u05e5\u05e6\u0007\u00e0\u0002",
    "\u0002\u05e6\u05e7\u0007G\u0002\u0002\u05e7\u05e8\u0007\u00e0\u0002",
    "\u0002\u05e8\u05ed\t\b\u0002\u0002\u05e9\u05ea\u0007\u00e0\u0002\u0002",
    "\u05ea\u05eb\u0007\u0003\u0002\u0002\u05eb\u05ec\u0007\u00e0\u0002\u0002",
    "\u05ec\u05ee\t\t\u0002\u0002\u05ed\u05e9\u0003\u0002\u0002\u0002\u05ed",
    "\u05ee\u0003\u0002\u0002\u0002\u05ee\u05f1\u0003\u0002\u0002\u0002\u05ef",
    "\u05f0\u0007\u00e0\u0002\u0002\u05f0\u05f2\t\n\u0002\u0002\u05f1\u05ef",
    "\u0003\u0002\u0002\u0002\u05f1\u05f2\u0003\u0002\u0002\u0002\u05f2\u05f3",
    "\u0003\u0002\u0002\u0002\u05f3\u05f4\u0007\u00e0\u0002\u0002\u05f4\u05f5",
    "\u0007\n\u0002\u0002\u05f5\u05f6\u0007\u00e0\u0002\u0002\u05f6\u0601",
    "\u0005\u00dep\u0002\u05f7\u05f8\u0007\u00e0\u0002\u0002\u05f8\u05fa",
    "\u0007Y\u0002\u0002\u05f9\u05fb\u0007\u00e0\u0002\u0002\u05fa\u05f9",
    "\u0003\u0002\u0002\u0002\u05fa\u05fb\u0003\u0002\u0002\u0002\u05fb\u05fc",
    "\u0003\u0002\u0002\u0002\u05fc\u05fe\u0007\u00bd\u0002\u0002\u05fd\u05ff",
    "\u0007\u00e0\u0002\u0002\u05fe\u05fd\u0003\u0002\u0002\u0002\u05fe\u05ff",
    "\u0003\u0002\u0002\u0002\u05ff\u0600\u0003\u0002\u0002\u0002\u0600\u0602",
    "\u0005\u00dep\u0002\u0601\u05f7\u0003\u0002\u0002\u0002\u0601\u0602",
    "\u0003\u0002\u0002\u0002\u0602\u0099\u0003\u0002\u0002\u0002\u0603\u0610",
    "\u0005\u009cO\u0002\u0604\u0606\u0007\u00e0\u0002\u0002\u0605\u0604",
    "\u0003\u0002\u0002\u0002\u0605\u0606\u0003\u0002\u0002\u0002\u0606\u0607",
    "\u0003\u0002\u0002\u0002\u0607\u0609\t\u000b\u0002\u0002\u0608\u060a",
    "\u0007\u00e0\u0002\u0002\u0609\u0608\u0003\u0002\u0002\u0002\u0609\u060a",
    "\u0003\u0002\u0002\u0002\u060a\u060c\u0003\u0002\u0002\u0002\u060b\u060d",
    "\u0005\u009cO\u0002\u060c\u060b\u0003\u0002\u0002\u0002\u060c\u060d",
    "\u0003\u0002\u0002\u0002\u060d\u060f\u0003\u0002\u0002\u0002\u060e\u0605",
    "\u0003\u0002\u0002\u0002\u060f\u0612\u0003\u0002\u0002\u0002\u0610\u060e",
    "\u0003\u0002\u0002\u0002\u0610\u0611\u0003\u0002\u0002\u0002\u0611\u0625",
    "\u0003\u0002\u0002\u0002\u0612\u0610\u0003\u0002\u0002\u0002\u0613\u0615",
    "\u0005\u009cO\u0002\u0614\u0613\u0003\u0002\u0002\u0002\u0614\u0615",
    "\u0003\u0002\u0002\u0002\u0615\u0620\u0003\u0002\u0002\u0002\u0616\u0618",
    "\u0007\u00e0\u0002\u0002\u0617\u0616\u0003\u0002\u0002\u0002\u0617\u0618",
    "\u0003\u0002\u0002\u0002\u0618\u0619\u0003\u0002\u0002\u0002\u0619\u061b",
    "\t\u000b\u0002\u0002\u061a\u061c\u0007\u00e0\u0002\u0002\u061b\u061a",
    "\u0003\u0002\u0002\u0002\u061b\u061c\u0003\u0002\u0002\u0002\u061c\u061e",
    "\u0003\u0002\u0002\u0002\u061d\u061f\u0005\u009cO\u0002\u061e\u061d",
    "\u0003\u0002\u0002\u0002\u061e\u061f\u0003\u0002\u0002\u0002\u061f\u0621",
    "\u0003\u0002\u0002\u0002\u0620\u0617\u0003\u0002\u0002\u0002\u0621\u0622",
    "\u0003\u0002\u0002\u0002\u0622\u0620\u0003\u0002\u0002\u0002\u0622\u0623",
    "\u0003\u0002\u0002\u0002\u0623\u0625\u0003\u0002\u0002\u0002\u0624\u0603",
    "\u0003\u0002\u0002\u0002\u0624\u0614\u0003\u0002\u0002\u0002\u0625\u009b",
    "\u0003\u0002\u0002\u0002\u0626\u0634\t\f\u0002\u0002\u0627\u0629\u0007",
    "\u00e0\u0002\u0002\u0628\u0627\u0003\u0002\u0002\u0002\u0628\u0629\u0003",
    "\u0002\u0002\u0002\u0629\u062a\u0003\u0002\u0002\u0002\u062a\u062c\u0007",
    "\u00c4\u0002\u0002\u062b\u062d\u0007\u00e0\u0002\u0002\u062c\u062b\u0003",
    "\u0002\u0002\u0002\u062c\u062d\u0003\u0002\u0002\u0002\u062d\u062e\u0003",
    "\u0002\u0002\u0002\u062e\u0630\u0005\u0108\u0085\u0002\u062f\u0631\u0007",
    "\u00e0\u0002\u0002\u0630\u062f\u0003\u0002\u0002\u0002\u0630\u0631\u0003",
    "\u0002\u0002\u0002\u0631\u0632\u0003\u0002\u0002\u0002\u0632\u0633\u0007",
    "\u00cf\u0002\u0002\u0633\u0635\u0003\u0002\u0002\u0002\u0634\u0628\u0003",
    "\u0002\u0002\u0002\u0634\u0635\u0003\u0002\u0002\u0002\u0635\u0638\u0003",
    "\u0002\u0002\u0002\u0636\u0638\u0005\u00dep\u0002\u0637\u0626\u0003",
    "\u0002\u0002\u0002\u0637\u0636\u0003\u0002\u0002\u0002\u0638\u009d\u0003",
    "\u0002\u0002\u0002\u0639\u063a\u0007~\u0002\u0002\u063a\u063b\u0007",
    "\u00e0\u0002\u0002\u063b\u063d\u0005\u00dep\u0002\u063c\u063e\u0007",
    "\u00e0\u0002\u0002\u063d\u063c\u0003\u0002\u0002\u0002\u063d\u063e\u0003",
    "\u0002\u0002\u0002\u063e\u063f\u0003\u0002\u0002\u0002\u063f\u0644\u0007",
    "\u00b8\u0002\u0002\u0640\u0642\u0007\u00e0\u0002\u0002\u0641\u0640\u0003",
    "\u0002\u0002\u0002\u0641\u0642\u0003\u0002\u0002\u0002\u0642\u0643\u0003",
    "\u0002\u0002\u0002\u0643\u0645\u0005\u009aN\u0002\u0644\u0641\u0003",
    "\u0002\u0002\u0002\u0644\u0645\u0003\u0002\u0002\u0002\u0645\u009f\u0003",
    "\u0002\u0002\u0002\u0646\u0647\u0005\u0134\u009b\u0002\u0647\u0648\u0007",
    "\u00e0\u0002\u0002\u0648\u064a\u0003\u0002\u0002\u0002\u0649\u0646\u0003",
    "\u0002\u0002\u0002\u0649\u064a\u0003\u0002\u0002\u0002\u064a\u064d\u0003",
    "\u0002\u0002\u0002\u064b\u064c\u0007\u009b\u0002\u0002\u064c\u064e\u0007",
    "\u00e0\u0002\u0002\u064d\u064b\u0003\u0002\u0002\u0002\u064d\u064e\u0003",
    "\u0002\u0002\u0002\u064e\u064f\u0003\u0002\u0002\u0002\u064f\u0650\u0007",
    "\u0080\u0002\u0002\u0650\u0651\u0007\u00e0\u0002\u0002\u0651\u0653\u0005",
    "\u0118\u008d\u0002\u0652\u0654\u0005\u0132\u009a\u0002\u0653\u0652\u0003",
    "\u0002\u0002\u0002\u0653\u0654\u0003\u0002\u0002\u0002\u0654\u0659\u0003",
    "\u0002\u0002\u0002\u0655\u0657\u0007\u00e0\u0002\u0002\u0656\u0655\u0003",
    "\u0002\u0002\u0002\u0656\u0657\u0003\u0002\u0002\u0002\u0657\u0658\u0003",
    "\u0002\u0002\u0002\u0658\u065a\u0005\u010e\u0088\u0002\u0659\u0656\u0003",
    "\u0002\u0002\u0002\u0659\u065a\u0003\u0002\u0002\u0002\u065a\u065d\u0003",
    "\u0002\u0002\u0002\u065b\u065c\u0007\u00e0\u0002\u0002\u065c\u065e\u0005",
    "\u011a\u008e\u0002\u065d\u065b\u0003\u0002\u0002\u0002\u065d\u065e\u0003",
    "\u0002\u0002\u0002\u065e\u0660\u0003\u0002\u0002\u0002\u065f\u0661\u0007",
    "\u00de\u0002\u0002\u0660\u065f\u0003\u0002\u0002\u0002\u0661\u0662\u0003",
    "\u0002\u0002\u0002\u0662\u0660\u0003\u0002\u0002\u0002\u0662\u0663\u0003",
    "\u0002\u0002\u0002\u0663\u066a\u0003\u0002\u0002\u0002\u0664\u0666\u0005",
    "2\u001a\u0002\u0665\u0667\u0007\u00de\u0002\u0002\u0666\u0665\u0003",
    "\u0002\u0002\u0002\u0667\u0668\u0003\u0002\u0002\u0002\u0668\u0666\u0003",
    "\u0002\u0002\u0002\u0668\u0669\u0003\u0002\u0002\u0002\u0669\u066b\u0003",
    "\u0002\u0002\u0002\u066a\u0664\u0003\u0002\u0002\u0002\u066a\u066b\u0003",
    "\u0002\u0002\u0002\u066b\u066c\u0003\u0002\u0002\u0002\u066c\u066d\u0007",
    "3\u0002\u0002\u066d\u00a1\u0003\u0002\u0002\u0002\u066e\u066f\u0005",
    "\u0134\u009b\u0002\u066f\u0670\u0007\u00e0\u0002\u0002\u0670\u0672\u0003",
    "\u0002\u0002\u0002\u0671\u066e\u0003\u0002\u0002\u0002\u0671\u0672\u0003",
    "\u0002\u0002\u0002\u0672\u0675\u0003\u0002\u0002\u0002\u0673\u0674\u0007",
    "\u009b\u0002\u0002\u0674\u0676\u0007\u00e0\u0002\u0002\u0675\u0673\u0003",
    "\u0002\u0002\u0002\u0675\u0676\u0003\u0002\u0002\u0002\u0676\u0677\u0003",
    "\u0002\u0002\u0002\u0677\u0678\u0007\u0082\u0002\u0002\u0678\u0679\u0007",
    "\u00e0\u0002\u0002\u0679\u067e\u0005\u0118\u008d\u0002\u067a\u067c\u0007",
    "\u00e0\u0002\u0002\u067b\u067a\u0003\u0002\u0002\u0002\u067b\u067c\u0003",
    "\u0002\u0002\u0002\u067c\u067d\u0003\u0002\u0002\u0002\u067d\u067f\u0005",
    "\u010e\u0088\u0002\u067e\u067b\u0003\u0002\u0002\u0002\u067e\u067f\u0003",
    "\u0002\u0002\u0002\u067f\u0681\u0003\u0002\u0002\u0002\u0680\u0682\u0007",
    "\u00de\u0002\u0002\u0681\u0680\u0003\u0002\u0002\u0002\u0682\u0683\u0003",
    "\u0002\u0002\u0002\u0683\u0681\u0003\u0002\u0002\u0002\u0683\u0684\u0003",
    "\u0002\u0002\u0002\u0684\u068b\u0003\u0002\u0002\u0002\u0685\u0687\u0005",
    "2\u001a\u0002\u0686\u0688\u0007\u00de\u0002\u0002\u0687\u0686\u0003",
    "\u0002\u0002\u0002\u0688\u0689\u0003\u0002\u0002\u0002\u0689\u0687\u0003",
    "\u0002\u0002\u0002\u0689\u068a\u0003\u0002\u0002\u0002\u068a\u068c\u0003",
    "\u0002\u0002\u0002\u068b\u0685\u0003\u0002\u0002\u0002\u068b\u068c\u0003",
    "\u0002\u0002\u0002\u068c\u068d\u0003\u0002\u0002\u0002\u068d\u068e\u0007",
    "3\u0002\u0002\u068e\u00a3\u0003\u0002\u0002\u0002\u068f\u0690\u0005",
    "\u0134\u009b\u0002\u0690\u0691\u0007\u00e0\u0002\u0002\u0691\u0693\u0003",
    "\u0002\u0002\u0002\u0692\u068f\u0003\u0002\u0002\u0002\u0692\u0693\u0003",
    "\u0002\u0002\u0002\u0693\u0696\u0003\u0002\u0002\u0002\u0694\u0695\u0007",
    "\u009b\u0002\u0002\u0695\u0697\u0007\u00e0\u0002\u0002\u0696\u0694\u0003",
    "\u0002\u0002\u0002\u0696\u0697\u0003\u0002\u0002\u0002\u0697\u0698\u0003",
    "\u0002\u0002\u0002\u0698\u0699\u0007\u0081\u0002\u0002\u0699\u069a\u0007",
    "\u00e0\u0002\u0002\u069a\u069f\u0005\u0118\u008d\u0002\u069b\u069d\u0007",
    "\u00e0\u0002\u0002\u069c\u069b\u0003\u0002\u0002\u0002\u069c\u069d\u0003",
    "\u0002\u0002\u0002\u069d\u069e\u0003\u0002\u0002\u0002\u069e\u06a0\u0005",
    "\u010e\u0088\u0002\u069f\u069c\u0003\u0002\u0002\u0002\u069f\u06a0\u0003",
    "\u0002\u0002\u0002\u06a0\u06a2\u0003\u0002\u0002\u0002\u06a1\u06a3\u0007",
    "\u00de\u0002\u0002\u06a2\u06a1\u0003\u0002\u0002\u0002\u06a3\u06a4\u0003",
    "\u0002\u0002\u0002\u06a4\u06a2\u0003\u0002\u0002\u0002\u06a4\u06a5\u0003",
    "\u0002\u0002\u0002\u06a5\u06ac\u0003\u0002\u0002\u0002\u06a6\u06a8\u0005",
    "2\u001a\u0002\u06a7\u06a9\u0007\u00de\u0002\u0002\u06a8\u06a7\u0003",
    "\u0002\u0002\u0002\u06a9\u06aa\u0003\u0002\u0002\u0002\u06aa\u06a8\u0003",
    "\u0002\u0002\u0002\u06aa\u06ab\u0003\u0002\u0002\u0002\u06ab\u06ad\u0003",
    "\u0002\u0002\u0002\u06ac\u06a6\u0003\u0002\u0002\u0002\u06ac\u06ad\u0003",
    "\u0002\u0002\u0002\u06ad\u06ae\u0003\u0002\u0002\u0002\u06ae\u06af\u0007",
    "3\u0002\u0002\u06af\u00a5\u0003\u0002\u0002\u0002\u06b0\u06b1\u0007",
    "\u0084\u0002\u0002\u06b1\u06b2\u0007\u00e0\u0002\u0002\u06b2\u06b4\u0005",
    "\u00dep\u0002\u06b3\u06b5\u0007\u00e0\u0002\u0002\u06b4\u06b3\u0003",
    "\u0002\u0002\u0002\u06b4\u06b5\u0003\u0002\u0002\u0002\u06b5\u06b6\u0003",
    "\u0002\u0002\u0002\u06b6\u06b8\u0007\u00b8\u0002\u0002\u06b7\u06b9\u0007",
    "\u00e0\u0002\u0002\u06b8\u06b7\u0003\u0002\u0002\u0002\u06b8\u06b9\u0003",
    "\u0002\u0002\u0002\u06b9\u06bb\u0003\u0002\u0002\u0002\u06ba\u06bc\u0005",
    "\u00dep\u0002\u06bb\u06ba\u0003\u0002\u0002\u0002\u06bb\u06bc\u0003",
    "\u0002\u0002\u0002\u06bc\u06be\u0003\u0002\u0002\u0002\u06bd\u06bf\u0007",
    "\u00e0\u0002\u0002\u06be\u06bd\u0003\u0002\u0002\u0002\u06be\u06bf\u0003",
    "\u0002\u0002\u0002\u06bf\u06c0\u0003\u0002\u0002\u0002\u06c0\u06c2\u0007",
    "\u00b8\u0002\u0002\u06c1\u06c3\u0007\u00e0\u0002\u0002\u06c2\u06c1\u0003",
    "\u0002\u0002\u0002\u06c2\u06c3\u0003\u0002\u0002\u0002\u06c3\u06c4\u0003",
    "\u0002\u0002\u0002\u06c4\u06c5\u0005\u00dep\u0002\u06c5\u00a7\u0003",
    "\u0002\u0002\u0002\u06c6\u06c7\u0007\u0087\u0002\u0002\u06c7\u06c8\u0007",
    "\u00e0\u0002\u0002\u06c8\u06d7\u0005\u0118\u008d\u0002\u06c9\u06cb\u0007",
    "\u00e0\u0002\u0002\u06ca\u06c9\u0003\u0002\u0002\u0002\u06ca\u06cb\u0003",
    "\u0002\u0002\u0002\u06cb\u06cc\u0003\u0002\u0002\u0002\u06cc\u06ce\u0007",
    "\u00c4\u0002\u0002\u06cd\u06cf\u0007\u00e0\u0002\u0002\u06ce\u06cd\u0003",
    "\u0002\u0002\u0002\u06ce\u06cf\u0003\u0002\u0002\u0002\u06cf\u06d4\u0003",
    "\u0002\u0002\u0002\u06d0\u06d2\u0005\u0108\u0085\u0002\u06d1\u06d3\u0007",
    "\u00e0\u0002\u0002\u06d2\u06d1\u0003\u0002\u0002\u0002\u06d2\u06d3\u0003",
    "\u0002\u0002\u0002\u06d3\u06d5\u0003\u0002\u0002\u0002\u06d4\u06d0\u0003",
    "\u0002\u0002\u0002\u06d4\u06d5\u0003\u0002\u0002\u0002\u06d5\u06d6\u0003",
    "\u0002\u0002\u0002\u06d6\u06d8\u0007\u00cf\u0002\u0002\u06d7\u06ca\u0003",
    "\u0002\u0002\u0002\u06d7\u06d8\u0003\u0002\u0002\u0002\u06d8\u00a9\u0003",
    "\u0002\u0002\u0002\u06d9\u06dc\u0007\u0086\u0002\u0002\u06da\u06db\u0007",
    "\u00e0\u0002\u0002\u06db\u06dd\u0005\u00dep\u0002\u06dc\u06da\u0003",
    "\u0002\u0002\u0002\u06dc\u06dd\u0003\u0002\u0002\u0002\u06dd\u00ab\u0003",
    "\u0002\u0002\u0002\u06de\u06df\u0007\u008a\u0002\u0002\u06df\u06e2\u0007",
    "\u00e0\u0002\u0002\u06e0\u06e1\u0007}\u0002\u0002\u06e1\u06e3\u0007",
    "\u00e0\u0002\u0002\u06e2\u06e0\u0003\u0002\u0002\u0002\u06e2\u06e3\u0003",
    "\u0002\u0002\u0002\u06e3\u06e4\u0003\u0002\u0002\u0002\u06e4\u06ef\u0005",
    "\u00aeX\u0002\u06e5\u06e7\u0007\u00e0\u0002\u0002\u06e6\u06e5\u0003",
    "\u0002\u0002\u0002\u06e6\u06e7\u0003\u0002\u0002\u0002\u06e7\u06e8\u0003",
    "\u0002\u0002\u0002\u06e8\u06ea\u0007\u00b8\u0002\u0002\u06e9\u06eb\u0007",
    "\u00e0\u0002\u0002\u06ea\u06e9\u0003\u0002\u0002\u0002\u06ea\u06eb\u0003",
    "\u0002\u0002\u0002\u06eb\u06ec\u0003\u0002\u0002\u0002\u06ec\u06ee\u0005",
    "\u00aeX\u0002\u06ed\u06e6\u0003\u0002\u0002\u0002\u06ee\u06f1\u0003",
    "\u0002\u0002\u0002\u06ef\u06ed\u0003\u0002\u0002\u0002\u06ef\u06f0\u0003",
    "\u0002\u0002\u0002\u06f0\u00ad\u0003\u0002\u0002\u0002\u06f1\u06ef\u0003",
    "\u0002\u0002\u0002\u06f2\u06f4\u0005\u00fa~\u0002\u06f3\u06f5\u0007",
    "\u00e0\u0002\u0002\u06f4\u06f3\u0003\u0002\u0002\u0002\u06f4\u06f5\u0003",
    "\u0002\u0002\u0002\u06f5\u06f6\u0003\u0002\u0002\u0002\u06f6\u06f8\u0007",
    "\u00c4\u0002\u0002\u06f7\u06f9\u0007\u00e0\u0002\u0002\u06f8\u06f7\u0003",
    "\u0002\u0002\u0002\u06f8\u06f9\u0003\u0002\u0002\u0002\u06f9\u06fa\u0003",
    "\u0002\u0002\u0002\u06fa\u06fc\u0005\u0114\u008b\u0002\u06fb\u06fd\u0007",
    "\u00e0\u0002\u0002\u06fc\u06fb\u0003\u0002\u0002\u0002\u06fc\u06fd\u0003",
    "\u0002\u0002\u0002\u06fd\u06fe\u0003\u0002\u0002\u0002\u06fe\u0701\u0007",
    "\u00cf\u0002\u0002\u06ff\u0700\u0007\u00e0\u0002\u0002\u0700\u0702\u0005",
    "\u011a\u008e\u0002\u0701\u06ff\u0003\u0002\u0002\u0002\u0701\u0702\u0003",
    "\u0002\u0002\u0002\u0702\u00af\u0003\u0002\u0002\u0002\u0703\u0704\u0007",
    "\u008c\u0002\u0002\u0704\u00b1\u0003\u0002\u0002\u0002\u0705\u070b\u0007",
    "\u008d\u0002\u0002\u0706\u0709\u0007\u00e0\u0002\u0002\u0707\u070a\u0007",
    "k\u0002\u0002\u0708\u070a\u0005\u0118\u008d\u0002\u0709\u0707\u0003",
    "\u0002\u0002\u0002\u0709\u0708\u0003\u0002\u0002\u0002\u070a\u070c\u0003",
    "\u0002\u0002\u0002\u070b\u0706\u0003\u0002\u0002\u0002\u070b\u070c\u0003",
    "\u0002\u0002\u0002\u070c\u00b3\u0003\u0002\u0002\u0002\u070d\u070e\u0007",
    "\u008e\u0002\u0002\u070e\u00b5\u0003\u0002\u0002\u0002\u070f\u0710\u0007",
    "\u008f\u0002\u0002\u0710\u0711\u0007\u00e0\u0002\u0002\u0711\u0712\u0005",
    "\u00dep\u0002\u0712\u00b7\u0003\u0002\u0002\u0002\u0713\u0714\u0007",
    "\u0090\u0002\u0002\u0714\u0715\u0007\u00e0\u0002\u0002\u0715\u0717\u0005",
    "\u00fa~\u0002\u0716\u0718\u0007\u00e0\u0002\u0002\u0717\u0716\u0003",
    "\u0002\u0002\u0002\u0717\u0718\u0003\u0002\u0002\u0002\u0718\u0719\u0003",
    "\u0002\u0002\u0002\u0719\u071b\u0007\u00bd\u0002\u0002\u071a\u071c\u0007",
    "\u00e0\u0002\u0002\u071b\u071a\u0003\u0002\u0002\u0002\u071b\u071c\u0003",
    "\u0002\u0002\u0002\u071c\u071d\u0003\u0002\u0002\u0002\u071d\u071e\u0005",
    "\u00dep\u0002\u071e\u00b9\u0003\u0002\u0002\u0002\u071f\u0720\u0007",
    "\u0091\u0002\u0002\u0720\u0721\u0007\u00e0\u0002\u0002\u0721\u0723\u0005",
    "\u00dep\u0002\u0722\u0724\u0007\u00e0\u0002\u0002\u0723\u0722\u0003",
    "\u0002\u0002\u0002\u0723\u0724\u0003\u0002\u0002\u0002\u0724\u0725\u0003",
    "\u0002\u0002\u0002\u0725\u0727\u0007\u00b8\u0002\u0002\u0726\u0728\u0007",
    "\u00e0\u0002\u0002\u0727\u0726\u0003\u0002\u0002\u0002\u0727\u0728\u0003",
    "\u0002\u0002\u0002\u0728\u0729\u0003\u0002\u0002\u0002\u0729\u072a\u0005",
    "\u00dep\u0002\u072a\u00bb\u0003\u0002\u0002\u0002\u072b\u072c\u0007",
    "\u0092\u0002\u0002\u072c\u072d\u0007\u00e0\u0002\u0002\u072d\u072f\u0005",
    "\u00dep\u0002\u072e\u0730\u0007\u00e0\u0002\u0002\u072f\u072e\u0003",
    "\u0002\u0002\u0002\u072f\u0730\u0003\u0002\u0002\u0002\u0730\u0731\u0003",
    "\u0002\u0002\u0002\u0731\u0733\u0007\u00b8\u0002\u0002\u0732\u0734\u0007",
    "\u00e0\u0002\u0002\u0733\u0732\u0003\u0002\u0002\u0002\u0733\u0734\u0003",
    "\u0002\u0002\u0002\u0734\u0735\u0003\u0002\u0002\u0002\u0735\u0737\u0005",
    "\u00dep\u0002\u0736\u0738\u0007\u00e0\u0002\u0002\u0737\u0736\u0003",
    "\u0002\u0002\u0002\u0737\u0738\u0003\u0002\u0002\u0002\u0738\u0739\u0003",
    "\u0002\u0002\u0002\u0739\u073b\u0007\u00b8\u0002\u0002\u073a\u073c\u0007",
    "\u00e0\u0002\u0002\u073b\u073a\u0003\u0002\u0002\u0002\u073b\u073c\u0003",
    "\u0002\u0002\u0002\u073c\u073d\u0003\u0002\u0002\u0002\u073d\u073f\u0005",
    "\u00dep\u0002\u073e\u0740\u0007\u00e0\u0002\u0002\u073f\u073e\u0003",
    "\u0002\u0002\u0002\u073f\u0740\u0003\u0002\u0002\u0002\u0740\u0741\u0003",
    "\u0002\u0002\u0002\u0741\u0743\u0007\u00b8\u0002\u0002\u0742\u0744\u0007",
    "\u00e0\u0002\u0002\u0743\u0742\u0003\u0002\u0002\u0002\u0743\u0744\u0003",
    "\u0002\u0002\u0002\u0744\u0745\u0003\u0002\u0002\u0002\u0745\u0746\u0005",
    "\u00dep\u0002\u0746\u00bd\u0003\u0002\u0002\u0002\u0747\u0748\u0007",
    "\u0093\u0002\u0002\u0748\u0749\u0007\u00e0\u0002\u0002\u0749\u074b\u0005",
    "\u00dep\u0002\u074a\u074c\u0007\u00e0\u0002\u0002\u074b\u074a\u0003",
    "\u0002\u0002\u0002\u074b\u074c\u0003\u0002\u0002\u0002\u074c\u074d\u0003",
    "\u0002\u0002\u0002\u074d\u074f\u0007\u00b8\u0002\u0002\u074e\u0750\u0007",
    "\u00e0\u0002\u0002\u074f\u074e\u0003\u0002\u0002\u0002\u074f\u0750\u0003",
    "\u0002\u0002\u0002\u0750\u0751\u0003\u0002\u0002\u0002\u0751\u0752\u0005",
    "\u00dep\u0002\u0752\u00bf\u0003\u0002\u0002\u0002\u0753\u0754\u0007",
    "\u0094\u0002\u0002\u0754\u0755\u0007\u00e0\u0002\u0002\u0755\u0756\u0007",
    "\u0014\u0002\u0002\u0756\u0757\u0007\u00e0\u0002\u0002\u0757\u0759\u0005",
    "\u00dep\u0002\u0758\u075a\u0007\u00de\u0002\u0002\u0759\u0758\u0003",
    "\u0002\u0002\u0002\u075a\u075b\u0003\u0002\u0002\u0002\u075b\u0759\u0003",
    "\u0002\u0002\u0002\u075b\u075c\u0003\u0002\u0002\u0002\u075c\u0760\u0003",
    "\u0002\u0002\u0002\u075d\u075f\u0005\u00c2b\u0002\u075e\u075d\u0003",
    "\u0002\u0002\u0002\u075f\u0762\u0003\u0002\u0002\u0002\u0760\u075e\u0003",
    "\u0002\u0002\u0002\u0760\u0761\u0003\u0002\u0002\u0002\u0761\u0764\u0003",
    "\u0002\u0002\u0002\u0762\u0760\u0003\u0002\u0002\u0002\u0763\u0765\u0007",
    "\u00e0\u0002\u0002\u0764\u0763\u0003\u0002\u0002\u0002\u0764\u0765\u0003",
    "\u0002\u0002\u0002\u0765\u0766\u0003\u0002\u0002\u0002\u0766\u0767\u0007",
    "4\u0002\u0002\u0767\u00c1\u0003\u0002\u0002\u0002\u0768\u0769\u0007",
    "\u0014\u0002\u0002\u0769\u076a\u0007\u00e0\u0002\u0002\u076a\u076c\u0005",
    "\u00c4c\u0002\u076b\u076d\u0007\u00e0\u0002\u0002\u076c\u076b\u0003",
    "\u0002\u0002\u0002\u076c\u076d\u0003\u0002\u0002\u0002\u076d\u077c\u0003",
    "\u0002\u0002\u0002\u076e\u0770\u0007\u00b7\u0002\u0002\u076f\u076e\u0003",
    "\u0002\u0002\u0002\u076f\u0770\u0003\u0002\u0002\u0002\u0770\u0774\u0003",
    "\u0002\u0002\u0002\u0771\u0773\u0007\u00de\u0002\u0002\u0772\u0771\u0003",
    "\u0002\u0002\u0002\u0773\u0776\u0003\u0002\u0002\u0002\u0774\u0772\u0003",
    "\u0002\u0002\u0002\u0774\u0775\u0003\u0002\u0002\u0002\u0775\u077d\u0003",
    "\u0002\u0002\u0002\u0776\u0774\u0003\u0002\u0002\u0002\u0777\u0779\u0007",
    "\u00de\u0002\u0002\u0778\u0777\u0003\u0002\u0002\u0002\u0779\u077a\u0003",
    "\u0002\u0002\u0002\u077a\u0778\u0003\u0002\u0002\u0002\u077a\u077b\u0003",
    "\u0002\u0002\u0002\u077b\u077d\u0003\u0002\u0002\u0002\u077c\u076f\u0003",
    "\u0002\u0002\u0002\u077c\u0778\u0003\u0002\u0002\u0002\u077d\u0784\u0003",
    "\u0002\u0002\u0002\u077e\u0780\u00052\u001a\u0002\u077f\u0781\u0007",
    "\u00de\u0002\u0002\u0780\u077f\u0003\u0002\u0002\u0002\u0781\u0782\u0003",
    "\u0002\u0002\u0002\u0782\u0780\u0003\u0002\u0002\u0002\u0782\u0783\u0003",
    "\u0002\u0002\u0002\u0783\u0785\u0003\u0002\u0002\u0002\u0784\u077e\u0003",
    "\u0002\u0002\u0002\u0784\u0785\u0003\u0002\u0002\u0002\u0785\u00c3\u0003",
    "\u0002\u0002\u0002\u0786\u0796\u0007.\u0002\u0002\u0787\u0792\u0005",
    "\u00c6d\u0002\u0788\u078a\u0007\u00e0\u0002\u0002\u0789\u0788\u0003",
    "\u0002\u0002\u0002\u0789\u078a\u0003\u0002\u0002\u0002\u078a\u078b\u0003",
    "\u0002\u0002\u0002\u078b\u078d\u0007\u00b8\u0002\u0002\u078c\u078e\u0007",
    "\u00e0\u0002\u0002\u078d\u078c\u0003\u0002\u0002\u0002\u078d\u078e\u0003",
    "\u0002\u0002\u0002\u078e\u078f\u0003\u0002\u0002\u0002\u078f\u0791\u0005",
    "\u00c6d\u0002\u0790\u0789\u0003\u0002\u0002\u0002\u0791\u0794\u0003",
    "\u0002\u0002\u0002\u0792\u0790\u0003\u0002\u0002\u0002\u0792\u0793\u0003",
    "\u0002\u0002\u0002\u0793\u0796\u0003\u0002\u0002\u0002\u0794\u0792\u0003",
    "\u0002\u0002\u0002\u0795\u0786\u0003\u0002\u0002\u0002\u0795\u0787\u0003",
    "\u0002\u0002\u0002\u0796\u00c5\u0003\u0002\u0002\u0002\u0797\u0799\u0007",
    "R\u0002\u0002\u0798\u079a\u0007\u00e0\u0002\u0002\u0799\u0798\u0003",
    "\u0002\u0002\u0002\u0799\u079a\u0003\u0002\u0002\u0002\u079a\u079b\u0003",
    "\u0002\u0002\u0002\u079b\u079d\u0005\u0120\u0091\u0002\u079c\u079e\u0007",
    "\u00e0\u0002\u0002\u079d\u079c\u0003\u0002\u0002\u0002\u079d\u079e\u0003",
    "\u0002\u0002\u0002\u079e\u079f\u0003\u0002\u0002\u0002\u079f\u07a0\u0005",
    "\u00dep\u0002\u07a0\u07a9\u0003\u0002\u0002\u0002\u07a1\u07a9\u0005",
    "\u00dep\u0002\u07a2\u07a3\u0005\u00dep\u0002\u07a3\u07a4\u0007\u00e0",
    "\u0002\u0002\u07a4\u07a5\u0007\u00a4\u0002\u0002\u07a5\u07a6\u0007\u00e0",
    "\u0002\u0002\u07a6\u07a7\u0005\u00dep\u0002\u07a7\u07a9\u0003\u0002",
    "\u0002\u0002\u07a8\u0797\u0003\u0002\u0002\u0002\u07a8\u07a1\u0003\u0002",
    "\u0002\u0002\u07a8\u07a2\u0003\u0002\u0002\u0002\u07a9\u00c7\u0003\u0002",
    "\u0002\u0002\u07aa\u07ab\u0007\u0095\u0002\u0002\u07ab\u07ac\u0007\u00e0",
    "\u0002\u0002\u07ac\u07b5\u0005\u00dep\u0002\u07ad\u07af\u0007\u00e0",
    "\u0002\u0002\u07ae\u07ad\u0003\u0002\u0002\u0002\u07ae\u07af\u0003\u0002",
    "\u0002\u0002\u07af\u07b0\u0003\u0002\u0002\u0002\u07b0\u07b2\u0007\u00b8",
    "\u0002\u0002\u07b1\u07b3\u0007\u00e0\u0002\u0002\u07b2\u07b1\u0003\u0002",
    "\u0002\u0002\u07b2\u07b3\u0003\u0002\u0002\u0002\u07b3\u07b4\u0003\u0002",
    "\u0002\u0002\u07b4\u07b6\u0005\u00dep\u0002\u07b5\u07ae\u0003\u0002",
    "\u0002\u0002\u07b5\u07b6\u0003\u0002\u0002\u0002\u07b6\u00c9\u0003\u0002",
    "\u0002\u0002\u07b7\u07b8\u0007\u0097\u0002\u0002\u07b8\u07b9\u0007\u00e0",
    "\u0002\u0002\u07b9\u07bb\u0005\u00dep\u0002\u07ba\u07bc\u0007\u00e0",
    "\u0002\u0002\u07bb\u07ba\u0003\u0002\u0002\u0002\u07bb\u07bc\u0003\u0002",
    "\u0002\u0002\u07bc\u07bd\u0003\u0002\u0002\u0002\u07bd\u07bf\u0007\u00b8",
    "\u0002\u0002\u07be\u07c0\u0007\u00e0\u0002\u0002\u07bf\u07be\u0003\u0002",
    "\u0002\u0002\u07bf\u07c0\u0003\u0002\u0002\u0002\u07c0\u07c1\u0003\u0002",
    "\u0002\u0002\u07c1\u07c2\u0005\u00dep\u0002\u07c2\u00cb\u0003\u0002",
    "\u0002\u0002\u07c3\u07c4\u0007\u0096\u0002\u0002\u07c4\u07c5\u0007\u00e0",
    "\u0002\u0002\u07c5\u07c7\u0005\u00fa~\u0002\u07c6\u07c8\u0007\u00e0",
    "\u0002\u0002\u07c7\u07c6\u0003\u0002\u0002\u0002\u07c7\u07c8\u0003\u0002",
    "\u0002\u0002\u07c8\u07c9\u0003\u0002\u0002\u0002\u07c9\u07cb\u0007\u00bd",
    "\u0002\u0002\u07ca\u07cc\u0007\u00e0\u0002\u0002\u07cb\u07ca\u0003\u0002",
    "\u0002\u0002\u07cb\u07cc\u0003\u0002\u0002\u0002\u07cc\u07cd\u0003\u0002",
    "\u0002\u0002\u07cd\u07ce\u0005\u00dep\u0002\u07ce\u00cd\u0003\u0002",
    "\u0002\u0002\u07cf\u07d0\u0007\u009d\u0002\u0002\u07d0\u00cf\u0003\u0002",
    "\u0002\u0002\u07d1\u07d2\u0005\u0134\u009b\u0002\u07d2\u07d3\u0007\u00e0",
    "\u0002\u0002\u07d3\u07d5\u0003\u0002\u0002\u0002\u07d4\u07d1\u0003\u0002",
    "\u0002\u0002\u07d4\u07d5\u0003\u0002\u0002\u0002\u07d5\u07d8\u0003\u0002",
    "\u0002\u0002\u07d6\u07d7\u0007\u009b\u0002\u0002\u07d7\u07d9\u0007\u00e0",
    "\u0002\u0002\u07d8\u07d6\u0003\u0002\u0002\u0002\u07d8\u07d9\u0003\u0002",
    "\u0002\u0002\u07d9\u07da\u0003\u0002\u0002\u0002\u07da\u07db\u0007\u009f",
    "\u0002\u0002\u07db\u07dc\u0007\u00e0\u0002\u0002\u07dc\u07e1\u0005\u0118",
    "\u008d\u0002\u07dd\u07df\u0007\u00e0\u0002\u0002\u07de\u07dd\u0003\u0002",
    "\u0002\u0002\u07de\u07df\u0003\u0002\u0002\u0002\u07df\u07e0\u0003\u0002",
    "\u0002\u0002\u07e0\u07e2\u0005\u010e\u0088\u0002\u07e1\u07de\u0003\u0002",
    "\u0002\u0002\u07e1\u07e2\u0003\u0002\u0002\u0002\u07e2\u07e4\u0003\u0002",
    "\u0002\u0002\u07e3\u07e5\u0007\u00de\u0002\u0002\u07e4\u07e3\u0003\u0002",
    "\u0002\u0002\u07e5\u07e6\u0003\u0002\u0002\u0002\u07e6\u07e4\u0003\u0002",
    "\u0002\u0002\u07e6\u07e7\u0003\u0002\u0002\u0002\u07e7\u07ee\u0003\u0002",
    "\u0002\u0002\u07e8\u07ea\u00052\u001a\u0002\u07e9\u07eb\u0007\u00de",
    "\u0002\u0002\u07ea\u07e9\u0003\u0002\u0002\u0002\u07eb\u07ec\u0003\u0002",
    "\u0002\u0002\u07ec\u07ea\u0003\u0002\u0002\u0002\u07ec\u07ed\u0003\u0002",
    "\u0002\u0002\u07ed\u07ef\u0003\u0002\u0002\u0002\u07ee\u07e8\u0003\u0002",
    "\u0002\u0002\u07ee\u07ef\u0003\u0002\u0002\u0002\u07ef\u07f0\u0003\u0002",
    "\u0002\u0002\u07f0\u07f1\u00075\u0002\u0002\u07f1\u00d1\u0003\u0002",
    "\u0002\u0002\u07f2\u07f4\u0007\u00a3\u0002\u0002\u07f3\u07f5\u0007\u00e0",
    "\u0002\u0002\u07f4\u07f3\u0003\u0002\u0002\u0002\u07f4\u07f5\u0003\u0002",
    "\u0002\u0002\u07f5\u07f6\u0003\u0002\u0002\u0002\u07f6\u07f8\u0007\u00bd",
    "\u0002\u0002\u07f7\u07f9\u0007\u00e0\u0002\u0002\u07f8\u07f7\u0003\u0002",
    "\u0002\u0002\u07f8\u07f9\u0003\u0002\u0002\u0002\u07f9\u07fa\u0003\u0002",
    "\u0002\u0002\u07fa\u07fb\u0005\u00dep\u0002\u07fb\u00d3\u0003\u0002",
    "\u0002\u0002\u07fc\u07fd\u0005\u0134\u009b\u0002\u07fd\u07fe\u0007\u00e0",
    "\u0002\u0002\u07fe\u0800\u0003\u0002\u0002\u0002\u07ff\u07fc\u0003\u0002",
    "\u0002\u0002\u07ff\u0800\u0003\u0002\u0002\u0002\u0800\u0801\u0003\u0002",
    "\u0002\u0002\u0801\u0802\u0007\u00a6\u0002\u0002\u0802\u0803\u0007\u00e0",
    "\u0002\u0002\u0803\u0805\u0005\u0118\u008d\u0002\u0804\u0806\u0007\u00de",
    "\u0002\u0002\u0805\u0804\u0003\u0002\u0002\u0002\u0806\u0807\u0003\u0002",
    "\u0002\u0002\u0807\u0805\u0003\u0002\u0002\u0002\u0807\u0808\u0003\u0002",
    "\u0002\u0002\u0808\u080c\u0003\u0002\u0002\u0002\u0809\u080b\u0005\u00d6",
    "l\u0002\u080a\u0809\u0003\u0002\u0002\u0002\u080b\u080e\u0003\u0002",
    "\u0002\u0002\u080c\u080a\u0003\u0002\u0002\u0002\u080c\u080d\u0003\u0002",
    "\u0002\u0002\u080d\u080f\u0003\u0002\u0002\u0002\u080e\u080c\u0003\u0002",
    "\u0002\u0002\u080f\u0810\u00076\u0002\u0002\u0810\u00d5\u0003\u0002",
    "\u0002\u0002\u0811\u0820\u0005\u0118\u008d\u0002\u0812\u0814\u0007\u00e0",
    "\u0002\u0002\u0813\u0812\u0003\u0002\u0002\u0002\u0813\u0814\u0003\u0002",
    "\u0002\u0002\u0814\u0815\u0003\u0002\u0002\u0002\u0815\u081a\u0007\u00c4",
    "\u0002\u0002\u0816\u0818\u0007\u00e0\u0002\u0002\u0817\u0816\u0003\u0002",
    "\u0002\u0002\u0817\u0818\u0003\u0002\u0002\u0002\u0818\u0819\u0003\u0002",
    "\u0002\u0002\u0819\u081b\u0005\u0114\u008b\u0002\u081a\u0817\u0003\u0002",
    "\u0002\u0002\u081a\u081b\u0003\u0002\u0002\u0002\u081b\u081d\u0003\u0002",
    "\u0002\u0002\u081c\u081e\u0007\u00e0\u0002\u0002\u081d\u081c\u0003\u0002",
    "\u0002\u0002\u081d\u081e\u0003\u0002\u0002\u0002\u081e\u081f\u0003\u0002",
    "\u0002\u0002\u081f\u0821\u0007\u00cf\u0002\u0002\u0820\u0813\u0003\u0002",
    "\u0002\u0002\u0820\u0821\u0003\u0002\u0002\u0002\u0821\u0824\u0003\u0002",
    "\u0002\u0002\u0822\u0823\u0007\u00e0\u0002\u0002\u0823\u0825\u0005\u011a",
    "\u008e\u0002\u0824\u0822\u0003\u0002\u0002\u0002\u0824\u0825\u0003\u0002",
    "\u0002\u0002\u0825\u0827\u0003\u0002\u0002\u0002\u0826\u0828\u0007\u00de",
    "\u0002\u0002\u0827\u0826\u0003\u0002\u0002\u0002\u0828\u0829\u0003\u0002",
    "\u0002\u0002\u0829\u0827\u0003\u0002\u0002\u0002\u0829\u082a\u0003\u0002",
    "\u0002\u0002\u082a\u00d7\u0003\u0002\u0002\u0002\u082b\u082c\u0007\u00a7",
    "\u0002\u0002\u082c\u082d\u0007\u00e0\u0002\u0002\u082d\u0832\u0005\u00de",
    "p\u0002\u082e\u082f\u0007\u00e0\u0002\u0002\u082f\u0830\u0007R\u0002",
    "\u0002\u0830\u0831\u0007\u00e0\u0002\u0002\u0831\u0833\u0005\u0130\u0099",
    "\u0002\u0832\u082e\u0003\u0002\u0002\u0002\u0832\u0833\u0003\u0002\u0002",
    "\u0002\u0833\u00d9\u0003\u0002\u0002\u0002\u0834\u0835\u0007\u00a8\u0002",
    "\u0002\u0835\u0836\u0007\u00e0\u0002\u0002\u0836\u0837\u0005\u00dep",
    "\u0002\u0837\u00db\u0003\u0002\u0002\u0002\u0838\u0839\u0007\u00a9\u0002",
    "\u0002\u0839\u083a\u0007\u00e0\u0002\u0002\u083a\u0849\u0005\u00dep",
    "\u0002\u083b\u083d\u0007\u00e0\u0002\u0002\u083c\u083b\u0003\u0002\u0002",
    "\u0002\u083c\u083d\u0003\u0002\u0002\u0002\u083d\u083e\u0003\u0002\u0002",
    "\u0002\u083e\u0840\u0007\u00b8\u0002\u0002\u083f\u0841\u0007\u00e0\u0002",
    "\u0002\u0840\u083f\u0003\u0002\u0002\u0002\u0840\u0841\u0003\u0002\u0002",
    "\u0002\u0841\u0842\u0003\u0002\u0002\u0002\u0842\u0847\u0005\u00dep",
    "\u0002\u0843\u0844\u0007\u00e0\u0002\u0002\u0844\u0845\u0007\u00a4\u0002",
    "\u0002\u0845\u0846\u0007\u00e0\u0002\u0002\u0846\u0848\u0005\u00dep",
    "\u0002\u0847\u0843\u0003\u0002\u0002\u0002\u0847\u0848\u0003\u0002\u0002",
    "\u0002\u0848\u084a\u0003\u0002\u0002\u0002\u0849\u083c\u0003\u0002\u0002",
    "\u0002\u0849\u084a\u0003\u0002\u0002\u0002\u084a\u00dd\u0003\u0002\u0002",
    "\u0002\u084b\u084c\bp\u0001\u0002\u084c\u088c\u0005\u012a\u0096\u0002",
    "\u084d\u084f\u0007\u00c4\u0002\u0002\u084e\u0850\u0007\u00e0\u0002\u0002",
    "\u084f\u084e\u0003\u0002\u0002\u0002\u084f\u0850\u0003\u0002\u0002\u0002",
    "\u0850\u0851\u0003\u0002\u0002\u0002\u0851\u085c\u0005\u00dep\u0002",
    "\u0852\u0854\u0007\u00e0\u0002\u0002\u0853\u0852\u0003\u0002\u0002\u0002",
    "\u0853\u0854\u0003\u0002\u0002\u0002\u0854\u0855\u0003\u0002\u0002\u0002",
    "\u0855\u0857\u0007\u00b8\u0002\u0002\u0856\u0858\u0007\u00e0\u0002\u0002",
    "\u0857\u0856\u0003\u0002\u0002\u0002\u0857\u0858\u0003\u0002\u0002\u0002",
    "\u0858\u0859\u0003\u0002\u0002\u0002\u0859\u085b\u0005\u00dep\u0002",
    "\u085a\u0853\u0003\u0002\u0002\u0002\u085b\u085e\u0003\u0002\u0002\u0002",
    "\u085c\u085a\u0003\u0002\u0002\u0002\u085c\u085d\u0003\u0002\u0002\u0002",
    "\u085d\u0860\u0003\u0002\u0002\u0002\u085e\u085c\u0003\u0002\u0002\u0002",
    "\u085f\u0861\u0007\u00e0\u0002\u0002\u0860\u085f\u0003\u0002\u0002\u0002",
    "\u0860\u0861\u0003\u0002\u0002\u0002\u0861\u0862\u0003\u0002\u0002\u0002",
    "\u0862\u0863\u0007\u00cf\u0002\u0002\u0863\u088c\u0003\u0002\u0002\u0002",
    "\u0864\u0865\u0007l\u0002\u0002\u0865\u0866\u0007\u00e0\u0002\u0002",
    "\u0866\u088c\u0005\u00dep\u0016\u0867\u088c\u0005\u00d8m\u0002\u0868",
    "\u0869\u0007\u0004\u0002\u0002\u0869\u086a\u0007\u00e0\u0002\u0002\u086a",
    "\u088c\u0005\u00dep\u0014\u086b\u086d\u0005\u00fa~\u0002\u086c\u086e",
    "\u0007\u00e0\u0002\u0002\u086d\u086c\u0003\u0002\u0002\u0002\u086d\u086e",
    "\u0003\u0002\u0002\u0002\u086e\u086f\u0003\u0002\u0002\u0002\u086f\u0871",
    "\u0007\u00b5\u0002\u0002\u0870\u0872\u0007\u00e0\u0002\u0002\u0871\u0870",
    "\u0003\u0002\u0002\u0002\u0871\u0872\u0003\u0002\u0002\u0002\u0872\u0873",
    "\u0003\u0002\u0002\u0002\u0873\u0874\u0005\u00dep\u0013\u0874\u088c",
    "\u0003\u0002\u0002\u0002\u0875\u0877\t\r\u0002\u0002\u0876\u0878\u0007",
    "\u00e0\u0002\u0002\u0877\u0876\u0003\u0002\u0002\u0002\u0877\u0878\u0003",
    "\u0002\u0002\u0002\u0878\u0879\u0003\u0002\u0002\u0002\u0879\u088c\u0005",
    "\u00dep\u0011\u087a\u0887\u0007m\u0002\u0002\u087b\u087c\u0007\u00e0",
    "\u0002\u0002\u087c\u0888\u0005\u00dep\u0002\u087d\u087f\u0007\u00c4",
    "\u0002\u0002\u087e\u0880\u0007\u00e0\u0002\u0002\u087f\u087e\u0003\u0002",
    "\u0002\u0002\u087f\u0880\u0003\u0002\u0002\u0002\u0880\u0881\u0003\u0002",
    "\u0002\u0002\u0881\u0883\u0005\u00dep\u0002\u0882\u0884\u0007\u00e0",
    "\u0002\u0002\u0883\u0882\u0003\u0002\u0002\u0002\u0883\u0884\u0003\u0002",
    "\u0002\u0002\u0884\u0885\u0003\u0002\u0002\u0002\u0885\u0886\u0007\u00cf",
    "\u0002\u0002\u0886\u0888\u0003\u0002\u0002\u0002\u0887\u087b\u0003\u0002",
    "\u0002\u0002\u0887\u087d\u0003\u0002\u0002\u0002\u0888\u088c\u0003\u0002",
    "\u0002\u0002\u0889\u088c\u0005\u00fa~\u0002\u088a\u088c\u0005\u008c",
    "G\u0002\u088b\u084b\u0003\u0002\u0002\u0002\u088b\u084d\u0003\u0002",
    "\u0002\u0002\u088b\u0864\u0003\u0002\u0002\u0002\u088b\u0867\u0003\u0002",
    "\u0002\u0002\u088b\u0868\u0003\u0002\u0002\u0002\u088b\u086b\u0003\u0002",
    "\u0002\u0002\u088b\u0875\u0003\u0002\u0002\u0002\u088b\u087a\u0003\u0002",
    "\u0002\u0002\u088b\u0889\u0003\u0002\u0002\u0002\u088b\u088a\u0003\u0002",
    "\u0002\u0002\u088c\u08fb\u0003\u0002\u0002\u0002\u088d\u088f\f\u0012",
    "\u0002\u0002\u088e\u0890\u0007\u00e0\u0002\u0002\u088f\u088e\u0003\u0002",
    "\u0002\u0002\u088f\u0890\u0003\u0002\u0002\u0002\u0890\u0891\u0003\u0002",
    "\u0002\u0002\u0891\u0893\u0007\u00cd\u0002\u0002\u0892\u0894\u0007\u00e0",
    "\u0002\u0002\u0893\u0892\u0003\u0002\u0002\u0002\u0893\u0894\u0003\u0002",
    "\u0002\u0002\u0894\u0895\u0003\u0002\u0002\u0002\u0895\u08fa\u0005\u00de",
    "p\u0013\u0896\u0898\f\u0010\u0002\u0002\u0897\u0899\u0007\u00e0\u0002",
    "\u0002\u0898\u0897\u0003\u0002\u0002\u0002\u0898\u0899\u0003\u0002\u0002",
    "\u0002\u0899\u089a\u0003\u0002\u0002\u0002\u089a\u089c\t\u000e\u0002",
    "\u0002\u089b\u089d\u0007\u00e0\u0002\u0002\u089c\u089b\u0003\u0002\u0002",
    "\u0002\u089c\u089d\u0003\u0002\u0002\u0002\u089d\u089e\u0003\u0002\u0002",
    "\u0002\u089e\u08fa\u0005\u00dep\u0011\u089f\u08a1\f\u000f\u0002\u0002",
    "\u08a0\u08a2\u0007\u00e0\u0002\u0002\u08a1\u08a0\u0003\u0002\u0002\u0002",
    "\u08a1\u08a2\u0003\u0002\u0002\u0002\u08a2\u08a3\u0003\u0002\u0002\u0002",
    "\u08a3\u08a5\u0007\u00b9\u0002\u0002\u08a4\u08a6\u0007\u00e0\u0002\u0002",
    "\u08a5\u08a4\u0003\u0002\u0002\u0002\u08a5\u08a6\u0003\u0002\u0002\u0002",
    "\u08a6\u08a7\u0003\u0002\u0002\u0002\u08a7\u08fa\u0005\u00dep\u0010",
    "\u08a8\u08aa\f\u000e\u0002\u0002\u08a9\u08ab\u0007\u00e0\u0002\u0002",
    "\u08aa\u08a9\u0003\u0002\u0002\u0002\u08aa\u08ab\u0003\u0002\u0002\u0002",
    "\u08ab\u08ac\u0003\u0002\u0002\u0002\u08ac\u08ae\u0007i\u0002\u0002",
    "\u08ad\u08af\u0007\u00e0\u0002\u0002\u08ae\u08ad\u0003\u0002\u0002\u0002",
    "\u08ae\u08af\u0003\u0002\u0002\u0002\u08af\u08b0\u0003\u0002\u0002\u0002",
    "\u08b0\u08fa\u0005\u00dep\u000f\u08b1\u08b3\f\r\u0002\u0002\u08b2\u08b4",
    "\u0007\u00e0\u0002\u0002\u08b3\u08b2\u0003\u0002\u0002\u0002\u08b3\u08b4",
    "\u0003\u0002\u0002\u0002\u08b4\u08b5\u0003\u0002\u0002\u0002\u08b5\u08b7",
    "\t\r\u0002\u0002\u08b6\u08b8\u0007\u00e0\u0002\u0002\u08b7\u08b6\u0003",
    "\u0002\u0002\u0002\u08b7\u08b8\u0003\u0002\u0002\u0002\u08b8\u08b9\u0003",
    "\u0002\u0002\u0002\u08b9\u08fa\u0005\u00dep\u000e\u08ba\u08bc\f\f\u0002",
    "\u0002\u08bb\u08bd\u0007\u00e0\u0002\u0002\u08bc\u08bb\u0003\u0002\u0002",
    "\u0002\u08bc\u08bd\u0003\u0002\u0002\u0002\u08bd\u08be\u0003\u0002\u0002",
    "\u0002\u08be\u08c0\u0007\u00b4\u0002\u0002\u08bf\u08c1\u0007\u00e0\u0002",
    "\u0002\u08c0\u08bf\u0003\u0002\u0002\u0002\u08c0\u08c1\u0003\u0002\u0002",
    "\u0002\u08c1\u08c2\u0003\u0002\u0002\u0002\u08c2\u08fa\u0005\u00dep",
    "\r\u08c3\u08c5\f\u000b\u0002\u0002\u08c4\u08c6\u0007\u00e0\u0002\u0002",
    "\u08c5\u08c4\u0003\u0002\u0002\u0002\u08c5\u08c6\u0003\u0002\u0002\u0002",
    "\u08c6\u08c7\u0003\u0002\u0002\u0002\u08c7\u08c9\t\u000f\u0002\u0002",
    "\u08c8\u08ca\u0007\u00e0\u0002\u0002\u08c9\u08c8\u0003\u0002\u0002\u0002",
    "\u08c9\u08ca\u0003\u0002\u0002\u0002\u08ca\u08cb\u0003\u0002\u0002\u0002",
    "\u08cb\u08fa\u0005\u00dep\f\u08cc\u08ce\f\t\u0002\u0002\u08cd\u08cf",
    "\u0007\u00e0\u0002\u0002\u08ce\u08cd\u0003\u0002\u0002\u0002\u08ce\u08cf",
    "\u0003\u0002\u0002\u0002\u08cf\u08d0\u0003\u0002\u0002\u0002\u08d0\u08d2",
    "\u0007\u0006\u0002\u0002\u08d1\u08d3\u0007\u00e0\u0002\u0002\u08d2\u08d1",
    "\u0003\u0002\u0002\u0002\u08d2\u08d3\u0003\u0002\u0002\u0002\u08d3\u08d4",
    "\u0003\u0002\u0002\u0002\u08d4\u08fa\u0005\u00dep\n\u08d5\u08d7\f\b",
    "\u0002\u0002\u08d6\u08d8\u0007\u00e0\u0002\u0002\u08d7\u08d6\u0003\u0002",
    "\u0002\u0002\u08d7\u08d8\u0003\u0002\u0002\u0002\u08d8\u08d9\u0003\u0002",
    "\u0002\u0002\u08d9\u08db\u0007z\u0002\u0002\u08da\u08dc\u0007\u00e0",
    "\u0002\u0002\u08db\u08da\u0003\u0002\u0002\u0002\u08db\u08dc\u0003\u0002",
    "\u0002\u0002\u08dc\u08dd\u0003\u0002\u0002\u0002\u08dd\u08fa\u0005\u00de",
    "p\t\u08de\u08e0\f\u0007\u0002\u0002\u08df\u08e1\u0007\u00e0\u0002\u0002",
    "\u08e0\u08df\u0003\u0002\u0002\u0002\u08e0\u08e1\u0003\u0002\u0002\u0002",
    "\u08e1\u08e2\u0003\u0002\u0002\u0002\u08e2\u08e4\u0007\u00b3\u0002\u0002",
    "\u08e3\u08e5\u0007\u00e0\u0002\u0002\u08e4\u08e3\u0003\u0002\u0002\u0002",
    "\u08e4\u08e5\u0003\u0002\u0002\u0002\u08e5\u08e6\u0003\u0002\u0002\u0002",
    "\u08e6\u08fa\u0005\u00dep\b\u08e7\u08e9\f\u0006\u0002\u0002\u08e8\u08ea",
    "\u0007\u00e0\u0002\u0002\u08e9\u08e8\u0003\u0002\u0002\u0002\u08e9\u08ea",
    "\u0003\u0002\u0002\u0002\u08ea\u08eb\u0003\u0002\u0002\u0002\u08eb\u08ed",
    "\u0007;\u0002\u0002\u08ec\u08ee\u0007\u00e0\u0002\u0002\u08ed\u08ec",
    "\u0003\u0002\u0002\u0002\u08ed\u08ee\u0003\u0002\u0002\u0002\u08ee\u08ef",
    "\u0003\u0002\u0002\u0002\u08ef\u08fa\u0005\u00dep\u0007\u08f0\u08f2",
    "\f\u0005\u0002\u0002\u08f1\u08f3\u0007\u00e0\u0002\u0002\u08f2\u08f1",
    "\u0003\u0002\u0002\u0002\u08f2\u08f3\u0003\u0002\u0002\u0002\u08f3\u08f4",
    "\u0003\u0002\u0002\u0002\u08f4\u08f6\u0007N\u0002\u0002\u08f5\u08f7",
    "\u0007\u00e0\u0002\u0002\u08f6\u08f5\u0003\u0002\u0002\u0002\u08f6\u08f7",
    "\u0003\u0002\u0002\u0002\u08f7\u08f8\u0003\u0002\u0002\u0002\u08f8\u08fa",
    "\u0005\u00dep\u0006\u08f9\u088d\u0003\u0002\u0002\u0002\u08f9\u0896",
    "\u0003\u0002\u0002\u0002\u08f9\u089f\u0003\u0002\u0002\u0002\u08f9\u08a8",
    "\u0003\u0002\u0002\u0002\u08f9\u08b1\u0003\u0002\u0002\u0002\u08f9\u08ba",
    "\u0003\u0002\u0002\u0002\u08f9\u08c3\u0003\u0002\u0002\u0002\u08f9\u08cc",
    "\u0003\u0002\u0002\u0002\u08f9\u08d5\u0003\u0002\u0002\u0002\u08f9\u08de",
    "\u0003\u0002\u0002\u0002\u08f9\u08e7\u0003\u0002\u0002\u0002\u08f9\u08f0",
    "\u0003\u0002\u0002\u0002\u08fa\u08fd\u0003\u0002\u0002\u0002\u08fb\u08f9",
    "\u0003\u0002\u0002\u0002\u08fb\u08fc\u0003\u0002\u0002\u0002\u08fc\u00df",
    "\u0003\u0002\u0002\u0002\u08fd\u08fb\u0003\u0002\u0002\u0002\u08fe\u0902",
    "\u0007*\u0002\u0002\u08ff\u0902\u0007\u009b\u0002\u0002\u0900\u0902",
    "\u0005\u0134\u009b\u0002\u0901\u08fe\u0003\u0002\u0002\u0002\u0901\u08ff",
    "\u0003\u0002\u0002\u0002\u0901\u0900\u0003\u0002\u0002\u0002\u0902\u0903",
    "\u0003\u0002\u0002\u0002\u0903\u0906\u0007\u00e0\u0002\u0002\u0904\u0905",
    "\u0007\u00b1\u0002\u0002\u0905\u0907\u0007\u00e0\u0002\u0002\u0906\u0904",
    "\u0003\u0002\u0002\u0002\u0906\u0907\u0003\u0002\u0002\u0002\u0907\u0908",
    "\u0003\u0002\u0002\u0002\u0908\u0909\u0005\u00e2r\u0002\u0909\u00e1",
    "\u0003\u0002\u0002\u0002\u090a\u0915\u0005\u00e4s\u0002\u090b\u090d",
    "\u0007\u00e0\u0002\u0002\u090c\u090b\u0003\u0002\u0002\u0002\u090c\u090d",
    "\u0003\u0002\u0002\u0002\u090d\u090e\u0003\u0002\u0002\u0002\u090e\u0910",
    "\u0007\u00b8\u0002\u0002\u090f\u0911\u0007\u00e0\u0002\u0002\u0910\u090f",
    "\u0003\u0002\u0002\u0002\u0910\u0911\u0003\u0002\u0002\u0002\u0911\u0912",
    "\u0003\u0002\u0002\u0002\u0912\u0914\u0005\u00e4s\u0002\u0913\u090c",
    "\u0003\u0002\u0002\u0002\u0914\u0917\u0003\u0002\u0002\u0002\u0915\u0913",
    "\u0003\u0002\u0002\u0002\u0915\u0916\u0003\u0002\u0002\u0002\u0916\u00e3",
    "\u0003\u0002\u0002\u0002\u0917\u0915\u0003\u0002\u0002\u0002\u0918\u091a",
    "\u0005\u0118\u008d\u0002\u0919\u091b\u0005\u0132\u009a\u0002\u091a\u0919",
    "\u0003\u0002\u0002\u0002\u091a\u091b\u0003\u0002\u0002\u0002\u091b\u092d",
    "\u0003\u0002\u0002\u0002\u091c\u091e\u0007\u00e0\u0002\u0002\u091d\u091c",
    "\u0003\u0002\u0002\u0002\u091d\u091e\u0003\u0002\u0002\u0002\u091e\u091f",
    "\u0003\u0002\u0002\u0002\u091f\u0921\u0007\u00c4\u0002\u0002\u0920\u0922",
    "\u0007\u00e0\u0002\u0002\u0921\u0920\u0003\u0002\u0002\u0002\u0921\u0922",
    "\u0003\u0002\u0002\u0002\u0922\u0927\u0003\u0002\u0002\u0002\u0923\u0925",
    "\u0005\u0114\u008b\u0002\u0924\u0926\u0007\u00e0\u0002\u0002\u0925\u0924",
    "\u0003\u0002\u0002\u0002\u0925\u0926\u0003\u0002\u0002\u0002\u0926\u0928",
    "\u0003\u0002\u0002\u0002\u0927\u0923\u0003\u0002\u0002\u0002\u0927\u0928",
    "\u0003\u0002\u0002\u0002\u0928\u0929\u0003\u0002\u0002\u0002\u0929\u092b",
    "\u0007\u00cf\u0002\u0002\u092a\u092c\u0007\u00e0\u0002\u0002\u092b\u092a",
    "\u0003\u0002\u0002\u0002\u092b\u092c\u0003\u0002\u0002\u0002\u092c\u092e",
    "\u0003\u0002\u0002\u0002\u092d\u091d\u0003\u0002\u0002\u0002\u092d\u092e",
    "\u0003\u0002\u0002\u0002\u092e\u0931\u0003\u0002\u0002\u0002\u092f\u0930",
    "\u0007\u00e0\u0002\u0002\u0930\u0932\u0005\u011a\u008e\u0002\u0931\u092f",
    "\u0003\u0002\u0002\u0002\u0931\u0932\u0003\u0002\u0002\u0002\u0932\u00e5",
    "\u0003\u0002\u0002\u0002\u0933\u0934\u0007\u00ae\u0002\u0002\u0934\u0935",
    "\u0007\u00e0\u0002\u0002\u0935\u0937\u0005\u00dep\u0002\u0936\u0938",
    "\u0007\u00de\u0002\u0002\u0937\u0936\u0003\u0002\u0002\u0002\u0938\u0939",
    "\u0003\u0002\u0002\u0002\u0939\u0937\u0003\u0002\u0002\u0002\u0939\u093a",
    "\u0003\u0002\u0002\u0002\u093a\u093e\u0003\u0002\u0002\u0002\u093b\u093d",
    "\u00052\u001a\u0002\u093c\u093b\u0003\u0002\u0002\u0002\u093d\u0940",
    "\u0003\u0002\u0002\u0002\u093e\u093c\u0003\u0002\u0002\u0002\u093e\u093f",
    "\u0003\u0002\u0002\u0002\u093f\u0944\u0003\u0002\u0002\u0002\u0940\u093e",
    "\u0003\u0002\u0002\u0002\u0941\u0943\u0007\u00de\u0002\u0002\u0942\u0941",
    "\u0003\u0002\u0002\u0002\u0943\u0946\u0003\u0002\u0002\u0002\u0944\u0942",
    "\u0003\u0002\u0002\u0002\u0944\u0945\u0003\u0002\u0002\u0002\u0945\u0947",
    "\u0003\u0002\u0002\u0002\u0946\u0944\u0003\u0002\u0002\u0002\u0947\u0948",
    "\u0007\u00ad\u0002\u0002\u0948\u00e7\u0003\u0002\u0002\u0002\u0949\u094a",
    "\u0007\u00af\u0002\u0002\u094a\u094b\u0007\u00e0\u0002\u0002\u094b\u094d",
    "\u0005\u00dep\u0002\u094c\u094e\u0007\u00e0\u0002\u0002\u094d\u094c",
    "\u0003\u0002\u0002\u0002\u094d\u094e\u0003\u0002\u0002\u0002\u094e\u094f",
    "\u0003\u0002\u0002\u0002\u094f\u0951\u0007\u00b8\u0002\u0002\u0950\u0952",
    "\u0007\u00e0\u0002\u0002\u0951\u0950\u0003\u0002\u0002\u0002\u0951\u0952",
    "\u0003\u0002\u0002\u0002\u0952\u0953\u0003\u0002\u0002\u0002\u0953\u0954",
    "\u0005\u00dep\u0002\u0954\u00e9\u0003\u0002\u0002\u0002\u0955\u0956",
    "\u0007\u00b0\u0002\u0002\u0956\u0959\u0007\u00e0\u0002\u0002\u0957\u0958",
    "\u0007l\u0002\u0002\u0958\u095a\u0007\u00e0\u0002\u0002\u0959\u0957",
    "\u0003\u0002\u0002\u0002\u0959\u095a\u0003\u0002\u0002\u0002\u095a\u095b",
    "\u0003\u0002\u0002\u0002\u095b\u095d\u0005\u00fa~\u0002\u095c\u095e",
    "\u0007\u00de\u0002\u0002\u095d\u095c\u0003\u0002\u0002\u0002\u095e\u095f",
    "\u0003\u0002\u0002\u0002\u095f\u095d\u0003\u0002\u0002\u0002\u095f\u0960",
    "\u0003\u0002\u0002\u0002\u0960\u0967\u0003\u0002\u0002\u0002\u0961\u0963",
    "\u00052\u001a\u0002\u0962\u0964\u0007\u00de\u0002\u0002\u0963\u0962",
    "\u0003\u0002\u0002\u0002\u0964\u0965\u0003\u0002\u0002\u0002\u0965\u0963",
    "\u0003\u0002\u0002\u0002\u0965\u0966\u0003\u0002\u0002\u0002\u0966\u0968",
    "\u0003\u0002\u0002\u0002\u0967\u0961\u0003\u0002\u0002\u0002\u0967\u0968",
    "\u0003\u0002\u0002\u0002\u0968\u0969\u0003\u0002\u0002\u0002\u0969\u096a",
    "\u00077\u0002\u0002\u096a\u00eb\u0003\u0002\u0002\u0002\u096b\u096c",
    "\u0007\u00b2\u0002\u0002\u096c\u096d\u0007\u00e0\u0002\u0002\u096d\u096f",
    "\u0005\u00dep\u0002\u096e\u0970\u0007\u00e0\u0002\u0002\u096f\u096e",
    "\u0003\u0002\u0002\u0002\u096f\u0970\u0003\u0002\u0002\u0002\u0970\u0971",
    "\u0003\u0002\u0002\u0002\u0971\u0976\u0007\u00b8\u0002\u0002\u0972\u0974",
    "\u0007\u00e0\u0002\u0002\u0973\u0972\u0003\u0002\u0002\u0002\u0973\u0974",
    "\u0003\u0002\u0002\u0002\u0974\u0975\u0003\u0002\u0002\u0002\u0975\u0977",
    "\u0005\u009aN\u0002\u0976\u0973\u0003\u0002\u0002\u0002\u0976\u0977",
    "\u0003\u0002\u0002\u0002\u0977\u00ed\u0003\u0002\u0002\u0002\u0978\u097b",
    "\u0005\u00f0y\u0002\u0979\u097b\u0005\u00f2z\u0002\u097a\u0978\u0003",
    "\u0002\u0002\u0002\u097a\u0979\u0003\u0002\u0002\u0002\u097b\u00ef\u0003",
    "\u0002\u0002\u0002\u097c\u097d\u0007\u0013\u0002\u0002\u097d\u097e\u0007",
    "\u00e0\u0002\u0002\u097e\u0980\u0005\u0118\u008d\u0002\u097f\u0981\u0005",
    "\u0132\u009a\u0002\u0980\u097f\u0003\u0002\u0002\u0002\u0980\u0981\u0003",
    "\u0002\u0002\u0002\u0981\u098f\u0003\u0002\u0002\u0002\u0982\u0984\u0007",
    "\u00e0\u0002\u0002\u0983\u0982\u0003\u0002\u0002\u0002\u0983\u0984\u0003",
    "\u0002\u0002\u0002\u0984\u0985\u0003\u0002\u0002\u0002\u0985\u0987\u0007",
    "\u00c4\u0002\u0002\u0986\u0988\u0007\u00e0\u0002\u0002\u0987\u0986\u0003",
    "\u0002\u0002\u0002\u0987\u0988\u0003\u0002\u0002\u0002\u0988\u0989\u0003",
    "\u0002\u0002\u0002\u0989\u098b\u0005\u0108\u0085\u0002\u098a\u098c\u0007",
    "\u00e0\u0002\u0002\u098b\u098a\u0003\u0002\u0002\u0002\u098b\u098c\u0003",
    "\u0002\u0002\u0002\u098c\u098d\u0003\u0002\u0002\u0002\u098d\u098e\u0007",
    "\u00cf\u0002\u0002\u098e\u0990\u0003\u0002\u0002\u0002\u098f\u0983\u0003",
    "\u0002\u0002\u0002\u098f\u0990\u0003\u0002\u0002\u0002\u0990\u00f1\u0003",
    "\u0002\u0002\u0002\u0991\u0992\u0007\u0013\u0002\u0002\u0992\u0994\u0007",
    "\u00e0\u0002\u0002\u0993\u0995\u0005\u00fa~\u0002\u0994\u0993\u0003",
    "\u0002\u0002\u0002\u0994\u0995\u0003\u0002\u0002\u0002\u0995\u0996\u0003",
    "\u0002\u0002\u0002\u0996\u0998\u0007\u00bc\u0002\u0002\u0997\u0999\u0007",
    "\u00e0\u0002\u0002\u0998\u0997\u0003\u0002\u0002\u0002\u0998\u0999\u0003",
    "\u0002\u0002\u0002\u0999\u099a\u0003\u0002\u0002\u0002\u099a\u099c\u0005",
    "\u0118\u008d\u0002\u099b\u099d\u0005\u0132\u009a\u0002\u099c\u099b\u0003",
    "\u0002\u0002\u0002\u099c\u099d\u0003\u0002\u0002\u0002\u099d\u09ab\u0003",
    "\u0002\u0002\u0002\u099e\u09a0\u0007\u00e0\u0002\u0002\u099f\u099e\u0003",
    "\u0002\u0002\u0002\u099f\u09a0\u0003\u0002\u0002\u0002\u09a0\u09a1\u0003",
    "\u0002\u0002\u0002\u09a1\u09a3\u0007\u00c4\u0002\u0002\u09a2\u09a4\u0007",
    "\u00e0\u0002\u0002\u09a3\u09a2\u0003\u0002\u0002\u0002\u09a3\u09a4\u0003",
    "\u0002\u0002\u0002\u09a4\u09a5\u0003\u0002\u0002\u0002\u09a5\u09a7\u0005",
    "\u0108\u0085\u0002\u09a6\u09a8\u0007\u00e0\u0002\u0002\u09a7\u09a6\u0003",
    "\u0002\u0002\u0002\u09a7\u09a8\u0003\u0002\u0002\u0002\u09a8\u09a9\u0003",
    "\u0002\u0002\u0002\u09a9\u09aa\u0007\u00cf\u0002\u0002\u09aa\u09ac\u0003",
    "\u0002\u0002\u0002\u09ab\u099f\u0003\u0002\u0002\u0002\u09ab\u09ac\u0003",
    "\u0002\u0002\u0002\u09ac\u00f3\u0003\u0002\u0002\u0002\u09ad\u09b0\u0005",
    "\u00f6|\u0002\u09ae\u09b0\u0005\u00f8}\u0002\u09af\u09ad\u0003\u0002",
    "\u0002\u0002\u09af\u09ae\u0003\u0002\u0002\u0002\u09b0\u00f5\u0003\u0002",
    "\u0002\u0002\u09b1\u09b4\u0005\u011e\u0090\u0002\u09b2\u09b3\u0007\u00e0",
    "\u0002\u0002\u09b3\u09b5\u0005\u0108\u0085\u0002\u09b4\u09b2\u0003\u0002",
    "\u0002\u0002\u09b4\u09b5\u0003\u0002\u0002\u0002\u09b5\u00f7\u0003\u0002",
    "\u0002\u0002\u09b6\u09b8\u0005\u00fa~\u0002\u09b7\u09b6\u0003\u0002",
    "\u0002\u0002\u09b7\u09b8\u0003\u0002\u0002\u0002\u09b8\u09b9\u0003\u0002",
    "\u0002\u0002\u09b9\u09ba\u0007\u00bc\u0002\u0002\u09ba\u09bc\u0005\u0118",
    "\u008d\u0002\u09bb\u09bd\u0005\u0132\u009a\u0002\u09bc\u09bb\u0003\u0002",
    "\u0002\u0002\u09bc\u09bd\u0003\u0002\u0002\u0002\u09bd\u09c0\u0003\u0002",
    "\u0002\u0002\u09be\u09bf\u0007\u00e0\u0002\u0002\u09bf\u09c1\u0005\u0108",
    "\u0085\u0002\u09c0\u09be\u0003\u0002\u0002\u0002\u09c0\u09c1\u0003\u0002",
    "\u0002\u0002\u09c1\u09c3\u0003\u0002\u0002\u0002\u09c2\u09c4\u0005\u010c",
    "\u0087\u0002\u09c3\u09c2\u0003\u0002\u0002\u0002\u09c3\u09c4\u0003\u0002",
    "\u0002\u0002\u09c4\u00f9\u0003\u0002\u0002\u0002\u09c5\u09ca\u0005\u0102",
    "\u0082\u0002\u09c6\u09ca\u0005\u00fc\u007f\u0002\u09c7\u09ca\u0005\u00fe",
    "\u0080\u0002\u09c8\u09ca\u0005\u0106\u0084\u0002\u09c9\u09c5\u0003\u0002",
    "\u0002\u0002\u09c9\u09c6\u0003\u0002\u0002\u0002\u09c9\u09c7\u0003\u0002",
    "\u0002\u0002\u09c9\u09c8\u0003\u0002\u0002\u0002\u09ca\u00fb\u0003\u0002",
    "\u0002\u0002\u09cb\u09cd\u0005\u0118\u008d\u0002\u09cc\u09ce\u0005\u0132",
    "\u009a\u0002\u09cd\u09cc\u0003\u0002\u0002\u0002\u09cd\u09ce\u0003\u0002",
    "\u0002\u0002\u09ce\u09d0\u0003\u0002\u0002\u0002\u09cf\u09d1\u0005\u010c",
    "\u0087\u0002\u09d0\u09cf\u0003\u0002\u0002\u0002\u09d0\u09d1\u0003\u0002",
    "\u0002\u0002\u09d1\u00fd\u0003\u0002\u0002\u0002\u09d2\u09d6\u0005\u0118",
    "\u008d\u0002\u09d3\u09d6\u0005\u011c\u008f\u0002\u09d4\u09d6\u0005\u0100",
    "\u0081\u0002\u09d5\u09d2\u0003\u0002\u0002\u0002\u09d5\u09d3\u0003\u0002",
    "\u0002\u0002\u09d5\u09d4\u0003\u0002\u0002\u0002\u09d6\u09d8\u0003\u0002",
    "\u0002\u0002\u09d7\u09d9\u0005\u0132\u009a\u0002\u09d8\u09d7\u0003\u0002",
    "\u0002\u0002\u09d8\u09d9\u0003\u0002\u0002\u0002\u09d9\u09db\u0003\u0002",
    "\u0002\u0002\u09da\u09dc\u0007\u00e0\u0002\u0002\u09db\u09da\u0003\u0002",
    "\u0002\u0002\u09db\u09dc\u0003\u0002\u0002\u0002\u09dc\u09e8\u0003\u0002",
    "\u0002\u0002\u09dd\u09df\u0007\u00c4\u0002\u0002\u09de\u09e0\u0007\u00e0",
    "\u0002\u0002\u09df\u09de\u0003\u0002\u0002\u0002\u09df\u09e0\u0003\u0002",
    "\u0002\u0002\u09e0\u09e5\u0003\u0002\u0002\u0002\u09e1\u09e3\u0005\u0108",
    "\u0085\u0002\u09e2\u09e4\u0007\u00e0\u0002\u0002\u09e3\u09e2\u0003\u0002",
    "\u0002\u0002\u09e3\u09e4\u0003\u0002\u0002\u0002\u09e4\u09e6\u0003\u0002",
    "\u0002\u0002\u09e5\u09e1\u0003\u0002\u0002\u0002\u09e5\u09e6\u0003\u0002",
    "\u0002\u0002\u09e6\u09e7\u0003\u0002\u0002\u0002\u09e7\u09e9\u0007\u00cf",
    "\u0002\u0002\u09e8\u09dd\u0003\u0002\u0002\u0002\u09e9\u09ea\u0003\u0002",
    "\u0002\u0002\u09ea\u09e8\u0003\u0002\u0002\u0002\u09ea\u09eb\u0003\u0002",
    "\u0002\u0002\u09eb\u09ed\u0003\u0002\u0002\u0002\u09ec\u09ee\u0005\u010c",
    "\u0087\u0002\u09ed\u09ec\u0003\u0002\u0002\u0002\u09ed\u09ee\u0003\u0002",
    "\u0002\u0002\u09ee\u00ff\u0003\u0002\u0002\u0002\u09ef\u09f1\u0005\u0118",
    "\u008d\u0002\u09f0\u09f2\u0005\u0132\u009a\u0002\u09f1\u09f0\u0003\u0002",
    "\u0002\u0002\u09f1\u09f2\u0003\u0002\u0002\u0002\u09f2\u09f4\u0003\u0002",
    "\u0002\u0002\u09f3\u09f5\u0007\u00e0\u0002\u0002\u09f4\u09f3\u0003\u0002",
    "\u0002\u0002\u09f4\u09f5\u0003\u0002\u0002\u0002\u09f5\u09f6\u0003\u0002",
    "\u0002\u0002\u09f6\u09f8\u0007\u00c4\u0002\u0002\u09f7\u09f9\u0007\u00e0",
    "\u0002\u0002\u09f8\u09f7\u0003\u0002\u0002\u0002\u09f8\u09f9\u0003\u0002",
    "\u0002\u0002\u09f9\u09fe\u0003\u0002\u0002\u0002\u09fa\u09fc\u0005\u0108",
    "\u0085\u0002\u09fb\u09fd\u0007\u00e0\u0002\u0002\u09fc\u09fb\u0003\u0002",
    "\u0002\u0002\u09fc\u09fd\u0003\u0002\u0002\u0002\u09fd\u09ff\u0003\u0002",
    "\u0002\u0002\u09fe\u09fa\u0003\u0002\u0002\u0002\u09fe\u09ff\u0003\u0002",
    "\u0002\u0002\u09ff\u0a00\u0003\u0002\u0002\u0002\u0a00\u0a01\u0007\u00cf",
    "\u0002\u0002\u0a01\u0101\u0003\u0002\u0002\u0002\u0a02\u0a05\u0005\u00fc",
    "\u007f\u0002\u0a03\u0a05\u0005\u00fe\u0080\u0002\u0a04\u0a02\u0003\u0002",
    "\u0002\u0002\u0a04\u0a03\u0003\u0002\u0002\u0002\u0a04\u0a05\u0003\u0002",
    "\u0002\u0002\u0a05\u0a07\u0003\u0002\u0002\u0002\u0a06\u0a08\u0005\u0104",
    "\u0083\u0002\u0a07\u0a06\u0003\u0002\u0002\u0002\u0a08\u0a09\u0003\u0002",
    "\u0002\u0002\u0a09\u0a07\u0003\u0002\u0002\u0002\u0a09\u0a0a\u0003\u0002",
    "\u0002\u0002\u0a0a\u0a0c\u0003\u0002\u0002\u0002\u0a0b\u0a0d\u0005\u010c",
    "\u0087\u0002\u0a0c\u0a0b\u0003\u0002\u0002\u0002\u0a0c\u0a0d\u0003\u0002",
    "\u0002\u0002\u0a0d\u0103\u0003\u0002\u0002\u0002\u0a0e\u0a10\u0007\u00e0",
    "\u0002\u0002\u0a0f\u0a0e\u0003\u0002\u0002\u0002\u0a0f\u0a10\u0003\u0002",
    "\u0002\u0002\u0a10\u0a11\u0003\u0002\u0002\u0002\u0a11\u0a14\u0007\u00bc",
    "\u0002\u0002\u0a12\u0a15\u0005\u00fc\u007f\u0002\u0a13\u0a15\u0005\u00fe",
    "\u0080\u0002\u0a14\u0a12\u0003\u0002\u0002\u0002\u0a14\u0a13\u0003\u0002",
    "\u0002\u0002\u0a15\u0105\u0003\u0002\u0002\u0002\u0a16\u0a17\u0005\u010c",
    "\u0087\u0002\u0a17\u0107\u0003\u0002\u0002\u0002\u0a18\u0a1a\u0005\u010a",
    "\u0086\u0002\u0a19\u0a18\u0003\u0002\u0002\u0002\u0a19\u0a1a\u0003\u0002",
    "\u0002\u0002\u0a1a\u0a1c\u0003\u0002\u0002\u0002\u0a1b\u0a1d\u0007\u00e0",
    "\u0002\u0002\u0a1c\u0a1b\u0003\u0002\u0002\u0002\u0a1c\u0a1d\u0003\u0002",
    "\u0002\u0002\u0a1d\u0a1e\u0003\u0002\u0002\u0002\u0a1e\u0a20\t\u000b",
    "\u0002\u0002\u0a1f\u0a21\u0007\u00e0\u0002\u0002\u0a20\u0a1f\u0003\u0002",
    "\u0002\u0002\u0a20\u0a21\u0003\u0002\u0002\u0002\u0a21\u0a23\u0003\u0002",
    "\u0002\u0002\u0a22\u0a19\u0003\u0002\u0002\u0002\u0a23\u0a26\u0003\u0002",
    "\u0002\u0002\u0a24\u0a22\u0003\u0002\u0002\u0002\u0a24\u0a25\u0003\u0002",
    "\u0002\u0002\u0a25\u0a27\u0003\u0002\u0002\u0002\u0a26\u0a24\u0003\u0002",
    "\u0002\u0002\u0a27\u0a34\u0005\u010a\u0086\u0002\u0a28\u0a2a\u0007\u00e0",
    "\u0002\u0002\u0a29\u0a28\u0003\u0002\u0002\u0002\u0a29\u0a2a\u0003\u0002",
    "\u0002\u0002\u0a2a\u0a2b\u0003\u0002\u0002\u0002\u0a2b\u0a2d\t\u000b",
    "\u0002\u0002\u0a2c\u0a2e\u0007\u00e0\u0002\u0002\u0a2d\u0a2c\u0003\u0002",
    "\u0002\u0002\u0a2d\u0a2e\u0003\u0002\u0002\u0002\u0a2e\u0a30\u0003\u0002",
    "\u0002\u0002\u0a2f\u0a31\u0005\u010a\u0086\u0002\u0a30\u0a2f\u0003\u0002",
    "\u0002\u0002\u0a30\u0a31\u0003\u0002\u0002\u0002\u0a31\u0a33\u0003\u0002",
    "\u0002\u0002\u0a32\u0a29\u0003\u0002\u0002\u0002\u0a33\u0a36\u0003\u0002",
    "\u0002\u0002\u0a34\u0a32\u0003\u0002\u0002\u0002\u0a34\u0a35\u0003\u0002",
    "\u0002\u0002\u0a35\u0109\u0003\u0002\u0002\u0002\u0a36\u0a34\u0003\u0002",
    "\u0002\u0002\u0a37\u0a38\t\u0010\u0002\u0002\u0a38\u0a3a\u0007\u00e0",
    "\u0002\u0002\u0a39\u0a37\u0003\u0002\u0002\u0002\u0a39\u0a3a\u0003\u0002",
    "\u0002\u0002\u0a3a\u0a3b\u0003\u0002\u0002\u0002\u0a3b\u0a3c\u0005\u00de",
    "p\u0002\u0a3c\u010b\u0003\u0002\u0002\u0002\u0a3d\u0a3e\u0007\u00be",
    "\u0002\u0002\u0a3e\u0a40\u0005\u0118\u008d\u0002\u0a3f\u0a41\u0005\u0132",
    "\u009a\u0002\u0a40\u0a3f\u0003\u0002\u0002\u0002\u0a40\u0a41\u0003\u0002",
    "\u0002\u0002\u0a41\u010d\u0003\u0002\u0002\u0002\u0a42\u0a54\u0007\u00c4",
    "\u0002\u0002\u0a43\u0a45\u0007\u00e0\u0002\u0002\u0a44\u0a43\u0003\u0002",
    "\u0002\u0002\u0a44\u0a45\u0003\u0002\u0002\u0002\u0a45\u0a46\u0003\u0002",
    "\u0002\u0002\u0a46\u0a51\u0005\u0110\u0089\u0002\u0a47\u0a49\u0007\u00e0",
    "\u0002\u0002\u0a48\u0a47\u0003\u0002\u0002\u0002\u0a48\u0a49\u0003\u0002",
    "\u0002\u0002\u0a49\u0a4a\u0003\u0002\u0002\u0002\u0a4a\u0a4c\u0007\u00b8",
    "\u0002\u0002\u0a4b\u0a4d\u0007\u00e0\u0002\u0002\u0a4c\u0a4b\u0003\u0002",
    "\u0002\u0002\u0a4c\u0a4d\u0003\u0002\u0002\u0002\u0a4d\u0a4e\u0003\u0002",
    "\u0002\u0002\u0a4e\u0a50\u0005\u0110\u0089\u0002\u0a4f\u0a48\u0003\u0002",
    "\u0002\u0002\u0a50\u0a53\u0003\u0002\u0002\u0002\u0a51\u0a4f\u0003\u0002",
    "\u0002\u0002\u0a51\u0a52\u0003\u0002\u0002\u0002\u0a52\u0a55\u0003\u0002",
    "\u0002\u0002\u0a53\u0a51\u0003\u0002\u0002\u0002\u0a54\u0a44\u0003\u0002",
    "\u0002\u0002\u0a54\u0a55\u0003\u0002\u0002\u0002\u0a55\u0a57\u0003\u0002",
    "\u0002\u0002\u0a56\u0a58\u0007\u00e0\u0002\u0002\u0a57\u0a56\u0003\u0002",
    "\u0002\u0002\u0a57\u0a58\u0003\u0002\u0002\u0002\u0a58\u0a59\u0003\u0002",
    "\u0002\u0002\u0a59\u0a5a\u0007\u00cf\u0002\u0002\u0a5a\u010f\u0003\u0002",
    "\u0002\u0002\u0a5b\u0a5c\u0007u\u0002\u0002\u0a5c\u0a5e\u0007\u00e0",
    "\u0002\u0002\u0a5d\u0a5b\u0003\u0002\u0002\u0002\u0a5d\u0a5e\u0003\u0002",
    "\u0002\u0002\u0a5e\u0a61\u0003\u0002\u0002\u0002\u0a5f\u0a60\t\u0011",
    "\u0002\u0002\u0a60\u0a62\u0007\u00e0\u0002\u0002\u0a61\u0a5f\u0003\u0002",
    "\u0002\u0002\u0a61\u0a62\u0003\u0002\u0002\u0002\u0a62\u0a65\u0003\u0002",
    "\u0002\u0002\u0a63\u0a64\u0007|\u0002\u0002\u0a64\u0a66\u0007\u00e0",
    "\u0002\u0002\u0a65\u0a63\u0003\u0002\u0002\u0002\u0a65\u0a66\u0003\u0002",
    "\u0002\u0002\u0a66\u0a67\u0003\u0002\u0002\u0002\u0a67\u0a69\u0005\u0118",
    "\u008d\u0002\u0a68\u0a6a\u0005\u0132\u009a\u0002\u0a69\u0a68\u0003\u0002",
    "\u0002\u0002\u0a69\u0a6a\u0003\u0002\u0002\u0002\u0a6a\u0a73\u0003\u0002",
    "\u0002\u0002\u0a6b\u0a6d\u0007\u00e0\u0002\u0002\u0a6c\u0a6b\u0003\u0002",
    "\u0002\u0002\u0a6c\u0a6d\u0003\u0002\u0002\u0002\u0a6d\u0a6e\u0003\u0002",
    "\u0002\u0002\u0a6e\u0a70\u0007\u00c4\u0002\u0002\u0a6f\u0a71\u0007\u00e0",
    "\u0002\u0002\u0a70\u0a6f\u0003\u0002\u0002\u0002\u0a70\u0a71\u0003\u0002",
    "\u0002\u0002\u0a71\u0a72\u0003\u0002\u0002\u0002\u0a72\u0a74\u0007\u00cf",
    "\u0002\u0002\u0a73\u0a6c\u0003\u0002\u0002\u0002\u0a73\u0a74\u0003\u0002",
    "\u0002\u0002\u0a74\u0a77\u0003\u0002\u0002\u0002\u0a75\u0a76\u0007\u00e0",
    "\u0002\u0002\u0a76\u0a78\u0005\u011a\u008e\u0002\u0a77\u0a75\u0003\u0002",
    "\u0002\u0002\u0a77\u0a78\u0003\u0002\u0002\u0002\u0a78\u0a7d\u0003\u0002",
    "\u0002\u0002\u0a79\u0a7b\u0007\u00e0\u0002\u0002\u0a7a\u0a79\u0003\u0002",
    "\u0002\u0002\u0a7a\u0a7b\u0003\u0002\u0002\u0002\u0a7b\u0a7c\u0003\u0002",
    "\u0002\u0002\u0a7c\u0a7e\u0005\u0112\u008a\u0002\u0a7d\u0a7a\u0003\u0002",
    "\u0002\u0002\u0a7d\u0a7e\u0003\u0002\u0002\u0002\u0a7e\u0111\u0003\u0002",
    "\u0002\u0002\u0a7f\u0a81\u0007\u00bd\u0002\u0002\u0a80\u0a82\u0007\u00e0",
    "\u0002\u0002\u0a81\u0a80\u0003\u0002\u0002\u0002\u0a81\u0a82\u0003\u0002",
    "\u0002\u0002\u0a82\u0a83\u0003\u0002\u0002\u0002\u0a83\u0a84\u0005\u00de",
    "p\u0002\u0a84\u0113\u0003\u0002\u0002\u0002\u0a85\u0a90\u0005\u0116",
    "\u008c\u0002\u0a86\u0a88\u0007\u00e0\u0002\u0002\u0a87\u0a86\u0003\u0002",
    "\u0002\u0002\u0a87\u0a88\u0003\u0002\u0002\u0002\u0a88\u0a89\u0003\u0002",
    "\u0002\u0002\u0a89\u0a8b\u0007\u00b8\u0002\u0002\u0a8a\u0a8c\u0007\u00e0",
    "\u0002\u0002\u0a8b\u0a8a\u0003\u0002\u0002\u0002\u0a8b\u0a8c\u0003\u0002",
    "\u0002\u0002\u0a8c\u0a8d\u0003\u0002\u0002\u0002\u0a8d\u0a8f\u0005\u0116",
    "\u008c\u0002\u0a8e\u0a87\u0003\u0002\u0002\u0002\u0a8f\u0a92\u0003\u0002",
    "\u0002\u0002\u0a90\u0a8e\u0003\u0002\u0002\u0002\u0a90\u0a91\u0003\u0002",
    "\u0002\u0002\u0a91\u0115\u0003\u0002\u0002\u0002\u0a92\u0a90\u0003\u0002",
    "\u0002\u0002\u0a93\u0a94\u0005\u00dep\u0002\u0a94\u0a95\u0007\u00e0",
    "\u0002\u0002\u0a95\u0a96\u0007\u00a4\u0002\u0002\u0a96\u0a97\u0007\u00e0",
    "\u0002\u0002\u0a97\u0a99\u0003\u0002\u0002\u0002\u0a98\u0a93\u0003\u0002",
    "\u0002\u0002\u0a98\u0a99\u0003\u0002\u0002\u0002\u0a99\u0a9a\u0003\u0002",
    "\u0002\u0002\u0a9a\u0a9b\u0005\u00dep\u0002\u0a9b\u0117\u0003\u0002",
    "\u0002\u0002\u0a9c\u0a9f\u0007\u00dc\u0002\u0002\u0a9d\u0a9f\u0005\u0136",
    "\u009c\u0002\u0a9e\u0a9c\u0003\u0002\u0002\u0002\u0a9e\u0a9d\u0003\u0002",
    "\u0002\u0002\u0a9f\u0aa0\u0003\u0002\u0002\u0002\u0aa0\u0a9e\u0003\u0002",
    "\u0002\u0002\u0aa0\u0aa1\u0003\u0002\u0002\u0002\u0aa1\u0aab\u0003\u0002",
    "\u0002\u0002\u0aa2\u0aa5\u0007\u00d1\u0002\u0002\u0aa3\u0aa6\u0007\u00dc",
    "\u0002\u0002\u0aa4\u0aa6\u0005\u0136\u009c\u0002\u0aa5\u0aa3\u0003\u0002",
    "\u0002\u0002\u0aa5\u0aa4\u0003\u0002\u0002\u0002\u0aa6\u0aa7\u0003\u0002",
    "\u0002\u0002\u0aa7\u0aa5\u0003\u0002\u0002\u0002\u0aa7\u0aa8\u0003\u0002",
    "\u0002\u0002\u0aa8\u0aa9\u0003\u0002\u0002\u0002\u0aa9\u0aab\u0007\u00d2",
    "\u0002\u0002\u0aaa\u0a9e\u0003\u0002\u0002\u0002\u0aaa\u0aa2\u0003\u0002",
    "\u0002\u0002\u0aab\u0119\u0003\u0002\u0002\u0002\u0aac\u0aad\u0007\n",
    "\u0002\u0002\u0aad\u0ab0\u0007\u00e0\u0002\u0002\u0aae\u0aaf\u0007l",
    "\u0002\u0002\u0aaf\u0ab1\u0007\u00e0\u0002\u0002\u0ab0\u0aae\u0003\u0002",
    "\u0002\u0002\u0ab0\u0ab1\u0003\u0002\u0002\u0002\u0ab1\u0ab2\u0003\u0002",
    "\u0002\u0002\u0ab2\u0ab5\u0005\u0130\u0099\u0002\u0ab3\u0ab4\u0007\u00e0",
    "\u0002\u0002\u0ab4\u0ab6\u0005\u0124\u0093\u0002\u0ab5\u0ab3\u0003\u0002",
    "\u0002\u0002\u0ab5\u0ab6\u0003\u0002\u0002\u0002\u0ab6\u011b\u0003\u0002",
    "\u0002\u0002\u0ab7\u0ab8\t\u0012\u0002\u0002\u0ab8\u011d\u0003\u0002",
    "\u0002\u0002\u0ab9\u0abe\u0007\u00dc\u0002\u0002\u0aba\u0abd\u0005\u0136",
    "\u009c\u0002\u0abb\u0abd\u0007\u00dc\u0002\u0002\u0abc\u0aba\u0003\u0002",
    "\u0002\u0002\u0abc\u0abb\u0003\u0002\u0002\u0002\u0abd\u0ac0\u0003\u0002",
    "\u0002\u0002\u0abe\u0abc\u0003\u0002\u0002\u0002\u0abe\u0abf\u0003\u0002",
    "\u0002\u0002\u0abf\u0ac9\u0003\u0002\u0002\u0002\u0ac0\u0abe\u0003\u0002",
    "\u0002\u0002\u0ac1\u0ac4\u0005\u0136\u009c\u0002\u0ac2\u0ac5\u0005\u0136",
    "\u009c\u0002\u0ac3\u0ac5\u0007\u00dc\u0002\u0002\u0ac4\u0ac2\u0003\u0002",
    "\u0002\u0002\u0ac4\u0ac3\u0003\u0002\u0002\u0002\u0ac5\u0ac6\u0003\u0002",
    "\u0002\u0002\u0ac6\u0ac4\u0003\u0002\u0002\u0002\u0ac6\u0ac7\u0003\u0002",
    "\u0002\u0002\u0ac7\u0ac9\u0003\u0002\u0002\u0002\u0ac8\u0ab9\u0003\u0002",
    "\u0002\u0002\u0ac8\u0ac1\u0003\u0002\u0002\u0002\u0ac9\u011f\u0003\u0002",
    "\u0002\u0002\u0aca\u0acb\t\u000f\u0002\u0002\u0acb\u0121\u0003\u0002",
    "\u0002\u0002\u0acc\u0ad1\u0005\u0118\u008d\u0002\u0acd\u0ace\u0007\u00bc",
    "\u0002\u0002\u0ace\u0ad0\u0005\u0118\u008d\u0002\u0acf\u0acd\u0003\u0002",
    "\u0002\u0002\u0ad0\u0ad3\u0003\u0002\u0002\u0002\u0ad1\u0acf\u0003\u0002",
    "\u0002\u0002\u0ad1\u0ad2\u0003\u0002\u0002\u0002\u0ad2\u0123\u0003\u0002",
    "\u0002\u0002\u0ad3\u0ad1\u0003\u0002\u0002\u0002\u0ad4\u0ad6\u0007\u00c8",
    "\u0002\u0002\u0ad5\u0ad7\u0007\u00e0\u0002\u0002\u0ad6\u0ad5\u0003\u0002",
    "\u0002\u0002\u0ad6\u0ad7\u0003\u0002\u0002\u0002\u0ad7\u0ada\u0003\u0002",
    "\u0002\u0002\u0ad8\u0adb\u0007\u00d6\u0002\u0002\u0ad9\u0adb\u0005\u0118",
    "\u008d\u0002\u0ada\u0ad8\u0003\u0002\u0002\u0002\u0ada\u0ad9\u0003\u0002",
    "\u0002\u0002\u0adb\u0125\u0003\u0002\u0002\u0002\u0adc\u0ae5\u0005\u011e",
    "\u0090\u0002\u0add\u0adf\u0007\u00e0\u0002\u0002\u0ade\u0add\u0003\u0002",
    "\u0002\u0002\u0ade\u0adf\u0003\u0002\u0002\u0002\u0adf\u0ae0\u0003\u0002",
    "\u0002\u0002\u0ae0\u0ae2\u0007\u00c6\u0002\u0002\u0ae1\u0ae3\u0007\u00e0",
    "\u0002\u0002\u0ae2\u0ae1\u0003\u0002\u0002\u0002\u0ae2\u0ae3\u0003\u0002",
    "\u0002\u0002\u0ae3\u0ae4\u0003\u0002\u0002\u0002\u0ae4\u0ae6\u0005\u011e",
    "\u0090\u0002\u0ae5\u0ade\u0003\u0002\u0002\u0002\u0ae5\u0ae6\u0003\u0002",
    "\u0002\u0002\u0ae6\u0127\u0003\u0002\u0002\u0002\u0ae7\u0ae8\u0005\u0118",
    "\u008d\u0002\u0ae8\u0ae9\u0007\u00b7\u0002\u0002\u0ae9\u0129\u0003\u0002",
    "\u0002\u0002\u0aea\u0aeb\t\u0013\u0002\u0002\u0aeb\u012b\u0003\u0002",
    "\u0002\u0002\u0aec\u0aed\t\u0014\u0002\u0002\u0aed\u012d\u0003\u0002",
    "\u0002\u0002\u0aee\u0aef\t\u0015\u0002\u0002\u0aef\u012f\u0003\u0002",
    "\u0002\u0002\u0af0\u0af3\u0005\u011c\u008f\u0002\u0af1\u0af3\u0005\u0122",
    "\u0092\u0002\u0af2\u0af0\u0003\u0002\u0002\u0002\u0af2\u0af1\u0003\u0002",
    "\u0002\u0002\u0af3\u0afc\u0003\u0002\u0002\u0002\u0af4\u0af6\u0007\u00e0",
    "\u0002\u0002\u0af5\u0af4\u0003\u0002\u0002\u0002\u0af5\u0af6\u0003\u0002",
    "\u0002\u0002\u0af6\u0af7\u0003\u0002\u0002\u0002\u0af7\u0af9\u0007\u00c4",
    "\u0002\u0002\u0af8\u0afa\u0007\u00e0\u0002\u0002\u0af9\u0af8\u0003\u0002",
    "\u0002\u0002\u0af9\u0afa\u0003\u0002\u0002\u0002\u0afa\u0afb\u0003\u0002",
    "\u0002\u0002\u0afb\u0afd\u0007\u00cf\u0002\u0002\u0afc\u0af5\u0003\u0002",
    "\u0002\u0002\u0afc\u0afd\u0003\u0002\u0002\u0002\u0afd\u0131\u0003\u0002",
    "\u0002\u0002\u0afe\u0aff\t\u0016\u0002\u0002\u0aff\u0133\u0003\u0002",
    "\u0002\u0002\u0b00\u0b01\t\u0017\u0002\u0002\u0b01\u0135\u0003\u0002",
    "\u0002\u0002\u0b02\u0b03\t\u0018\u0002\u0002\u0b03\u0137\u0003\u0002",
    "\u0002\u0002\u01e9\u013c\u0141\u0148\u014a\u014d\u0152\u0156\u015b\u015f",
    "\u0164\u0168\u016d\u0171\u0176\u017a\u017f\u0183\u0188\u018c\u0190\u0195",
    "\u0198\u019d\u01a9\u01af\u01b4\u01ba\u01be\u01c2\u01cb\u01cf\u01d5\u01d9",
    "\u01e3\u01e9\u01ee\u01fd\u0200\u0208\u020d\u0212\u0218\u021e\u0221\u0225",
    "\u0229\u022c\u0230\u0235\u0239\u0240\u0248\u024c\u0250\u0259\u025c\u0264",
    "\u0268\u026d\u0272\u0274\u027a\u0286\u028a\u028e\u0292\u0297\u029e\u02a1",
    "\u02a6\u02ec\u02f2\u02f6\u02f9\u0309\u030d\u0312\u0315\u031a\u0320\u0324",
    "\u0329\u032e\u0332\u0335\u0339\u033f\u0343\u034a\u0350\u0353\u0358\u0362",
    "\u0365\u0368\u036c\u0372\u0376\u037b\u0382\u0386\u038a\u038e\u0391\u0397",
    "\u039d\u039f\u03aa\u03b0\u03b2\u03ba\u03c0\u03c8\u03cf\u03d7\u03dc\u03e3",
    "\u03e7\u03ea\u03ef\u03f5\u03f9\u03fe\u0408\u040e\u0418\u041c\u0426\u042f",
    "\u0435\u0437\u043c\u0442\u0446\u0449\u044d\u0458\u045d\u0463\u0465\u046b",
    "\u046d\u0472\u0476\u047c\u047f\u0483\u0488\u048e\u0490\u0498\u049c\u049f",
    "\u04a2\u04a6\u04bd\u04c3\u04c7\u04cb\u04d5\u04db\u04dd\u04e9\u04ef\u04f1",
    "\u04f7\u04fd\u04ff\u0509\u050d\u0512\u051a\u051e\u0522\u052a\u052e\u053a",
    "\u053e\u0545\u0547\u054d\u0551\u0559\u055d\u0569\u056f\u0571\u057b\u0581",
    "\u0583\u0589\u058f\u0591\u0595\u0599\u059d\u05b3\u05b8\u05c2\u05c6\u05cb",
    "\u05d6\u05da\u05df\u05ed\u05f1\u05fa\u05fe\u0601\u0605\u0609\u060c\u0610",
    "\u0614\u0617\u061b\u061e\u0622\u0624\u0628\u062c\u0630\u0634\u0637\u063d",
    "\u0641\u0644\u0649\u064d\u0653\u0656\u0659\u065d\u0662\u0668\u066a\u0671",
    "\u0675\u067b\u067e\u0683\u0689\u068b\u0692\u0696\u069c\u069f\u06a4\u06aa",
    "\u06ac\u06b4\u06b8\u06bb\u06be\u06c2\u06ca\u06ce\u06d2\u06d4\u06d7\u06dc",
    "\u06e2\u06e6\u06ea\u06ef\u06f4\u06f8\u06fc\u0701\u0709\u070b\u0717\u071b",
    "\u0723\u0727\u072f\u0733\u0737\u073b\u073f\u0743\u074b\u074f\u075b\u0760",
    "\u0764\u076c\u076f\u0774\u077a\u077c\u0782\u0784\u0789\u078d\u0792\u0795",
    "\u0799\u079d\u07a8\u07ae\u07b2\u07b5\u07bb\u07bf\u07c7\u07cb\u07d4\u07d8",
    "\u07de\u07e1\u07e6\u07ec\u07ee\u07f4\u07f8\u07ff\u0807\u080c\u0813\u0817",
    "\u081a\u081d\u0820\u0824\u0829\u0832\u083c\u0840\u0847\u0849\u084f\u0853",
    "\u0857\u085c\u0860\u086d\u0871\u0877\u087f\u0883\u0887\u088b\u088f\u0893",
    "\u0898\u089c\u08a1\u08a5\u08aa\u08ae\u08b3\u08b7\u08bc\u08c0\u08c5\u08c9",
    "\u08ce\u08d2\u08d7\u08db\u08e0\u08e4\u08e9\u08ed\u08f2\u08f6\u08f9\u08fb",
    "\u0901\u0906\u090c\u0910\u0915\u091a\u091d\u0921\u0925\u0927\u092b\u092d",
    "\u0931\u0939\u093e\u0944\u094d\u0951\u0959\u095f\u0965\u0967\u096f\u0973",
    "\u0976\u097a\u0980\u0983\u0987\u098b\u098f\u0994\u0998\u099c\u099f\u09a3",
    "\u09a7\u09ab\u09af\u09b4\u09b7\u09bc\u09c0\u09c3\u09c9\u09cd\u09d0\u09d5",
    "\u09d8\u09db\u09df\u09e3\u09e5\u09ea\u09ed\u09f1\u09f4\u09f8\u09fc\u09fe",
    "\u0a04\u0a09\u0a0c\u0a0f\u0a14\u0a19\u0a1c\u0a20\u0a24\u0a29\u0a2d\u0a30",
    "\u0a34\u0a39\u0a40\u0a44\u0a48\u0a4c\u0a51\u0a54\u0a57\u0a5d\u0a61\u0a65",
    "\u0a69\u0a6c\u0a70\u0a73\u0a77\u0a7a\u0a7d\u0a81\u0a87\u0a8b\u0a90\u0a98",
    "\u0a9e\u0aa0\u0aa5\u0aa7\u0aaa\u0ab0\u0ab5\u0abc\u0abe\u0ac4\u0ac6\u0ac8",
    "\u0ad1\u0ad6\u0ada\u0ade\u0ae2\u0ae5\u0af2\u0af5\u0af9\u0afc"].join("");
const atn = new antlr4_1.default.atn.ATNDeserializer().deserialize(serializedATN);
const decisionsToDFA = atn.decisionToState.map((ds, index) => new antlr4_1.default.dfa.DFA(ds, index));
const sharedContextCache = new antlr4_1.default.PredictionContextCache();
class VisualBasic6Parser extends antlr4_1.default.Parser {
    constructor(input) {
        super(input);
        this._interp = new antlr4_1.default.atn.ParserATNSimulator(this, atn, decisionsToDFA, sharedContextCache);
        this.ruleNames = VisualBasic6Parser.ruleNames;
        this.literalNames = VisualBasic6Parser.literalNames;
        this.symbolicNames = VisualBasic6Parser.symbolicNames;
    }
    get atn() {
        return atn;
    }
    sempred(localctx, ruleIndex, predIndex) {
        switch (ruleIndex) {
            case 110:
                return this.valueStmt_sempred(localctx, predIndex);
            default:
                throw "No predicate with index:" + ruleIndex;
        }
    }
    valueStmt_sempred(localctx, predIndex) {
        switch (predIndex) {
            case 0:
                return this.precpred(this._ctx, 16);
            case 1:
                return this.precpred(this._ctx, 14);
            case 2:
                return this.precpred(this._ctx, 13);
            case 3:
                return this.precpred(this._ctx, 12);
            case 4:
                return this.precpred(this._ctx, 11);
            case 5:
                return this.precpred(this._ctx, 10);
            case 6:
                return this.precpred(this._ctx, 9);
            case 7:
                return this.precpred(this._ctx, 7);
            case 8:
                return this.precpred(this._ctx, 6);
            case 9:
                return this.precpred(this._ctx, 5);
            case 10:
                return this.precpred(this._ctx, 4);
            case 11:
                return this.precpred(this._ctx, 3);
            default:
                throw "No predicate with index:" + predIndex;
        }
    }
    ;
    startRule() {
        let localctx = new StartRuleContext(this, this._ctx, this.state);
        this.enterRule(localctx, 0, VisualBasic6Parser.RULE_startRule);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 310;
            this.module();
            this.state = 311;
            this.match(VisualBasic6Parser.EOF);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    module() {
        let localctx = new ModuleContext(this, this._ctx, this.state);
        this.enterRule(localctx, 2, VisualBasic6Parser.RULE_module);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 314;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 0, this._ctx);
            if (la_ === 1) {
                this.state = 313;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 319;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input, 1, this._ctx);
            while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER) {
                if (_alt === 1) {
                    this.state = 316;
                    this.match(VisualBasic6Parser.NEWLINE);
                }
                this.state = 321;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input, 1, this._ctx);
            }
            this.state = 328;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 3, this._ctx);
            if (la_ === 1) {
                this.state = 322;
                this.moduleHeader();
                this.state = 324;
                this._errHandler.sync(this);
                var _alt = 1;
                do {
                    switch (_alt) {
                        case 1:
                            this.state = 323;
                            this.match(VisualBasic6Parser.NEWLINE);
                            break;
                        default:
                            throw new antlr4_1.default.error.NoViableAltException(this);
                    }
                    this.state = 326;
                    this._errHandler.sync(this);
                    _alt = this._interp.adaptivePredict(this._input, 2, this._ctx);
                } while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER);
            }
            this.state = 331;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 4, this._ctx);
            if (la_ === 1) {
                this.state = 330;
                this.moduleReferences();
            }
            this.state = 336;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input, 5, this._ctx);
            while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER) {
                if (_alt === 1) {
                    this.state = 333;
                    this.match(VisualBasic6Parser.NEWLINE);
                }
                this.state = 338;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input, 5, this._ctx);
            }
            this.state = 340;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 6, this._ctx);
            if (la_ === 1) {
                this.state = 339;
                this.controlProperties();
            }
            this.state = 345;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input, 7, this._ctx);
            while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER) {
                if (_alt === 1) {
                    this.state = 342;
                    this.match(VisualBasic6Parser.NEWLINE);
                }
                this.state = 347;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input, 7, this._ctx);
            }
            this.state = 349;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 8, this._ctx);
            if (la_ === 1) {
                this.state = 348;
                this.moduleConfig();
            }
            this.state = 354;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input, 9, this._ctx);
            while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER) {
                if (_alt === 1) {
                    this.state = 351;
                    this.match(VisualBasic6Parser.NEWLINE);
                }
                this.state = 356;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input, 9, this._ctx);
            }
            this.state = 358;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 10, this._ctx);
            if (la_ === 1) {
                this.state = 357;
                this.moduleAttributes();
            }
            this.state = 363;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input, 11, this._ctx);
            while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER) {
                if (_alt === 1) {
                    this.state = 360;
                    this.match(VisualBasic6Parser.NEWLINE);
                }
                this.state = 365;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input, 11, this._ctx);
            }
            this.state = 367;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 12, this._ctx);
            if (la_ === 1) {
                this.state = 366;
                this.moduleOptions();
            }
            this.state = 372;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input, 13, this._ctx);
            while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER) {
                if (_alt === 1) {
                    this.state = 369;
                    this.match(VisualBasic6Parser.NEWLINE);
                }
                this.state = 374;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input, 13, this._ctx);
            }
            this.state = 376;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 14, this._ctx);
            if (la_ === 1) {
                this.state = 375;
                this.moduleBody();
            }
            this.state = 381;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while (_la === VisualBasic6Parser.NEWLINE) {
                this.state = 378;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 383;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            this.state = 385;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 384;
                this.match(VisualBasic6Parser.WS);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    moduleReferences() {
        let localctx = new ModuleReferencesContext(this, this._ctx, this.state);
        this.enterRule(localctx, 4, VisualBasic6Parser.RULE_moduleReferences);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 388;
            this._errHandler.sync(this);
            var _alt = 1;
            do {
                switch (_alt) {
                    case 1:
                        this.state = 387;
                        this.moduleReference();
                        break;
                    default:
                        throw new antlr4_1.default.error.NoViableAltException(this);
                }
                this.state = 390;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input, 17, this._ctx);
            } while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    moduleReference() {
        let localctx = new ModuleReferenceContext(this, this._ctx, this.state);
        this.enterRule(localctx, 6, VisualBasic6Parser.RULE_moduleReference);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 392;
            this.match(VisualBasic6Parser.OBJECT);
            this.state = 394;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 393;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 396;
            this.match(VisualBasic6Parser.EQ);
            this.state = 398;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 397;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 400;
            this.moduleReferenceValue();
            this.state = 406;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.SEMICOLON) {
                this.state = 401;
                this.match(VisualBasic6Parser.SEMICOLON);
                this.state = 403;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === VisualBasic6Parser.WS) {
                    this.state = 402;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 405;
                this.moduleReferenceComponent();
            }
            this.state = 411;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input, 22, this._ctx);
            while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER) {
                if (_alt === 1) {
                    this.state = 408;
                    this.match(VisualBasic6Parser.NEWLINE);
                }
                this.state = 413;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input, 22, this._ctx);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    moduleReferenceValue() {
        let localctx = new ModuleReferenceValueContext(this, this._ctx, this.state);
        this.enterRule(localctx, 8, VisualBasic6Parser.RULE_moduleReferenceValue);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 414;
            this.match(VisualBasic6Parser.STRINGLITERAL);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    moduleReferenceComponent() {
        let localctx = new ModuleReferenceComponentContext(this, this._ctx, this.state);
        this.enterRule(localctx, 10, VisualBasic6Parser.RULE_moduleReferenceComponent);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 416;
            this.match(VisualBasic6Parser.STRINGLITERAL);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    moduleHeader() {
        let localctx = new ModuleHeaderContext(this, this._ctx, this.state);
        this.enterRule(localctx, 12, VisualBasic6Parser.RULE_moduleHeader);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 418;
            this.match(VisualBasic6Parser.VERSION);
            this.state = 419;
            this.match(VisualBasic6Parser.WS);
            this.state = 420;
            this.match(VisualBasic6Parser.DOUBLELITERAL);
            this.state = 423;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 421;
                this.match(VisualBasic6Parser.WS);
                this.state = 422;
                this.match(VisualBasic6Parser.CLASS);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    moduleConfig() {
        let localctx = new ModuleConfigContext(this, this._ctx, this.state);
        this.enterRule(localctx, 14, VisualBasic6Parser.RULE_moduleConfig);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 425;
            this.match(VisualBasic6Parser.BEGIN);
            this.state = 427;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 426;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 429;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while (_la === VisualBasic6Parser.NEWLINE);
            this.state = 432;
            this._errHandler.sync(this);
            var _alt = 1;
            do {
                switch (_alt) {
                    case 1:
                        this.state = 431;
                        this.moduleConfigElement();
                        break;
                    default:
                        throw new antlr4_1.default.error.NoViableAltException(this);
                }
                this.state = 434;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input, 25, this._ctx);
            } while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER);
            this.state = 436;
            this.match(VisualBasic6Parser.END);
            this.state = 438;
            this._errHandler.sync(this);
            var _alt = 1;
            do {
                switch (_alt) {
                    case 1:
                        this.state = 437;
                        this.match(VisualBasic6Parser.NEWLINE);
                        break;
                    default:
                        throw new antlr4_1.default.error.NoViableAltException(this);
                }
                this.state = 440;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input, 26, this._ctx);
            } while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    moduleConfigElement() {
        let localctx = new ModuleConfigElementContext(this, this._ctx, this.state);
        this.enterRule(localctx, 16, VisualBasic6Parser.RULE_moduleConfigElement);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 442;
            this.ambiguousIdentifier();
            this.state = 444;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 443;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 446;
            this.match(VisualBasic6Parser.EQ);
            this.state = 448;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 447;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 450;
            this.literal();
            this.state = 451;
            this.match(VisualBasic6Parser.NEWLINE);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    moduleAttributes() {
        let localctx = new ModuleAttributesContext(this, this._ctx, this.state);
        this.enterRule(localctx, 18, VisualBasic6Parser.RULE_moduleAttributes);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 459;
            this._errHandler.sync(this);
            var _alt = 1;
            do {
                switch (_alt) {
                    case 1:
                        this.state = 453;
                        this.attributeStmt();
                        this.state = 455;
                        this._errHandler.sync(this);
                        var _alt = 1;
                        do {
                            switch (_alt) {
                                case 1:
                                    this.state = 454;
                                    this.match(VisualBasic6Parser.NEWLINE);
                                    break;
                                default:
                                    throw new antlr4_1.default.error.NoViableAltException(this);
                            }
                            this.state = 457;
                            this._errHandler.sync(this);
                            _alt = this._interp.adaptivePredict(this._input, 29, this._ctx);
                        } while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER);
                        break;
                    default:
                        throw new antlr4_1.default.error.NoViableAltException(this);
                }
                this.state = 461;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input, 30, this._ctx);
            } while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    moduleOptions() {
        let localctx = new ModuleOptionsContext(this, this._ctx, this.state);
        this.enterRule(localctx, 20, VisualBasic6Parser.RULE_moduleOptions);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 469;
            this._errHandler.sync(this);
            var _alt = 1;
            do {
                switch (_alt) {
                    case 1:
                        this.state = 463;
                        this.moduleOption();
                        this.state = 465;
                        this._errHandler.sync(this);
                        var _alt = 1;
                        do {
                            switch (_alt) {
                                case 1:
                                    this.state = 464;
                                    this.match(VisualBasic6Parser.NEWLINE);
                                    break;
                                default:
                                    throw new antlr4_1.default.error.NoViableAltException(this);
                            }
                            this.state = 467;
                            this._errHandler.sync(this);
                            _alt = this._interp.adaptivePredict(this._input, 31, this._ctx);
                        } while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER);
                        break;
                    default:
                        throw new antlr4_1.default.error.NoViableAltException(this);
                }
                this.state = 471;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input, 32, this._ctx);
            } while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    moduleOption() {
        let localctx = new ModuleOptionContext(this, this._ctx, this.state);
        this.enterRule(localctx, 22, VisualBasic6Parser.RULE_moduleOption);
        var _la = 0;
        try {
            this.state = 481;
            this._errHandler.sync(this);
            switch (this._input.LA(1)) {
                case VisualBasic6Parser.OPTION_BASE:
                    localctx = new OptionBaseStmtContext(this, localctx);
                    this.enterOuterAlt(localctx, 1);
                    this.state = 473;
                    this.match(VisualBasic6Parser.OPTION_BASE);
                    this.state = 474;
                    this.match(VisualBasic6Parser.WS);
                    this.state = 475;
                    this.match(VisualBasic6Parser.INTEGERLITERAL);
                    break;
                case VisualBasic6Parser.OPTION_COMPARE:
                    localctx = new OptionCompareStmtContext(this, localctx);
                    this.enterOuterAlt(localctx, 2);
                    this.state = 476;
                    this.match(VisualBasic6Parser.OPTION_COMPARE);
                    this.state = 477;
                    this.match(VisualBasic6Parser.WS);
                    this.state = 478;
                    _la = this._input.LA(1);
                    if (!(_la === VisualBasic6Parser.BINARY || _la === VisualBasic6Parser.TEXT)) {
                        this._errHandler.recoverInline(this);
                    }
                    else {
                        this._errHandler.reportMatch(this);
                        this.consume();
                    }
                    break;
                case VisualBasic6Parser.OPTION_EXPLICIT:
                    localctx = new OptionExplicitStmtContext(this, localctx);
                    this.enterOuterAlt(localctx, 3);
                    this.state = 479;
                    this.match(VisualBasic6Parser.OPTION_EXPLICIT);
                    break;
                case VisualBasic6Parser.OPTION_PRIVATE_MODULE:
                    localctx = new OptionPrivateModuleStmtContext(this, localctx);
                    this.enterOuterAlt(localctx, 4);
                    this.state = 480;
                    this.match(VisualBasic6Parser.OPTION_PRIVATE_MODULE);
                    break;
                default:
                    throw new antlr4_1.default.error.NoViableAltException(this);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    moduleBody() {
        let localctx = new ModuleBodyContext(this, this._ctx, this.state);
        this.enterRule(localctx, 24, VisualBasic6Parser.RULE_moduleBody);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 483;
            this.moduleBodyElement();
            this.state = 492;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input, 35, this._ctx);
            while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER) {
                if (_alt === 1) {
                    this.state = 485;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    do {
                        this.state = 484;
                        this.match(VisualBasic6Parser.NEWLINE);
                        this.state = 487;
                        this._errHandler.sync(this);
                        _la = this._input.LA(1);
                    } while (_la === VisualBasic6Parser.NEWLINE);
                    this.state = 489;
                    this.moduleBodyElement();
                }
                this.state = 494;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input, 35, this._ctx);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    moduleBodyElement() {
        let localctx = new ModuleBodyElementContext(this, this._ctx, this.state);
        this.enterRule(localctx, 26, VisualBasic6Parser.RULE_moduleBodyElement);
        try {
            this.state = 507;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 36, this._ctx);
            switch (la_) {
                case 1:
                    this.enterOuterAlt(localctx, 1);
                    this.state = 495;
                    this.moduleBlock();
                    break;
                case 2:
                    this.enterOuterAlt(localctx, 2);
                    this.state = 496;
                    this.moduleOption();
                    break;
                case 3:
                    this.enterOuterAlt(localctx, 3);
                    this.state = 497;
                    this.declareStmt();
                    break;
                case 4:
                    this.enterOuterAlt(localctx, 4);
                    this.state = 498;
                    this.enumerationStmt();
                    break;
                case 5:
                    this.enterOuterAlt(localctx, 5);
                    this.state = 499;
                    this.eventStmt();
                    break;
                case 6:
                    this.enterOuterAlt(localctx, 6);
                    this.state = 500;
                    this.functionStmt();
                    break;
                case 7:
                    this.enterOuterAlt(localctx, 7);
                    this.state = 501;
                    this.macroIfThenElseStmt();
                    break;
                case 8:
                    this.enterOuterAlt(localctx, 8);
                    this.state = 502;
                    this.propertyGetStmt();
                    break;
                case 9:
                    this.enterOuterAlt(localctx, 9);
                    this.state = 503;
                    this.propertySetStmt();
                    break;
                case 10:
                    this.enterOuterAlt(localctx, 10);
                    this.state = 504;
                    this.propertyLetStmt();
                    break;
                case 11:
                    this.enterOuterAlt(localctx, 11);
                    this.state = 505;
                    this.subStmt();
                    break;
                case 12:
                    this.enterOuterAlt(localctx, 12);
                    this.state = 506;
                    this.typeStmt();
                    break;
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    controlProperties() {
        let localctx = new ControlPropertiesContext(this, this._ctx, this.state);
        this.enterRule(localctx, 28, VisualBasic6Parser.RULE_controlProperties);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 510;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 509;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 512;
            this.match(VisualBasic6Parser.BEGIN);
            this.state = 513;
            this.match(VisualBasic6Parser.WS);
            this.state = 514;
            this.cp_ControlType();
            this.state = 515;
            this.match(VisualBasic6Parser.WS);
            this.state = 516;
            this.cp_ControlIdentifier();
            this.state = 518;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 517;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 521;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 520;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 523;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while (_la === VisualBasic6Parser.NEWLINE);
            this.state = 526;
            this._errHandler.sync(this);
            var _alt = 1;
            do {
                switch (_alt) {
                    case 1:
                        this.state = 525;
                        this.cp_Properties();
                        break;
                    default:
                        throw new antlr4_1.default.error.NoViableAltException(this);
                }
                this.state = 528;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input, 40, this._ctx);
            } while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER);
            this.state = 530;
            this.match(VisualBasic6Parser.END);
            this.state = 534;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input, 41, this._ctx);
            while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER) {
                if (_alt === 1) {
                    this.state = 531;
                    this.match(VisualBasic6Parser.NEWLINE);
                }
                this.state = 536;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input, 41, this._ctx);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    cp_Properties() {
        let localctx = new Cp_PropertiesContext(this, this._ctx, this.state);
        this.enterRule(localctx, 30, VisualBasic6Parser.RULE_cp_Properties);
        try {
            this.state = 540;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 42, this._ctx);
            switch (la_) {
                case 1:
                    this.enterOuterAlt(localctx, 1);
                    this.state = 537;
                    this.cp_SingleProperty();
                    break;
                case 2:
                    this.enterOuterAlt(localctx, 2);
                    this.state = 538;
                    this.cp_NestedProperty();
                    break;
                case 3:
                    this.enterOuterAlt(localctx, 3);
                    this.state = 539;
                    this.controlProperties();
                    break;
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    cp_SingleProperty() {
        let localctx = new Cp_SinglePropertyContext(this, this._ctx, this.state);
        this.enterRule(localctx, 32, VisualBasic6Parser.RULE_cp_SingleProperty);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 543;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 43, this._ctx);
            if (la_ === 1) {
                this.state = 542;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 545;
            this.implicitCallStmt_InStmt();
            this.state = 547;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 546;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 549;
            this.match(VisualBasic6Parser.EQ);
            this.state = 551;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 550;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 554;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 46, this._ctx);
            if (la_ === 1) {
                this.state = 553;
                this.match(VisualBasic6Parser.DOLLAR);
            }
            this.state = 556;
            this.cp_PropertyValue();
            this.state = 558;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.FRX_OFFSET) {
                this.state = 557;
                this.match(VisualBasic6Parser.FRX_OFFSET);
            }
            this.state = 561;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 560;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 563;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while (_la === VisualBasic6Parser.NEWLINE);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    cp_PropertyName() {
        let localctx = new Cp_PropertyNameContext(this, this._ctx, this.state);
        this.enterRule(localctx, 34, VisualBasic6Parser.RULE_cp_PropertyName);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 567;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 49, this._ctx);
            if (la_ === 1) {
                this.state = 565;
                this.match(VisualBasic6Parser.OBJECT);
                this.state = 566;
                this.match(VisualBasic6Parser.DOT);
            }
            this.state = 569;
            this.ambiguousIdentifier();
            this.state = 574;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.LPAREN) {
                this.state = 570;
                this.match(VisualBasic6Parser.LPAREN);
                this.state = 571;
                this.literal();
                this.state = 572;
                this.match(VisualBasic6Parser.RPAREN);
            }
            this.state = 586;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while (_la === VisualBasic6Parser.DOT) {
                this.state = 576;
                this.match(VisualBasic6Parser.DOT);
                this.state = 577;
                this.ambiguousIdentifier();
                this.state = 582;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === VisualBasic6Parser.LPAREN) {
                    this.state = 578;
                    this.match(VisualBasic6Parser.LPAREN);
                    this.state = 579;
                    this.literal();
                    this.state = 580;
                    this.match(VisualBasic6Parser.RPAREN);
                }
                this.state = 588;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    cp_PropertyValue() {
        let localctx = new Cp_PropertyValueContext(this, this._ctx, this.state);
        this.enterRule(localctx, 36, VisualBasic6Parser.RULE_cp_PropertyValue);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 590;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.DOLLAR) {
                this.state = 589;
                this.match(VisualBasic6Parser.DOLLAR);
            }
            this.state = 599;
            this._errHandler.sync(this);
            switch (this._input.LA(1)) {
                case VisualBasic6Parser.FALSE:
                case VisualBasic6Parser.NOTHING:
                case VisualBasic6Parser.NULL_:
                case VisualBasic6Parser.TRUE:
                case VisualBasic6Parser.STRINGLITERAL:
                case VisualBasic6Parser.DATELITERAL:
                case VisualBasic6Parser.COLORLITERAL:
                case VisualBasic6Parser.INTEGERLITERAL:
                case VisualBasic6Parser.DOUBLELITERAL:
                case VisualBasic6Parser.FILENUMBER:
                case VisualBasic6Parser.OCTALLITERAL:
                    this.state = 592;
                    this.literal();
                    break;
                case VisualBasic6Parser.LBRACE:
                    this.state = 593;
                    this.match(VisualBasic6Parser.LBRACE);
                    this.state = 594;
                    this.ambiguousIdentifier();
                    this.state = 595;
                    this.match(VisualBasic6Parser.RBRACE);
                    break;
                case VisualBasic6Parser.POW:
                    this.state = 597;
                    this.match(VisualBasic6Parser.POW);
                    this.state = 598;
                    this.ambiguousIdentifier();
                    break;
                default:
                    throw new antlr4_1.default.error.NoViableAltException(this);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    cp_NestedProperty() {
        let localctx = new Cp_NestedPropertyContext(this, this._ctx, this.state);
        this.enterRule(localctx, 38, VisualBasic6Parser.RULE_cp_NestedProperty);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 602;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 601;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 604;
            this.match(VisualBasic6Parser.BEGINPROPERTY);
            this.state = 605;
            this.match(VisualBasic6Parser.WS);
            this.state = 606;
            this.ambiguousIdentifier();
            this.state = 610;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.LPAREN) {
                this.state = 607;
                this.match(VisualBasic6Parser.LPAREN);
                this.state = 608;
                this.match(VisualBasic6Parser.INTEGERLITERAL);
                this.state = 609;
                this.match(VisualBasic6Parser.RPAREN);
            }
            this.state = 614;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 612;
                this.match(VisualBasic6Parser.WS);
                this.state = 613;
                this.match(VisualBasic6Parser.GUID);
            }
            this.state = 617;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 616;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 619;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while (_la === VisualBasic6Parser.NEWLINE);
            this.state = 626;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BEGINPROPERTY) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFCUR - 32)) | (1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)))) !== 0) || ((((_la - 66)) & ~0x1f) == 0 && ((1 << (_la - 66)) & ((1 << (VisualBasic6Parser.FALSE - 66)) | (1 << (VisualBasic6Parser.FILECOPY - 66)) | (1 << (VisualBasic6Parser.FRIEND - 66)) | (1 << (VisualBasic6Parser.FOR - 66)) | (1 << (VisualBasic6Parser.FUNCTION - 66)) | (1 << (VisualBasic6Parser.GET - 66)) | (1 << (VisualBasic6Parser.GLOBAL - 66)) | (1 << (VisualBasic6Parser.GOSUB - 66)) | (1 << (VisualBasic6Parser.GOTO - 66)) | (1 << (VisualBasic6Parser.IF - 66)) | (1 << (VisualBasic6Parser.IMP - 66)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 66)) | (1 << (VisualBasic6Parser.IN - 66)) | (1 << (VisualBasic6Parser.INPUT - 66)) | (1 << (VisualBasic6Parser.IS - 66)) | (1 << (VisualBasic6Parser.INTEGER - 66)) | (1 << (VisualBasic6Parser.KILL - 66)) | (1 << (VisualBasic6Parser.LOAD - 66)) | (1 << (VisualBasic6Parser.LOCK - 66)) | (1 << (VisualBasic6Parser.LONG - 66)) | (1 << (VisualBasic6Parser.LOOP - 66)) | (1 << (VisualBasic6Parser.LEN - 66)) | (1 << (VisualBasic6Parser.LET - 66)) | (1 << (VisualBasic6Parser.LIB - 66)) | (1 << (VisualBasic6Parser.LIKE - 66)) | (1 << (VisualBasic6Parser.LSET - 66)))) !== 0) || ((((_la - 100)) & ~0x1f) == 0 && ((1 << (_la - 100)) & ((1 << (VisualBasic6Parser.ME - 100)) | (1 << (VisualBasic6Parser.MID - 100)) | (1 << (VisualBasic6Parser.MKDIR - 100)) | (1 << (VisualBasic6Parser.MOD - 100)) | (1 << (VisualBasic6Parser.NAME - 100)) | (1 << (VisualBasic6Parser.NEXT - 100)) | (1 << (VisualBasic6Parser.NEW - 100)) | (1 << (VisualBasic6Parser.NOT - 100)) | (1 << (VisualBasic6Parser.NOTHING - 100)) | (1 << (VisualBasic6Parser.NULL_ - 100)) | (1 << (VisualBasic6Parser.OBJECT - 100)) | (1 << (VisualBasic6Parser.ON - 100)) | (1 << (VisualBasic6Parser.OPEN - 100)) | (1 << (VisualBasic6Parser.OPTIONAL - 100)) | (1 << (VisualBasic6Parser.OR - 100)) | (1 << (VisualBasic6Parser.OUTPUT - 100)) | (1 << (VisualBasic6Parser.PARAMARRAY - 100)) | (1 << (VisualBasic6Parser.PRESERVE - 100)) | (1 << (VisualBasic6Parser.PRINT - 100)) | (1 << (VisualBasic6Parser.PRIVATE - 100)) | (1 << (VisualBasic6Parser.PUBLIC - 100)) | (1 << (VisualBasic6Parser.PUT - 100)) | (1 << (VisualBasic6Parser.RANDOM - 100)))) !== 0) || ((((_la - 132)) & ~0x1f) == 0 && ((1 << (_la - 132)) & ((1 << (VisualBasic6Parser.RANDOMIZE - 132)) | (1 << (VisualBasic6Parser.RAISEEVENT - 132)) | (1 << (VisualBasic6Parser.READ - 132)) | (1 << (VisualBasic6Parser.REDIM - 132)) | (1 << (VisualBasic6Parser.REM - 132)) | (1 << (VisualBasic6Parser.RESET - 132)) | (1 << (VisualBasic6Parser.RESUME - 132)) | (1 << (VisualBasic6Parser.RETURN - 132)) | (1 << (VisualBasic6Parser.RMDIR - 132)) | (1 << (VisualBasic6Parser.RSET - 132)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 132)) | (1 << (VisualBasic6Parser.SAVESETTING - 132)) | (1 << (VisualBasic6Parser.SEEK - 132)) | (1 << (VisualBasic6Parser.SELECT - 132)) | (1 << (VisualBasic6Parser.SENDKEYS - 132)) | (1 << (VisualBasic6Parser.SET - 132)) | (1 << (VisualBasic6Parser.SETATTR - 132)) | (1 << (VisualBasic6Parser.SHARED - 132)) | (1 << (VisualBasic6Parser.SINGLE - 132)) | (1 << (VisualBasic6Parser.SPC - 132)) | (1 << (VisualBasic6Parser.STATIC - 132)) | (1 << (VisualBasic6Parser.STEP - 132)) | (1 << (VisualBasic6Parser.STOP - 132)) | (1 << (VisualBasic6Parser.STRING - 132)) | (1 << (VisualBasic6Parser.SUB - 132)) | (1 << (VisualBasic6Parser.TAB - 132)) | (1 << (VisualBasic6Parser.TEXT - 132)) | (1 << (VisualBasic6Parser.THEN - 132)) | (1 << (VisualBasic6Parser.TIME - 132)) | (1 << (VisualBasic6Parser.TO - 132)) | (1 << (VisualBasic6Parser.TRUE - 132)))) !== 0) || ((((_la - 164)) & ~0x1f) == 0 && ((1 << (_la - 164)) & ((1 << (VisualBasic6Parser.TYPE - 164)) | (1 << (VisualBasic6Parser.TYPEOF - 164)) | (1 << (VisualBasic6Parser.UNLOAD - 164)) | (1 << (VisualBasic6Parser.UNLOCK - 164)) | (1 << (VisualBasic6Parser.UNTIL - 164)) | (1 << (VisualBasic6Parser.VARIANT - 164)) | (1 << (VisualBasic6Parser.VERSION - 164)) | (1 << (VisualBasic6Parser.WEND - 164)) | (1 << (VisualBasic6Parser.WHILE - 164)) | (1 << (VisualBasic6Parser.WIDTH - 164)) | (1 << (VisualBasic6Parser.WITH - 164)) | (1 << (VisualBasic6Parser.WITHEVENTS - 164)) | (1 << (VisualBasic6Parser.WRITE - 164)) | (1 << (VisualBasic6Parser.XOR - 164)) | (1 << (VisualBasic6Parser.DOT - 164)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 164)))) !== 0) || ((((_la - 207)) & ~0x1f) == 0 && ((1 << (_la - 207)) & ((1 << (VisualBasic6Parser.L_SQUARE_BRACKET - 207)) | (1 << (VisualBasic6Parser.IDENTIFIER - 207)) | (1 << (VisualBasic6Parser.WS - 207)))) !== 0)) {
                this.state = 622;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                do {
                    this.state = 621;
                    this.cp_Properties();
                    this.state = 624;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                } while ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BEGINPROPERTY) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFCUR - 32)) | (1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)))) !== 0) || ((((_la - 66)) & ~0x1f) == 0 && ((1 << (_la - 66)) & ((1 << (VisualBasic6Parser.FALSE - 66)) | (1 << (VisualBasic6Parser.FILECOPY - 66)) | (1 << (VisualBasic6Parser.FRIEND - 66)) | (1 << (VisualBasic6Parser.FOR - 66)) | (1 << (VisualBasic6Parser.FUNCTION - 66)) | (1 << (VisualBasic6Parser.GET - 66)) | (1 << (VisualBasic6Parser.GLOBAL - 66)) | (1 << (VisualBasic6Parser.GOSUB - 66)) | (1 << (VisualBasic6Parser.GOTO - 66)) | (1 << (VisualBasic6Parser.IF - 66)) | (1 << (VisualBasic6Parser.IMP - 66)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 66)) | (1 << (VisualBasic6Parser.IN - 66)) | (1 << (VisualBasic6Parser.INPUT - 66)) | (1 << (VisualBasic6Parser.IS - 66)) | (1 << (VisualBasic6Parser.INTEGER - 66)) | (1 << (VisualBasic6Parser.KILL - 66)) | (1 << (VisualBasic6Parser.LOAD - 66)) | (1 << (VisualBasic6Parser.LOCK - 66)) | (1 << (VisualBasic6Parser.LONG - 66)) | (1 << (VisualBasic6Parser.LOOP - 66)) | (1 << (VisualBasic6Parser.LEN - 66)) | (1 << (VisualBasic6Parser.LET - 66)) | (1 << (VisualBasic6Parser.LIB - 66)) | (1 << (VisualBasic6Parser.LIKE - 66)) | (1 << (VisualBasic6Parser.LSET - 66)))) !== 0) || ((((_la - 100)) & ~0x1f) == 0 && ((1 << (_la - 100)) & ((1 << (VisualBasic6Parser.ME - 100)) | (1 << (VisualBasic6Parser.MID - 100)) | (1 << (VisualBasic6Parser.MKDIR - 100)) | (1 << (VisualBasic6Parser.MOD - 100)) | (1 << (VisualBasic6Parser.NAME - 100)) | (1 << (VisualBasic6Parser.NEXT - 100)) | (1 << (VisualBasic6Parser.NEW - 100)) | (1 << (VisualBasic6Parser.NOT - 100)) | (1 << (VisualBasic6Parser.NOTHING - 100)) | (1 << (VisualBasic6Parser.NULL_ - 100)) | (1 << (VisualBasic6Parser.OBJECT - 100)) | (1 << (VisualBasic6Parser.ON - 100)) | (1 << (VisualBasic6Parser.OPEN - 100)) | (1 << (VisualBasic6Parser.OPTIONAL - 100)) | (1 << (VisualBasic6Parser.OR - 100)) | (1 << (VisualBasic6Parser.OUTPUT - 100)) | (1 << (VisualBasic6Parser.PARAMARRAY - 100)) | (1 << (VisualBasic6Parser.PRESERVE - 100)) | (1 << (VisualBasic6Parser.PRINT - 100)) | (1 << (VisualBasic6Parser.PRIVATE - 100)) | (1 << (VisualBasic6Parser.PUBLIC - 100)) | (1 << (VisualBasic6Parser.PUT - 100)) | (1 << (VisualBasic6Parser.RANDOM - 100)))) !== 0) || ((((_la - 132)) & ~0x1f) == 0 && ((1 << (_la - 132)) & ((1 << (VisualBasic6Parser.RANDOMIZE - 132)) | (1 << (VisualBasic6Parser.RAISEEVENT - 132)) | (1 << (VisualBasic6Parser.READ - 132)) | (1 << (VisualBasic6Parser.REDIM - 132)) | (1 << (VisualBasic6Parser.REM - 132)) | (1 << (VisualBasic6Parser.RESET - 132)) | (1 << (VisualBasic6Parser.RESUME - 132)) | (1 << (VisualBasic6Parser.RETURN - 132)) | (1 << (VisualBasic6Parser.RMDIR - 132)) | (1 << (VisualBasic6Parser.RSET - 132)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 132)) | (1 << (VisualBasic6Parser.SAVESETTING - 132)) | (1 << (VisualBasic6Parser.SEEK - 132)) | (1 << (VisualBasic6Parser.SELECT - 132)) | (1 << (VisualBasic6Parser.SENDKEYS - 132)) | (1 << (VisualBasic6Parser.SET - 132)) | (1 << (VisualBasic6Parser.SETATTR - 132)) | (1 << (VisualBasic6Parser.SHARED - 132)) | (1 << (VisualBasic6Parser.SINGLE - 132)) | (1 << (VisualBasic6Parser.SPC - 132)) | (1 << (VisualBasic6Parser.STATIC - 132)) | (1 << (VisualBasic6Parser.STEP - 132)) | (1 << (VisualBasic6Parser.STOP - 132)) | (1 << (VisualBasic6Parser.STRING - 132)) | (1 << (VisualBasic6Parser.SUB - 132)) | (1 << (VisualBasic6Parser.TAB - 132)) | (1 << (VisualBasic6Parser.TEXT - 132)) | (1 << (VisualBasic6Parser.THEN - 132)) | (1 << (VisualBasic6Parser.TIME - 132)) | (1 << (VisualBasic6Parser.TO - 132)) | (1 << (VisualBasic6Parser.TRUE - 132)))) !== 0) || ((((_la - 164)) & ~0x1f) == 0 && ((1 << (_la - 164)) & ((1 << (VisualBasic6Parser.TYPE - 164)) | (1 << (VisualBasic6Parser.TYPEOF - 164)) | (1 << (VisualBasic6Parser.UNLOAD - 164)) | (1 << (VisualBasic6Parser.UNLOCK - 164)) | (1 << (VisualBasic6Parser.UNTIL - 164)) | (1 << (VisualBasic6Parser.VARIANT - 164)) | (1 << (VisualBasic6Parser.VERSION - 164)) | (1 << (VisualBasic6Parser.WEND - 164)) | (1 << (VisualBasic6Parser.WHILE - 164)) | (1 << (VisualBasic6Parser.WIDTH - 164)) | (1 << (VisualBasic6Parser.WITH - 164)) | (1 << (VisualBasic6Parser.WITHEVENTS - 164)) | (1 << (VisualBasic6Parser.WRITE - 164)) | (1 << (VisualBasic6Parser.XOR - 164)) | (1 << (VisualBasic6Parser.DOT - 164)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 164)))) !== 0) || ((((_la - 207)) & ~0x1f) == 0 && ((1 << (_la - 207)) & ((1 << (VisualBasic6Parser.L_SQUARE_BRACKET - 207)) | (1 << (VisualBasic6Parser.IDENTIFIER - 207)) | (1 << (VisualBasic6Parser.WS - 207)))) !== 0));
            }
            this.state = 628;
            this.match(VisualBasic6Parser.ENDPROPERTY);
            this.state = 630;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 629;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 632;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while (_la === VisualBasic6Parser.NEWLINE);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    cp_ControlType() {
        let localctx = new Cp_ControlTypeContext(this, this._ctx, this.state);
        this.enterRule(localctx, 40, VisualBasic6Parser.RULE_cp_ControlType);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 634;
            this.complexType();
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    cp_ControlIdentifier() {
        let localctx = new Cp_ControlIdentifierContext(this, this._ctx, this.state);
        this.enterRule(localctx, 42, VisualBasic6Parser.RULE_cp_ControlIdentifier);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 636;
            this.ambiguousIdentifier();
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    moduleBlock() {
        let localctx = new ModuleBlockContext(this, this._ctx, this.state);
        this.enterRule(localctx, 44, VisualBasic6Parser.RULE_moduleBlock);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 638;
            this.block();
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    attributeStmt() {
        let localctx = new AttributeStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 46, VisualBasic6Parser.RULE_attributeStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 640;
            this.match(VisualBasic6Parser.ATTRIBUTE);
            this.state = 641;
            this.match(VisualBasic6Parser.WS);
            this.state = 642;
            this.implicitCallStmt_InStmt();
            this.state = 644;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 643;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 646;
            this.match(VisualBasic6Parser.EQ);
            this.state = 648;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 647;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 650;
            this.literal();
            this.state = 661;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input, 66, this._ctx);
            while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER) {
                if (_alt === 1) {
                    this.state = 652;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if (_la === VisualBasic6Parser.WS) {
                        this.state = 651;
                        this.match(VisualBasic6Parser.WS);
                    }
                    this.state = 654;
                    this.match(VisualBasic6Parser.COMMA);
                    this.state = 656;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if (_la === VisualBasic6Parser.WS) {
                        this.state = 655;
                        this.match(VisualBasic6Parser.WS);
                    }
                    this.state = 658;
                    this.literal();
                }
                this.state = 663;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input, 66, this._ctx);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    block() {
        let localctx = new BlockContext(this, this._ctx, this.state);
        this.enterRule(localctx, 48, VisualBasic6Parser.RULE_block);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 664;
            this.blockStmt();
            this.state = 676;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input, 69, this._ctx);
            while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER) {
                if (_alt === 1) {
                    this.state = 666;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    do {
                        this.state = 665;
                        this.match(VisualBasic6Parser.NEWLINE);
                        this.state = 668;
                        this._errHandler.sync(this);
                        _la = this._input.LA(1);
                    } while (_la === VisualBasic6Parser.NEWLINE);
                    this.state = 671;
                    this._errHandler.sync(this);
                    var la_ = this._interp.adaptivePredict(this._input, 68, this._ctx);
                    if (la_ === 1) {
                        this.state = 670;
                        this.match(VisualBasic6Parser.WS);
                    }
                    this.state = 673;
                    this.blockStmt();
                }
                this.state = 678;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input, 69, this._ctx);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    blockStmt() {
        let localctx = new BlockStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 50, VisualBasic6Parser.RULE_blockStmt);
        try {
            this.state = 746;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 70, this._ctx);
            switch (la_) {
                case 1:
                    this.enterOuterAlt(localctx, 1);
                    this.state = 679;
                    this.appActivateStmt();
                    break;
                case 2:
                    this.enterOuterAlt(localctx, 2);
                    this.state = 680;
                    this.attributeStmt();
                    break;
                case 3:
                    this.enterOuterAlt(localctx, 3);
                    this.state = 681;
                    this.beepStmt();
                    break;
                case 4:
                    this.enterOuterAlt(localctx, 4);
                    this.state = 682;
                    this.chDirStmt();
                    break;
                case 5:
                    this.enterOuterAlt(localctx, 5);
                    this.state = 683;
                    this.chDriveStmt();
                    break;
                case 6:
                    this.enterOuterAlt(localctx, 6);
                    this.state = 684;
                    this.closeStmt();
                    break;
                case 7:
                    this.enterOuterAlt(localctx, 7);
                    this.state = 685;
                    this.constStmt();
                    break;
                case 8:
                    this.enterOuterAlt(localctx, 8);
                    this.state = 686;
                    this.dateStmt();
                    break;
                case 9:
                    this.enterOuterAlt(localctx, 9);
                    this.state = 687;
                    this.deleteSettingStmt();
                    break;
                case 10:
                    this.enterOuterAlt(localctx, 10);
                    this.state = 688;
                    this.deftypeStmt();
                    break;
                case 11:
                    this.enterOuterAlt(localctx, 11);
                    this.state = 689;
                    this.doLoopStmt();
                    break;
                case 12:
                    this.enterOuterAlt(localctx, 12);
                    this.state = 690;
                    this.endStmt();
                    break;
                case 13:
                    this.enterOuterAlt(localctx, 13);
                    this.state = 691;
                    this.eraseStmt();
                    break;
                case 14:
                    this.enterOuterAlt(localctx, 14);
                    this.state = 692;
                    this.errorStmt();
                    break;
                case 15:
                    this.enterOuterAlt(localctx, 15);
                    this.state = 693;
                    this.exitStmt();
                    break;
                case 16:
                    this.enterOuterAlt(localctx, 16);
                    this.state = 694;
                    this.explicitCallStmt();
                    break;
                case 17:
                    this.enterOuterAlt(localctx, 17);
                    this.state = 695;
                    this.filecopyStmt();
                    break;
                case 18:
                    this.enterOuterAlt(localctx, 18);
                    this.state = 696;
                    this.forEachStmt();
                    break;
                case 19:
                    this.enterOuterAlt(localctx, 19);
                    this.state = 697;
                    this.forNextStmt();
                    break;
                case 20:
                    this.enterOuterAlt(localctx, 20);
                    this.state = 698;
                    this.getStmt();
                    break;
                case 21:
                    this.enterOuterAlt(localctx, 21);
                    this.state = 699;
                    this.goSubStmt();
                    break;
                case 22:
                    this.enterOuterAlt(localctx, 22);
                    this.state = 700;
                    this.goToStmt();
                    break;
                case 23:
                    this.enterOuterAlt(localctx, 23);
                    this.state = 701;
                    this.ifThenElseStmt();
                    break;
                case 24:
                    this.enterOuterAlt(localctx, 24);
                    this.state = 702;
                    this.implementsStmt();
                    break;
                case 25:
                    this.enterOuterAlt(localctx, 25);
                    this.state = 703;
                    this.inputStmt();
                    break;
                case 26:
                    this.enterOuterAlt(localctx, 26);
                    this.state = 704;
                    this.killStmt();
                    break;
                case 27:
                    this.enterOuterAlt(localctx, 27);
                    this.state = 705;
                    this.letStmt();
                    break;
                case 28:
                    this.enterOuterAlt(localctx, 28);
                    this.state = 706;
                    this.lineInputStmt();
                    break;
                case 29:
                    this.enterOuterAlt(localctx, 29);
                    this.state = 707;
                    this.lineLabel();
                    break;
                case 30:
                    this.enterOuterAlt(localctx, 30);
                    this.state = 708;
                    this.loadStmt();
                    break;
                case 31:
                    this.enterOuterAlt(localctx, 31);
                    this.state = 709;
                    this.lockStmt();
                    break;
                case 32:
                    this.enterOuterAlt(localctx, 32);
                    this.state = 710;
                    this.lsetStmt();
                    break;
                case 33:
                    this.enterOuterAlt(localctx, 33);
                    this.state = 711;
                    this.macroIfThenElseStmt();
                    break;
                case 34:
                    this.enterOuterAlt(localctx, 34);
                    this.state = 712;
                    this.midStmt();
                    break;
                case 35:
                    this.enterOuterAlt(localctx, 35);
                    this.state = 713;
                    this.mkdirStmt();
                    break;
                case 36:
                    this.enterOuterAlt(localctx, 36);
                    this.state = 714;
                    this.nameStmt();
                    break;
                case 37:
                    this.enterOuterAlt(localctx, 37);
                    this.state = 715;
                    this.onErrorStmt();
                    break;
                case 38:
                    this.enterOuterAlt(localctx, 38);
                    this.state = 716;
                    this.onGoToStmt();
                    break;
                case 39:
                    this.enterOuterAlt(localctx, 39);
                    this.state = 717;
                    this.onGoSubStmt();
                    break;
                case 40:
                    this.enterOuterAlt(localctx, 40);
                    this.state = 718;
                    this.openStmt();
                    break;
                case 41:
                    this.enterOuterAlt(localctx, 41);
                    this.state = 719;
                    this.printStmt();
                    break;
                case 42:
                    this.enterOuterAlt(localctx, 42);
                    this.state = 720;
                    this.putStmt();
                    break;
                case 43:
                    this.enterOuterAlt(localctx, 43);
                    this.state = 721;
                    this.raiseEventStmt();
                    break;
                case 44:
                    this.enterOuterAlt(localctx, 44);
                    this.state = 722;
                    this.randomizeStmt();
                    break;
                case 45:
                    this.enterOuterAlt(localctx, 45);
                    this.state = 723;
                    this.redimStmt();
                    break;
                case 46:
                    this.enterOuterAlt(localctx, 46);
                    this.state = 724;
                    this.resetStmt();
                    break;
                case 47:
                    this.enterOuterAlt(localctx, 47);
                    this.state = 725;
                    this.resumeStmt();
                    break;
                case 48:
                    this.enterOuterAlt(localctx, 48);
                    this.state = 726;
                    this.returnStmt();
                    break;
                case 49:
                    this.enterOuterAlt(localctx, 49);
                    this.state = 727;
                    this.rmdirStmt();
                    break;
                case 50:
                    this.enterOuterAlt(localctx, 50);
                    this.state = 728;
                    this.rsetStmt();
                    break;
                case 51:
                    this.enterOuterAlt(localctx, 51);
                    this.state = 729;
                    this.savepictureStmt();
                    break;
                case 52:
                    this.enterOuterAlt(localctx, 52);
                    this.state = 730;
                    this.saveSettingStmt();
                    break;
                case 53:
                    this.enterOuterAlt(localctx, 53);
                    this.state = 731;
                    this.seekStmt();
                    break;
                case 54:
                    this.enterOuterAlt(localctx, 54);
                    this.state = 732;
                    this.selectCaseStmt();
                    break;
                case 55:
                    this.enterOuterAlt(localctx, 55);
                    this.state = 733;
                    this.sendkeysStmt();
                    break;
                case 56:
                    this.enterOuterAlt(localctx, 56);
                    this.state = 734;
                    this.setattrStmt();
                    break;
                case 57:
                    this.enterOuterAlt(localctx, 57);
                    this.state = 735;
                    this.setStmt();
                    break;
                case 58:
                    this.enterOuterAlt(localctx, 58);
                    this.state = 736;
                    this.stopStmt();
                    break;
                case 59:
                    this.enterOuterAlt(localctx, 59);
                    this.state = 737;
                    this.timeStmt();
                    break;
                case 60:
                    this.enterOuterAlt(localctx, 60);
                    this.state = 738;
                    this.unloadStmt();
                    break;
                case 61:
                    this.enterOuterAlt(localctx, 61);
                    this.state = 739;
                    this.unlockStmt();
                    break;
                case 62:
                    this.enterOuterAlt(localctx, 62);
                    this.state = 740;
                    this.variableStmt();
                    break;
                case 63:
                    this.enterOuterAlt(localctx, 63);
                    this.state = 741;
                    this.whileWendStmt();
                    break;
                case 64:
                    this.enterOuterAlt(localctx, 64);
                    this.state = 742;
                    this.widthStmt();
                    break;
                case 65:
                    this.enterOuterAlt(localctx, 65);
                    this.state = 743;
                    this.withStmt();
                    break;
                case 66:
                    this.enterOuterAlt(localctx, 66);
                    this.state = 744;
                    this.writeStmt();
                    break;
                case 67:
                    this.enterOuterAlt(localctx, 67);
                    this.state = 745;
                    this.implicitCallStmt_InBlock();
                    break;
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    appActivateStmt() {
        let localctx = new AppActivateStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 52, VisualBasic6Parser.RULE_appActivateStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 748;
            this.match(VisualBasic6Parser.APPACTIVATE);
            this.state = 749;
            this.match(VisualBasic6Parser.WS);
            this.state = 750;
            this.valueStmt(0);
            this.state = 759;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 73, this._ctx);
            if (la_ === 1) {
                this.state = 752;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === VisualBasic6Parser.WS) {
                    this.state = 751;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 754;
                this.match(VisualBasic6Parser.COMMA);
                this.state = 756;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 72, this._ctx);
                if (la_ === 1) {
                    this.state = 755;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 758;
                this.valueStmt(0);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    beepStmt() {
        let localctx = new BeepStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 54, VisualBasic6Parser.RULE_beepStmt);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 761;
            this.match(VisualBasic6Parser.BEEP);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    chDirStmt() {
        let localctx = new ChDirStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 56, VisualBasic6Parser.RULE_chDirStmt);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 763;
            this.match(VisualBasic6Parser.CHDIR);
            this.state = 764;
            this.match(VisualBasic6Parser.WS);
            this.state = 765;
            this.valueStmt(0);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    chDriveStmt() {
        let localctx = new ChDriveStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 58, VisualBasic6Parser.RULE_chDriveStmt);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 767;
            this.match(VisualBasic6Parser.CHDRIVE);
            this.state = 768;
            this.match(VisualBasic6Parser.WS);
            this.state = 769;
            this.valueStmt(0);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    closeStmt() {
        let localctx = new CloseStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 60, VisualBasic6Parser.RULE_closeStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 771;
            this.match(VisualBasic6Parser.CLOSE);
            this.state = 787;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 77, this._ctx);
            if (la_ === 1) {
                this.state = 772;
                this.match(VisualBasic6Parser.WS);
                this.state = 773;
                this.valueStmt(0);
                this.state = 784;
                this._errHandler.sync(this);
                var _alt = this._interp.adaptivePredict(this._input, 76, this._ctx);
                while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER) {
                    if (_alt === 1) {
                        this.state = 775;
                        this._errHandler.sync(this);
                        _la = this._input.LA(1);
                        if (_la === VisualBasic6Parser.WS) {
                            this.state = 774;
                            this.match(VisualBasic6Parser.WS);
                        }
                        this.state = 777;
                        this.match(VisualBasic6Parser.COMMA);
                        this.state = 779;
                        this._errHandler.sync(this);
                        var la_ = this._interp.adaptivePredict(this._input, 75, this._ctx);
                        if (la_ === 1) {
                            this.state = 778;
                            this.match(VisualBasic6Parser.WS);
                        }
                        this.state = 781;
                        this.valueStmt(0);
                    }
                    this.state = 786;
                    this._errHandler.sync(this);
                    _alt = this._interp.adaptivePredict(this._input, 76, this._ctx);
                }
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    constStmt() {
        let localctx = new ConstStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 62, VisualBasic6Parser.RULE_constStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 792;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.GLOBAL || _la === VisualBasic6Parser.PRIVATE || _la === VisualBasic6Parser.PUBLIC) {
                this.state = 789;
                this.publicPrivateGlobalVisibility();
                this.state = 790;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 794;
            this.match(VisualBasic6Parser.CONST);
            this.state = 795;
            this.match(VisualBasic6Parser.WS);
            this.state = 796;
            this.constSubStmt();
            this.state = 807;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input, 81, this._ctx);
            while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER) {
                if (_alt === 1) {
                    this.state = 798;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if (_la === VisualBasic6Parser.WS) {
                        this.state = 797;
                        this.match(VisualBasic6Parser.WS);
                    }
                    this.state = 800;
                    this.match(VisualBasic6Parser.COMMA);
                    this.state = 802;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if (_la === VisualBasic6Parser.WS) {
                        this.state = 801;
                        this.match(VisualBasic6Parser.WS);
                    }
                    this.state = 804;
                    this.constSubStmt();
                }
                this.state = 809;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input, 81, this._ctx);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    constSubStmt() {
        let localctx = new ConstSubStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 64, VisualBasic6Parser.RULE_constSubStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 810;
            this.ambiguousIdentifier();
            this.state = 812;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (((((_la - 178)) & ~0x1f) == 0 && ((1 << (_la - 178)) & ((1 << (VisualBasic6Parser.AMPERSAND - 178)) | (1 << (VisualBasic6Parser.AT - 178)) | (1 << (VisualBasic6Parser.DOLLAR - 178)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 178)) | (1 << (VisualBasic6Parser.HASH - 178)) | (1 << (VisualBasic6Parser.PERCENT - 178)))) !== 0)) {
                this.state = 811;
                this.typeHint();
            }
            this.state = 816;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 83, this._ctx);
            if (la_ === 1) {
                this.state = 814;
                this.match(VisualBasic6Parser.WS);
                this.state = 815;
                this.asTypeClause();
            }
            this.state = 819;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 818;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 821;
            this.match(VisualBasic6Parser.EQ);
            this.state = 823;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 85, this._ctx);
            if (la_ === 1) {
                this.state = 822;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 825;
            this.valueStmt(0);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    dateStmt() {
        let localctx = new DateStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 66, VisualBasic6Parser.RULE_dateStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 827;
            this.match(VisualBasic6Parser.DATE);
            this.state = 829;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 828;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 831;
            this.match(VisualBasic6Parser.EQ);
            this.state = 833;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 87, this._ctx);
            if (la_ === 1) {
                this.state = 832;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 835;
            this.valueStmt(0);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    declareStmt() {
        let localctx = new DeclareStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 68, VisualBasic6Parser.RULE_declareStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 840;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.FRIEND || _la === VisualBasic6Parser.GLOBAL || _la === VisualBasic6Parser.PRIVATE || _la === VisualBasic6Parser.PUBLIC) {
                this.state = 837;
                this.visibility();
                this.state = 838;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 842;
            this.match(VisualBasic6Parser.DECLARE);
            this.state = 843;
            this.match(VisualBasic6Parser.WS);
            this.state = 849;
            this._errHandler.sync(this);
            switch (this._input.LA(1)) {
                case VisualBasic6Parser.FUNCTION:
                    this.state = 844;
                    this.match(VisualBasic6Parser.FUNCTION);
                    this.state = 846;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if (((((_la - 178)) & ~0x1f) == 0 && ((1 << (_la - 178)) & ((1 << (VisualBasic6Parser.AMPERSAND - 178)) | (1 << (VisualBasic6Parser.AT - 178)) | (1 << (VisualBasic6Parser.DOLLAR - 178)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 178)) | (1 << (VisualBasic6Parser.HASH - 178)) | (1 << (VisualBasic6Parser.PERCENT - 178)))) !== 0)) {
                        this.state = 845;
                        this.typeHint();
                    }
                    break;
                case VisualBasic6Parser.SUB:
                    this.state = 848;
                    this.match(VisualBasic6Parser.SUB);
                    break;
                default:
                    throw new antlr4_1.default.error.NoViableAltException(this);
            }
            this.state = 851;
            this.match(VisualBasic6Parser.WS);
            this.state = 852;
            this.ambiguousIdentifier();
            this.state = 854;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (((((_la - 178)) & ~0x1f) == 0 && ((1 << (_la - 178)) & ((1 << (VisualBasic6Parser.AMPERSAND - 178)) | (1 << (VisualBasic6Parser.AT - 178)) | (1 << (VisualBasic6Parser.DOLLAR - 178)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 178)) | (1 << (VisualBasic6Parser.HASH - 178)) | (1 << (VisualBasic6Parser.PERCENT - 178)))) !== 0)) {
                this.state = 853;
                this.typeHint();
            }
            this.state = 856;
            this.match(VisualBasic6Parser.WS);
            this.state = 857;
            this.match(VisualBasic6Parser.LIB);
            this.state = 858;
            this.match(VisualBasic6Parser.WS);
            this.state = 859;
            this.match(VisualBasic6Parser.STRINGLITERAL);
            this.state = 864;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 92, this._ctx);
            if (la_ === 1) {
                this.state = 860;
                this.match(VisualBasic6Parser.WS);
                this.state = 861;
                this.match(VisualBasic6Parser.ALIAS);
                this.state = 862;
                this.match(VisualBasic6Parser.WS);
                this.state = 863;
                this.match(VisualBasic6Parser.STRINGLITERAL);
            }
            this.state = 870;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 94, this._ctx);
            if (la_ === 1) {
                this.state = 867;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === VisualBasic6Parser.WS) {
                    this.state = 866;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 869;
                this.argList();
            }
            this.state = 874;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 95, this._ctx);
            if (la_ === 1) {
                this.state = 872;
                this.match(VisualBasic6Parser.WS);
                this.state = 873;
                this.asTypeClause();
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    deftypeStmt() {
        let localctx = new DeftypeStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 70, VisualBasic6Parser.RULE_deftypeStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 876;
            _la = this._input.LA(1);
            if (!(((((_la - 27)) & ~0x1f) == 0 && ((1 << (_la - 27)) & ((1 << (VisualBasic6Parser.DEFBOOL - 27)) | (1 << (VisualBasic6Parser.DEFBYTE - 27)) | (1 << (VisualBasic6Parser.DEFDATE - 27)) | (1 << (VisualBasic6Parser.DEFDBL - 27)) | (1 << (VisualBasic6Parser.DEFDEC - 27)) | (1 << (VisualBasic6Parser.DEFCUR - 27)) | (1 << (VisualBasic6Parser.DEFINT - 27)) | (1 << (VisualBasic6Parser.DEFLNG - 27)) | (1 << (VisualBasic6Parser.DEFOBJ - 27)) | (1 << (VisualBasic6Parser.DEFSNG - 27)) | (1 << (VisualBasic6Parser.DEFSTR - 27)) | (1 << (VisualBasic6Parser.DEFVAR - 27)))) !== 0))) {
                this._errHandler.recoverInline(this);
            }
            else {
                this._errHandler.reportMatch(this);
                this.consume();
            }
            this.state = 877;
            this.match(VisualBasic6Parser.WS);
            this.state = 878;
            this.letterrange();
            this.state = 889;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input, 98, this._ctx);
            while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER) {
                if (_alt === 1) {
                    this.state = 880;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if (_la === VisualBasic6Parser.WS) {
                        this.state = 879;
                        this.match(VisualBasic6Parser.WS);
                    }
                    this.state = 882;
                    this.match(VisualBasic6Parser.COMMA);
                    this.state = 884;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if (_la === VisualBasic6Parser.WS) {
                        this.state = 883;
                        this.match(VisualBasic6Parser.WS);
                    }
                    this.state = 886;
                    this.letterrange();
                }
                this.state = 891;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input, 98, this._ctx);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    deleteSettingStmt() {
        let localctx = new DeleteSettingStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 72, VisualBasic6Parser.RULE_deleteSettingStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 892;
            this.match(VisualBasic6Parser.DELETESETTING);
            this.state = 893;
            this.match(VisualBasic6Parser.WS);
            this.state = 894;
            this.valueStmt(0);
            this.state = 896;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 895;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 898;
            this.match(VisualBasic6Parser.COMMA);
            this.state = 900;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 100, this._ctx);
            if (la_ === 1) {
                this.state = 899;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 902;
            this.valueStmt(0);
            this.state = 911;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 103, this._ctx);
            if (la_ === 1) {
                this.state = 904;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === VisualBasic6Parser.WS) {
                    this.state = 903;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 906;
                this.match(VisualBasic6Parser.COMMA);
                this.state = 908;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 102, this._ctx);
                if (la_ === 1) {
                    this.state = 907;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 910;
                this.valueStmt(0);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    doLoopStmt() {
        let localctx = new DoLoopStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 74, VisualBasic6Parser.RULE_doLoopStmt);
        var _la = 0;
        try {
            this.state = 966;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 112, this._ctx);
            switch (la_) {
                case 1:
                    this.enterOuterAlt(localctx, 1);
                    this.state = 913;
                    this.match(VisualBasic6Parser.DO);
                    this.state = 915;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    do {
                        this.state = 914;
                        this.match(VisualBasic6Parser.NEWLINE);
                        this.state = 917;
                        this._errHandler.sync(this);
                        _la = this._input.LA(1);
                    } while (_la === VisualBasic6Parser.NEWLINE);
                    this.state = 925;
                    this._errHandler.sync(this);
                    var la_ = this._interp.adaptivePredict(this._input, 106, this._ctx);
                    if (la_ === 1) {
                        this.state = 919;
                        this.block();
                        this.state = 921;
                        this._errHandler.sync(this);
                        _la = this._input.LA(1);
                        do {
                            this.state = 920;
                            this.match(VisualBasic6Parser.NEWLINE);
                            this.state = 923;
                            this._errHandler.sync(this);
                            _la = this._input.LA(1);
                        } while (_la === VisualBasic6Parser.NEWLINE);
                    }
                    this.state = 927;
                    this.match(VisualBasic6Parser.LOOP);
                    break;
                case 2:
                    this.enterOuterAlt(localctx, 2);
                    this.state = 928;
                    this.match(VisualBasic6Parser.DO);
                    this.state = 929;
                    this.match(VisualBasic6Parser.WS);
                    this.state = 930;
                    _la = this._input.LA(1);
                    if (!(_la === VisualBasic6Parser.UNTIL || _la === VisualBasic6Parser.WHILE)) {
                        this._errHandler.recoverInline(this);
                    }
                    else {
                        this._errHandler.reportMatch(this);
                        this.consume();
                    }
                    this.state = 931;
                    this.match(VisualBasic6Parser.WS);
                    this.state = 932;
                    this.valueStmt(0);
                    this.state = 934;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    do {
                        this.state = 933;
                        this.match(VisualBasic6Parser.NEWLINE);
                        this.state = 936;
                        this._errHandler.sync(this);
                        _la = this._input.LA(1);
                    } while (_la === VisualBasic6Parser.NEWLINE);
                    this.state = 944;
                    this._errHandler.sync(this);
                    var la_ = this._interp.adaptivePredict(this._input, 109, this._ctx);
                    if (la_ === 1) {
                        this.state = 938;
                        this.block();
                        this.state = 940;
                        this._errHandler.sync(this);
                        _la = this._input.LA(1);
                        do {
                            this.state = 939;
                            this.match(VisualBasic6Parser.NEWLINE);
                            this.state = 942;
                            this._errHandler.sync(this);
                            _la = this._input.LA(1);
                        } while (_la === VisualBasic6Parser.NEWLINE);
                    }
                    this.state = 946;
                    this.match(VisualBasic6Parser.LOOP);
                    break;
                case 3:
                    this.enterOuterAlt(localctx, 3);
                    this.state = 948;
                    this.match(VisualBasic6Parser.DO);
                    this.state = 950;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    do {
                        this.state = 949;
                        this.match(VisualBasic6Parser.NEWLINE);
                        this.state = 952;
                        this._errHandler.sync(this);
                        _la = this._input.LA(1);
                    } while (_la === VisualBasic6Parser.NEWLINE);
                    this.state = 954;
                    this.block();
                    this.state = 956;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    do {
                        this.state = 955;
                        this.match(VisualBasic6Parser.NEWLINE);
                        this.state = 958;
                        this._errHandler.sync(this);
                        _la = this._input.LA(1);
                    } while (_la === VisualBasic6Parser.NEWLINE);
                    this.state = 960;
                    this.match(VisualBasic6Parser.LOOP);
                    this.state = 961;
                    this.match(VisualBasic6Parser.WS);
                    this.state = 962;
                    _la = this._input.LA(1);
                    if (!(_la === VisualBasic6Parser.UNTIL || _la === VisualBasic6Parser.WHILE)) {
                        this._errHandler.recoverInline(this);
                    }
                    else {
                        this._errHandler.reportMatch(this);
                        this.consume();
                    }
                    this.state = 963;
                    this.match(VisualBasic6Parser.WS);
                    this.state = 964;
                    this.valueStmt(0);
                    break;
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    endStmt() {
        let localctx = new EndStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 76, VisualBasic6Parser.RULE_endStmt);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 968;
            this.match(VisualBasic6Parser.END);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    enumerationStmt() {
        let localctx = new EnumerationStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 78, VisualBasic6Parser.RULE_enumerationStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 973;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.PRIVATE || _la === VisualBasic6Parser.PUBLIC) {
                this.state = 970;
                this.publicPrivateVisibility();
                this.state = 971;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 975;
            this.match(VisualBasic6Parser.ENUM);
            this.state = 976;
            this.match(VisualBasic6Parser.WS);
            this.state = 977;
            this.ambiguousIdentifier();
            this.state = 979;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 978;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 981;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while (_la === VisualBasic6Parser.NEWLINE);
            this.state = 986;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFCUR - 32)) | (1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)))) !== 0) || ((((_la - 66)) & ~0x1f) == 0 && ((1 << (_la - 66)) & ((1 << (VisualBasic6Parser.FALSE - 66)) | (1 << (VisualBasic6Parser.FILECOPY - 66)) | (1 << (VisualBasic6Parser.FRIEND - 66)) | (1 << (VisualBasic6Parser.FOR - 66)) | (1 << (VisualBasic6Parser.FUNCTION - 66)) | (1 << (VisualBasic6Parser.GET - 66)) | (1 << (VisualBasic6Parser.GLOBAL - 66)) | (1 << (VisualBasic6Parser.GOSUB - 66)) | (1 << (VisualBasic6Parser.GOTO - 66)) | (1 << (VisualBasic6Parser.IF - 66)) | (1 << (VisualBasic6Parser.IMP - 66)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 66)) | (1 << (VisualBasic6Parser.IN - 66)) | (1 << (VisualBasic6Parser.INPUT - 66)) | (1 << (VisualBasic6Parser.IS - 66)) | (1 << (VisualBasic6Parser.INTEGER - 66)) | (1 << (VisualBasic6Parser.KILL - 66)) | (1 << (VisualBasic6Parser.LOAD - 66)) | (1 << (VisualBasic6Parser.LOCK - 66)) | (1 << (VisualBasic6Parser.LONG - 66)) | (1 << (VisualBasic6Parser.LOOP - 66)) | (1 << (VisualBasic6Parser.LEN - 66)) | (1 << (VisualBasic6Parser.LET - 66)) | (1 << (VisualBasic6Parser.LIB - 66)) | (1 << (VisualBasic6Parser.LIKE - 66)) | (1 << (VisualBasic6Parser.LSET - 66)))) !== 0) || ((((_la - 100)) & ~0x1f) == 0 && ((1 << (_la - 100)) & ((1 << (VisualBasic6Parser.ME - 100)) | (1 << (VisualBasic6Parser.MID - 100)) | (1 << (VisualBasic6Parser.MKDIR - 100)) | (1 << (VisualBasic6Parser.MOD - 100)) | (1 << (VisualBasic6Parser.NAME - 100)) | (1 << (VisualBasic6Parser.NEXT - 100)) | (1 << (VisualBasic6Parser.NEW - 100)) | (1 << (VisualBasic6Parser.NOT - 100)) | (1 << (VisualBasic6Parser.NOTHING - 100)) | (1 << (VisualBasic6Parser.NULL_ - 100)) | (1 << (VisualBasic6Parser.OBJECT - 100)) | (1 << (VisualBasic6Parser.ON - 100)) | (1 << (VisualBasic6Parser.OPEN - 100)) | (1 << (VisualBasic6Parser.OPTIONAL - 100)) | (1 << (VisualBasic6Parser.OR - 100)) | (1 << (VisualBasic6Parser.OUTPUT - 100)) | (1 << (VisualBasic6Parser.PARAMARRAY - 100)) | (1 << (VisualBasic6Parser.PRESERVE - 100)) | (1 << (VisualBasic6Parser.PRINT - 100)) | (1 << (VisualBasic6Parser.PRIVATE - 100)) | (1 << (VisualBasic6Parser.PUBLIC - 100)) | (1 << (VisualBasic6Parser.PUT - 100)) | (1 << (VisualBasic6Parser.RANDOM - 100)))) !== 0) || ((((_la - 132)) & ~0x1f) == 0 && ((1 << (_la - 132)) & ((1 << (VisualBasic6Parser.RANDOMIZE - 132)) | (1 << (VisualBasic6Parser.RAISEEVENT - 132)) | (1 << (VisualBasic6Parser.READ - 132)) | (1 << (VisualBasic6Parser.REDIM - 132)) | (1 << (VisualBasic6Parser.REM - 132)) | (1 << (VisualBasic6Parser.RESET - 132)) | (1 << (VisualBasic6Parser.RESUME - 132)) | (1 << (VisualBasic6Parser.RETURN - 132)) | (1 << (VisualBasic6Parser.RMDIR - 132)) | (1 << (VisualBasic6Parser.RSET - 132)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 132)) | (1 << (VisualBasic6Parser.SAVESETTING - 132)) | (1 << (VisualBasic6Parser.SEEK - 132)) | (1 << (VisualBasic6Parser.SELECT - 132)) | (1 << (VisualBasic6Parser.SENDKEYS - 132)) | (1 << (VisualBasic6Parser.SET - 132)) | (1 << (VisualBasic6Parser.SETATTR - 132)) | (1 << (VisualBasic6Parser.SHARED - 132)) | (1 << (VisualBasic6Parser.SINGLE - 132)) | (1 << (VisualBasic6Parser.SPC - 132)) | (1 << (VisualBasic6Parser.STATIC - 132)) | (1 << (VisualBasic6Parser.STEP - 132)) | (1 << (VisualBasic6Parser.STOP - 132)) | (1 << (VisualBasic6Parser.STRING - 132)) | (1 << (VisualBasic6Parser.SUB - 132)) | (1 << (VisualBasic6Parser.TAB - 132)) | (1 << (VisualBasic6Parser.TEXT - 132)) | (1 << (VisualBasic6Parser.THEN - 132)) | (1 << (VisualBasic6Parser.TIME - 132)) | (1 << (VisualBasic6Parser.TO - 132)) | (1 << (VisualBasic6Parser.TRUE - 132)))) !== 0) || ((((_la - 164)) & ~0x1f) == 0 && ((1 << (_la - 164)) & ((1 << (VisualBasic6Parser.TYPE - 164)) | (1 << (VisualBasic6Parser.TYPEOF - 164)) | (1 << (VisualBasic6Parser.UNLOAD - 164)) | (1 << (VisualBasic6Parser.UNLOCK - 164)) | (1 << (VisualBasic6Parser.UNTIL - 164)) | (1 << (VisualBasic6Parser.VARIANT - 164)) | (1 << (VisualBasic6Parser.VERSION - 164)) | (1 << (VisualBasic6Parser.WEND - 164)) | (1 << (VisualBasic6Parser.WHILE - 164)) | (1 << (VisualBasic6Parser.WIDTH - 164)) | (1 << (VisualBasic6Parser.WITH - 164)) | (1 << (VisualBasic6Parser.WITHEVENTS - 164)) | (1 << (VisualBasic6Parser.WRITE - 164)) | (1 << (VisualBasic6Parser.XOR - 164)))) !== 0) || _la === VisualBasic6Parser.L_SQUARE_BRACKET || _la === VisualBasic6Parser.IDENTIFIER) {
                this.state = 983;
                this.enumerationStmt_Constant();
                this.state = 988;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            this.state = 989;
            this.match(VisualBasic6Parser.END_ENUM);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    enumerationStmt_Constant() {
        let localctx = new EnumerationStmt_ConstantContext(this, this._ctx, this.state);
        this.enterRule(localctx, 80, VisualBasic6Parser.RULE_enumerationStmt_Constant);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 991;
            this.ambiguousIdentifier();
            this.state = 1000;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.EQ || _la === VisualBasic6Parser.WS) {
                this.state = 993;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === VisualBasic6Parser.WS) {
                    this.state = 992;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 995;
                this.match(VisualBasic6Parser.EQ);
                this.state = 997;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 117, this._ctx);
                if (la_ === 1) {
                    this.state = 996;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 999;
                this.valueStmt(0);
            }
            this.state = 1003;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 1002;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 1005;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while (_la === VisualBasic6Parser.NEWLINE);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    eraseStmt() {
        let localctx = new EraseStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 82, VisualBasic6Parser.RULE_eraseStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1007;
            this.match(VisualBasic6Parser.ERASE);
            this.state = 1008;
            this.match(VisualBasic6Parser.WS);
            this.state = 1009;
            this.valueStmt(0);
            this.state = 1020;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input, 122, this._ctx);
            while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER) {
                if (_alt === 1) {
                    this.state = 1011;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if (_la === VisualBasic6Parser.WS) {
                        this.state = 1010;
                        this.match(VisualBasic6Parser.WS);
                    }
                    this.state = 1013;
                    this.match(VisualBasic6Parser.COMMA);
                    this.state = 1015;
                    this._errHandler.sync(this);
                    var la_ = this._interp.adaptivePredict(this._input, 121, this._ctx);
                    if (la_ === 1) {
                        this.state = 1014;
                        this.match(VisualBasic6Parser.WS);
                    }
                    this.state = 1017;
                    this.valueStmt(0);
                }
                this.state = 1022;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input, 122, this._ctx);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    errorStmt() {
        let localctx = new ErrorStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 84, VisualBasic6Parser.RULE_errorStmt);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1023;
            this.match(VisualBasic6Parser.ERROR);
            this.state = 1024;
            this.match(VisualBasic6Parser.WS);
            this.state = 1025;
            this.valueStmt(0);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    eventStmt() {
        let localctx = new EventStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 86, VisualBasic6Parser.RULE_eventStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1030;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.FRIEND || _la === VisualBasic6Parser.GLOBAL || _la === VisualBasic6Parser.PRIVATE || _la === VisualBasic6Parser.PUBLIC) {
                this.state = 1027;
                this.visibility();
                this.state = 1028;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1032;
            this.match(VisualBasic6Parser.EVENT);
            this.state = 1033;
            this.match(VisualBasic6Parser.WS);
            this.state = 1034;
            this.ambiguousIdentifier();
            this.state = 1036;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 1035;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1038;
            this.argList();
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    exitStmt() {
        let localctx = new ExitStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 88, VisualBasic6Parser.RULE_exitStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1040;
            _la = this._input.LA(1);
            if (!(((((_la - 61)) & ~0x1f) == 0 && ((1 << (_la - 61)) & ((1 << (VisualBasic6Parser.EXIT_DO - 61)) | (1 << (VisualBasic6Parser.EXIT_FOR - 61)) | (1 << (VisualBasic6Parser.EXIT_FUNCTION - 61)) | (1 << (VisualBasic6Parser.EXIT_PROPERTY - 61)) | (1 << (VisualBasic6Parser.EXIT_SUB - 61)))) !== 0))) {
                this._errHandler.recoverInline(this);
            }
            else {
                this._errHandler.reportMatch(this);
                this.consume();
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    filecopyStmt() {
        let localctx = new FilecopyStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 90, VisualBasic6Parser.RULE_filecopyStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1042;
            this.match(VisualBasic6Parser.FILECOPY);
            this.state = 1043;
            this.match(VisualBasic6Parser.WS);
            this.state = 1044;
            this.valueStmt(0);
            this.state = 1046;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 1045;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1048;
            this.match(VisualBasic6Parser.COMMA);
            this.state = 1050;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 126, this._ctx);
            if (la_ === 1) {
                this.state = 1049;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1052;
            this.valueStmt(0);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    forEachStmt() {
        let localctx = new ForEachStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 92, VisualBasic6Parser.RULE_forEachStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1054;
            this.match(VisualBasic6Parser.FOR);
            this.state = 1055;
            this.match(VisualBasic6Parser.WS);
            this.state = 1056;
            this.match(VisualBasic6Parser.EACH);
            this.state = 1057;
            this.match(VisualBasic6Parser.WS);
            this.state = 1058;
            this.ambiguousIdentifier();
            this.state = 1060;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (((((_la - 178)) & ~0x1f) == 0 && ((1 << (_la - 178)) & ((1 << (VisualBasic6Parser.AMPERSAND - 178)) | (1 << (VisualBasic6Parser.AT - 178)) | (1 << (VisualBasic6Parser.DOLLAR - 178)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 178)) | (1 << (VisualBasic6Parser.HASH - 178)) | (1 << (VisualBasic6Parser.PERCENT - 178)))) !== 0)) {
                this.state = 1059;
                this.typeHint();
            }
            this.state = 1062;
            this.match(VisualBasic6Parser.WS);
            this.state = 1063;
            this.match(VisualBasic6Parser.IN);
            this.state = 1064;
            this.match(VisualBasic6Parser.WS);
            this.state = 1065;
            this.valueStmt(0);
            this.state = 1067;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 1066;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 1069;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while (_la === VisualBasic6Parser.NEWLINE);
            this.state = 1077;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 130, this._ctx);
            if (la_ === 1) {
                this.state = 1071;
                this.block();
                this.state = 1073;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                do {
                    this.state = 1072;
                    this.match(VisualBasic6Parser.NEWLINE);
                    this.state = 1075;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                } while (_la === VisualBasic6Parser.NEWLINE);
            }
            this.state = 1079;
            this.match(VisualBasic6Parser.NEXT);
            this.state = 1082;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 131, this._ctx);
            if (la_ === 1) {
                this.state = 1080;
                this.match(VisualBasic6Parser.WS);
                this.state = 1081;
                this.ambiguousIdentifier();
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    forNextStmt() {
        let localctx = new ForNextStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 94, VisualBasic6Parser.RULE_forNextStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1084;
            this.match(VisualBasic6Parser.FOR);
            this.state = 1085;
            this.match(VisualBasic6Parser.WS);
            this.state = 1086;
            this.iCS_S_VariableOrProcedureCall();
            this.state = 1088;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (((((_la - 178)) & ~0x1f) == 0 && ((1 << (_la - 178)) & ((1 << (VisualBasic6Parser.AMPERSAND - 178)) | (1 << (VisualBasic6Parser.AT - 178)) | (1 << (VisualBasic6Parser.DOLLAR - 178)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 178)) | (1 << (VisualBasic6Parser.HASH - 178)) | (1 << (VisualBasic6Parser.PERCENT - 178)))) !== 0)) {
                this.state = 1087;
                this.typeHint();
            }
            this.state = 1092;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 133, this._ctx);
            if (la_ === 1) {
                this.state = 1090;
                this.match(VisualBasic6Parser.WS);
                this.state = 1091;
                this.asTypeClause();
            }
            this.state = 1095;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 1094;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1097;
            this.match(VisualBasic6Parser.EQ);
            this.state = 1099;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 135, this._ctx);
            if (la_ === 1) {
                this.state = 1098;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1101;
            this.valueStmt(0);
            this.state = 1102;
            this.match(VisualBasic6Parser.WS);
            this.state = 1103;
            this.match(VisualBasic6Parser.TO);
            this.state = 1104;
            this.match(VisualBasic6Parser.WS);
            this.state = 1105;
            this.valueStmt(0);
            this.state = 1110;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 1106;
                this.match(VisualBasic6Parser.WS);
                this.state = 1107;
                this.match(VisualBasic6Parser.STEP);
                this.state = 1108;
                this.match(VisualBasic6Parser.WS);
                this.state = 1109;
                this.valueStmt(0);
            }
            this.state = 1113;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 1112;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 1115;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while (_la === VisualBasic6Parser.NEWLINE);
            this.state = 1123;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 139, this._ctx);
            if (la_ === 1) {
                this.state = 1117;
                this.block();
                this.state = 1119;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                do {
                    this.state = 1118;
                    this.match(VisualBasic6Parser.NEWLINE);
                    this.state = 1121;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                } while (_la === VisualBasic6Parser.NEWLINE);
            }
            this.state = 1125;
            this.match(VisualBasic6Parser.NEXT);
            this.state = 1131;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 141, this._ctx);
            if (la_ === 1) {
                this.state = 1126;
                this.match(VisualBasic6Parser.WS);
                this.state = 1127;
                this.ambiguousIdentifier();
                this.state = 1129;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 140, this._ctx);
                if (la_ === 1) {
                    this.state = 1128;
                    this.typeHint();
                }
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    functionStmt() {
        let localctx = new FunctionStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 96, VisualBasic6Parser.RULE_functionStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1136;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.FRIEND || _la === VisualBasic6Parser.GLOBAL || _la === VisualBasic6Parser.PRIVATE || _la === VisualBasic6Parser.PUBLIC) {
                this.state = 1133;
                this.visibility();
                this.state = 1134;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1140;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.STATIC) {
                this.state = 1138;
                this.match(VisualBasic6Parser.STATIC);
                this.state = 1139;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1142;
            this.match(VisualBasic6Parser.FUNCTION);
            this.state = 1143;
            this.match(VisualBasic6Parser.WS);
            this.state = 1144;
            this.ambiguousIdentifier();
            this.state = 1149;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 145, this._ctx);
            if (la_ === 1) {
                this.state = 1146;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === VisualBasic6Parser.WS) {
                    this.state = 1145;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 1148;
                this.argList();
            }
            this.state = 1153;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 1151;
                this.match(VisualBasic6Parser.WS);
                this.state = 1152;
                this.asTypeClause();
            }
            this.state = 1156;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 1155;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 1158;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while (_la === VisualBasic6Parser.NEWLINE);
            this.state = 1166;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFCUR - 32)) | (1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)) | (1 << (VisualBasic6Parser.EXIT_DO - 32)) | (1 << (VisualBasic6Parser.EXIT_FOR - 32)) | (1 << (VisualBasic6Parser.EXIT_FUNCTION - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (VisualBasic6Parser.EXIT_PROPERTY - 64)) | (1 << (VisualBasic6Parser.EXIT_SUB - 64)) | (1 << (VisualBasic6Parser.FALSE - 64)) | (1 << (VisualBasic6Parser.FILECOPY - 64)) | (1 << (VisualBasic6Parser.FRIEND - 64)) | (1 << (VisualBasic6Parser.FOR - 64)) | (1 << (VisualBasic6Parser.FUNCTION - 64)) | (1 << (VisualBasic6Parser.GET - 64)) | (1 << (VisualBasic6Parser.GLOBAL - 64)) | (1 << (VisualBasic6Parser.GOSUB - 64)) | (1 << (VisualBasic6Parser.GOTO - 64)) | (1 << (VisualBasic6Parser.IF - 64)) | (1 << (VisualBasic6Parser.IMP - 64)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 64)) | (1 << (VisualBasic6Parser.IN - 64)) | (1 << (VisualBasic6Parser.INPUT - 64)) | (1 << (VisualBasic6Parser.IS - 64)) | (1 << (VisualBasic6Parser.INTEGER - 64)) | (1 << (VisualBasic6Parser.KILL - 64)) | (1 << (VisualBasic6Parser.LOAD - 64)) | (1 << (VisualBasic6Parser.LOCK - 64)) | (1 << (VisualBasic6Parser.LONG - 64)) | (1 << (VisualBasic6Parser.LOOP - 64)) | (1 << (VisualBasic6Parser.LEN - 64)) | (1 << (VisualBasic6Parser.LET - 64)) | (1 << (VisualBasic6Parser.LIB - 64)) | (1 << (VisualBasic6Parser.LIKE - 64)) | (1 << (VisualBasic6Parser.LINE_INPUT - 64)) | (1 << (VisualBasic6Parser.LSET - 64)))) !== 0) || ((((_la - 96)) & ~0x1f) == 0 && ((1 << (_la - 96)) & ((1 << (VisualBasic6Parser.MACRO_IF - 96)) | (1 << (VisualBasic6Parser.ME - 96)) | (1 << (VisualBasic6Parser.MID - 96)) | (1 << (VisualBasic6Parser.MKDIR - 96)) | (1 << (VisualBasic6Parser.MOD - 96)) | (1 << (VisualBasic6Parser.NAME - 96)) | (1 << (VisualBasic6Parser.NEXT - 96)) | (1 << (VisualBasic6Parser.NEW - 96)) | (1 << (VisualBasic6Parser.NOT - 96)) | (1 << (VisualBasic6Parser.NOTHING - 96)) | (1 << (VisualBasic6Parser.NULL_ - 96)) | (1 << (VisualBasic6Parser.OBJECT - 96)) | (1 << (VisualBasic6Parser.ON - 96)) | (1 << (VisualBasic6Parser.ON_ERROR - 96)) | (1 << (VisualBasic6Parser.ON_LOCAL_ERROR - 96)) | (1 << (VisualBasic6Parser.OPEN - 96)) | (1 << (VisualBasic6Parser.OPTIONAL - 96)) | (1 << (VisualBasic6Parser.OR - 96)) | (1 << (VisualBasic6Parser.OUTPUT - 96)) | (1 << (VisualBasic6Parser.PARAMARRAY - 96)) | (1 << (VisualBasic6Parser.PRESERVE - 96)) | (1 << (VisualBasic6Parser.PRINT - 96)) | (1 << (VisualBasic6Parser.PRIVATE - 96)))) !== 0) || ((((_la - 129)) & ~0x1f) == 0 && ((1 << (_la - 129)) & ((1 << (VisualBasic6Parser.PUBLIC - 129)) | (1 << (VisualBasic6Parser.PUT - 129)) | (1 << (VisualBasic6Parser.RANDOM - 129)) | (1 << (VisualBasic6Parser.RANDOMIZE - 129)) | (1 << (VisualBasic6Parser.RAISEEVENT - 129)) | (1 << (VisualBasic6Parser.READ - 129)) | (1 << (VisualBasic6Parser.REDIM - 129)) | (1 << (VisualBasic6Parser.REM - 129)) | (1 << (VisualBasic6Parser.RESET - 129)) | (1 << (VisualBasic6Parser.RESUME - 129)) | (1 << (VisualBasic6Parser.RETURN - 129)) | (1 << (VisualBasic6Parser.RMDIR - 129)) | (1 << (VisualBasic6Parser.RSET - 129)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 129)) | (1 << (VisualBasic6Parser.SAVESETTING - 129)) | (1 << (VisualBasic6Parser.SEEK - 129)) | (1 << (VisualBasic6Parser.SELECT - 129)) | (1 << (VisualBasic6Parser.SENDKEYS - 129)) | (1 << (VisualBasic6Parser.SET - 129)) | (1 << (VisualBasic6Parser.SETATTR - 129)) | (1 << (VisualBasic6Parser.SHARED - 129)) | (1 << (VisualBasic6Parser.SINGLE - 129)) | (1 << (VisualBasic6Parser.SPC - 129)) | (1 << (VisualBasic6Parser.STATIC - 129)) | (1 << (VisualBasic6Parser.STEP - 129)) | (1 << (VisualBasic6Parser.STOP - 129)) | (1 << (VisualBasic6Parser.STRING - 129)) | (1 << (VisualBasic6Parser.SUB - 129)) | (1 << (VisualBasic6Parser.TAB - 129)) | (1 << (VisualBasic6Parser.TEXT - 129)) | (1 << (VisualBasic6Parser.THEN - 129)))) !== 0) || ((((_la - 161)) & ~0x1f) == 0 && ((1 << (_la - 161)) & ((1 << (VisualBasic6Parser.TIME - 161)) | (1 << (VisualBasic6Parser.TO - 161)) | (1 << (VisualBasic6Parser.TRUE - 161)) | (1 << (VisualBasic6Parser.TYPE - 161)) | (1 << (VisualBasic6Parser.TYPEOF - 161)) | (1 << (VisualBasic6Parser.UNLOAD - 161)) | (1 << (VisualBasic6Parser.UNLOCK - 161)) | (1 << (VisualBasic6Parser.UNTIL - 161)) | (1 << (VisualBasic6Parser.VARIANT - 161)) | (1 << (VisualBasic6Parser.VERSION - 161)) | (1 << (VisualBasic6Parser.WEND - 161)) | (1 << (VisualBasic6Parser.WHILE - 161)) | (1 << (VisualBasic6Parser.WIDTH - 161)) | (1 << (VisualBasic6Parser.WITH - 161)) | (1 << (VisualBasic6Parser.WITHEVENTS - 161)) | (1 << (VisualBasic6Parser.WRITE - 161)) | (1 << (VisualBasic6Parser.XOR - 161)) | (1 << (VisualBasic6Parser.DOT - 161)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 161)))) !== 0) || ((((_la - 207)) & ~0x1f) == 0 && ((1 << (_la - 207)) & ((1 << (VisualBasic6Parser.L_SQUARE_BRACKET - 207)) | (1 << (VisualBasic6Parser.IDENTIFIER - 207)) | (1 << (VisualBasic6Parser.WS - 207)))) !== 0)) {
                this.state = 1160;
                this.block();
                this.state = 1162;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                do {
                    this.state = 1161;
                    this.match(VisualBasic6Parser.NEWLINE);
                    this.state = 1164;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                } while (_la === VisualBasic6Parser.NEWLINE);
            }
            this.state = 1168;
            this.match(VisualBasic6Parser.END_FUNCTION);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    getStmt() {
        let localctx = new GetStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 98, VisualBasic6Parser.RULE_getStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1170;
            this.match(VisualBasic6Parser.GET);
            this.state = 1171;
            this.match(VisualBasic6Parser.WS);
            this.state = 1172;
            this.valueStmt(0);
            this.state = 1174;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 1173;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1176;
            this.match(VisualBasic6Parser.COMMA);
            this.state = 1178;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 151, this._ctx);
            if (la_ === 1) {
                this.state = 1177;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1181;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 152, this._ctx);
            if (la_ === 1) {
                this.state = 1180;
                this.valueStmt(0);
            }
            this.state = 1184;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 1183;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1186;
            this.match(VisualBasic6Parser.COMMA);
            this.state = 1188;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 154, this._ctx);
            if (la_ === 1) {
                this.state = 1187;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1190;
            this.valueStmt(0);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    goSubStmt() {
        let localctx = new GoSubStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 100, VisualBasic6Parser.RULE_goSubStmt);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1192;
            this.match(VisualBasic6Parser.GOSUB);
            this.state = 1193;
            this.match(VisualBasic6Parser.WS);
            this.state = 1194;
            this.valueStmt(0);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    goToStmt() {
        let localctx = new GoToStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 102, VisualBasic6Parser.RULE_goToStmt);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1196;
            this.match(VisualBasic6Parser.GOTO);
            this.state = 1197;
            this.match(VisualBasic6Parser.WS);
            this.state = 1198;
            this.valueStmt(0);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    ifThenElseStmt() {
        let localctx = new IfThenElseStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 104, VisualBasic6Parser.RULE_ifThenElseStmt);
        var _la = 0;
        try {
            this.state = 1225;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 158, this._ctx);
            switch (la_) {
                case 1:
                    localctx = new InlineIfThenElseContext(this, localctx);
                    this.enterOuterAlt(localctx, 1);
                    this.state = 1200;
                    this.match(VisualBasic6Parser.IF);
                    this.state = 1201;
                    this.match(VisualBasic6Parser.WS);
                    this.state = 1202;
                    this.ifConditionStmt();
                    this.state = 1203;
                    this.match(VisualBasic6Parser.WS);
                    this.state = 1204;
                    this.match(VisualBasic6Parser.THEN);
                    this.state = 1205;
                    this.match(VisualBasic6Parser.WS);
                    this.state = 1206;
                    this.blockStmt();
                    this.state = 1211;
                    this._errHandler.sync(this);
                    var la_ = this._interp.adaptivePredict(this._input, 155, this._ctx);
                    if (la_ === 1) {
                        this.state = 1207;
                        this.match(VisualBasic6Parser.WS);
                        this.state = 1208;
                        this.match(VisualBasic6Parser.ELSE);
                        this.state = 1209;
                        this.match(VisualBasic6Parser.WS);
                        this.state = 1210;
                        this.blockStmt();
                    }
                    break;
                case 2:
                    localctx = new BlockIfThenElseContext(this, localctx);
                    this.enterOuterAlt(localctx, 2);
                    this.state = 1213;
                    this.ifBlockStmt();
                    this.state = 1217;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    while (_la === VisualBasic6Parser.ELSEIF) {
                        this.state = 1214;
                        this.ifElseIfBlockStmt();
                        this.state = 1219;
                        this._errHandler.sync(this);
                        _la = this._input.LA(1);
                    }
                    this.state = 1221;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if (_la === VisualBasic6Parser.ELSE) {
                        this.state = 1220;
                        this.ifElseBlockStmt();
                    }
                    this.state = 1223;
                    this.match(VisualBasic6Parser.END_IF);
                    break;
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    ifBlockStmt() {
        let localctx = new IfBlockStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 106, VisualBasic6Parser.RULE_ifBlockStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1227;
            this.match(VisualBasic6Parser.IF);
            this.state = 1228;
            this.match(VisualBasic6Parser.WS);
            this.state = 1229;
            this.ifConditionStmt();
            this.state = 1230;
            this.match(VisualBasic6Parser.WS);
            this.state = 1231;
            this.match(VisualBasic6Parser.THEN);
            this.state = 1233;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 1232;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 1235;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while (_la === VisualBasic6Parser.NEWLINE);
            this.state = 1243;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 161, this._ctx);
            if (la_ === 1) {
                this.state = 1237;
                this.block();
                this.state = 1239;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                do {
                    this.state = 1238;
                    this.match(VisualBasic6Parser.NEWLINE);
                    this.state = 1241;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                } while (_la === VisualBasic6Parser.NEWLINE);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    ifConditionStmt() {
        let localctx = new IfConditionStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 108, VisualBasic6Parser.RULE_ifConditionStmt);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1245;
            this.valueStmt(0);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    ifElseIfBlockStmt() {
        let localctx = new IfElseIfBlockStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 110, VisualBasic6Parser.RULE_ifElseIfBlockStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1247;
            this.match(VisualBasic6Parser.ELSEIF);
            this.state = 1248;
            this.match(VisualBasic6Parser.WS);
            this.state = 1249;
            this.ifConditionStmt();
            this.state = 1250;
            this.match(VisualBasic6Parser.WS);
            this.state = 1251;
            this.match(VisualBasic6Parser.THEN);
            this.state = 1253;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 1252;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 1255;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while (_la === VisualBasic6Parser.NEWLINE);
            this.state = 1263;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 164, this._ctx);
            if (la_ === 1) {
                this.state = 1257;
                this.block();
                this.state = 1259;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                do {
                    this.state = 1258;
                    this.match(VisualBasic6Parser.NEWLINE);
                    this.state = 1261;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                } while (_la === VisualBasic6Parser.NEWLINE);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    ifElseBlockStmt() {
        let localctx = new IfElseBlockStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 112, VisualBasic6Parser.RULE_ifElseBlockStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1265;
            this.match(VisualBasic6Parser.ELSE);
            this.state = 1267;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 1266;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 1269;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while (_la === VisualBasic6Parser.NEWLINE);
            this.state = 1277;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFCUR - 32)) | (1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)) | (1 << (VisualBasic6Parser.EXIT_DO - 32)) | (1 << (VisualBasic6Parser.EXIT_FOR - 32)) | (1 << (VisualBasic6Parser.EXIT_FUNCTION - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (VisualBasic6Parser.EXIT_PROPERTY - 64)) | (1 << (VisualBasic6Parser.EXIT_SUB - 64)) | (1 << (VisualBasic6Parser.FALSE - 64)) | (1 << (VisualBasic6Parser.FILECOPY - 64)) | (1 << (VisualBasic6Parser.FRIEND - 64)) | (1 << (VisualBasic6Parser.FOR - 64)) | (1 << (VisualBasic6Parser.FUNCTION - 64)) | (1 << (VisualBasic6Parser.GET - 64)) | (1 << (VisualBasic6Parser.GLOBAL - 64)) | (1 << (VisualBasic6Parser.GOSUB - 64)) | (1 << (VisualBasic6Parser.GOTO - 64)) | (1 << (VisualBasic6Parser.IF - 64)) | (1 << (VisualBasic6Parser.IMP - 64)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 64)) | (1 << (VisualBasic6Parser.IN - 64)) | (1 << (VisualBasic6Parser.INPUT - 64)) | (1 << (VisualBasic6Parser.IS - 64)) | (1 << (VisualBasic6Parser.INTEGER - 64)) | (1 << (VisualBasic6Parser.KILL - 64)) | (1 << (VisualBasic6Parser.LOAD - 64)) | (1 << (VisualBasic6Parser.LOCK - 64)) | (1 << (VisualBasic6Parser.LONG - 64)) | (1 << (VisualBasic6Parser.LOOP - 64)) | (1 << (VisualBasic6Parser.LEN - 64)) | (1 << (VisualBasic6Parser.LET - 64)) | (1 << (VisualBasic6Parser.LIB - 64)) | (1 << (VisualBasic6Parser.LIKE - 64)) | (1 << (VisualBasic6Parser.LINE_INPUT - 64)) | (1 << (VisualBasic6Parser.LSET - 64)))) !== 0) || ((((_la - 96)) & ~0x1f) == 0 && ((1 << (_la - 96)) & ((1 << (VisualBasic6Parser.MACRO_IF - 96)) | (1 << (VisualBasic6Parser.ME - 96)) | (1 << (VisualBasic6Parser.MID - 96)) | (1 << (VisualBasic6Parser.MKDIR - 96)) | (1 << (VisualBasic6Parser.MOD - 96)) | (1 << (VisualBasic6Parser.NAME - 96)) | (1 << (VisualBasic6Parser.NEXT - 96)) | (1 << (VisualBasic6Parser.NEW - 96)) | (1 << (VisualBasic6Parser.NOT - 96)) | (1 << (VisualBasic6Parser.NOTHING - 96)) | (1 << (VisualBasic6Parser.NULL_ - 96)) | (1 << (VisualBasic6Parser.OBJECT - 96)) | (1 << (VisualBasic6Parser.ON - 96)) | (1 << (VisualBasic6Parser.ON_ERROR - 96)) | (1 << (VisualBasic6Parser.ON_LOCAL_ERROR - 96)) | (1 << (VisualBasic6Parser.OPEN - 96)) | (1 << (VisualBasic6Parser.OPTIONAL - 96)) | (1 << (VisualBasic6Parser.OR - 96)) | (1 << (VisualBasic6Parser.OUTPUT - 96)) | (1 << (VisualBasic6Parser.PARAMARRAY - 96)) | (1 << (VisualBasic6Parser.PRESERVE - 96)) | (1 << (VisualBasic6Parser.PRINT - 96)) | (1 << (VisualBasic6Parser.PRIVATE - 96)))) !== 0) || ((((_la - 129)) & ~0x1f) == 0 && ((1 << (_la - 129)) & ((1 << (VisualBasic6Parser.PUBLIC - 129)) | (1 << (VisualBasic6Parser.PUT - 129)) | (1 << (VisualBasic6Parser.RANDOM - 129)) | (1 << (VisualBasic6Parser.RANDOMIZE - 129)) | (1 << (VisualBasic6Parser.RAISEEVENT - 129)) | (1 << (VisualBasic6Parser.READ - 129)) | (1 << (VisualBasic6Parser.REDIM - 129)) | (1 << (VisualBasic6Parser.REM - 129)) | (1 << (VisualBasic6Parser.RESET - 129)) | (1 << (VisualBasic6Parser.RESUME - 129)) | (1 << (VisualBasic6Parser.RETURN - 129)) | (1 << (VisualBasic6Parser.RMDIR - 129)) | (1 << (VisualBasic6Parser.RSET - 129)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 129)) | (1 << (VisualBasic6Parser.SAVESETTING - 129)) | (1 << (VisualBasic6Parser.SEEK - 129)) | (1 << (VisualBasic6Parser.SELECT - 129)) | (1 << (VisualBasic6Parser.SENDKEYS - 129)) | (1 << (VisualBasic6Parser.SET - 129)) | (1 << (VisualBasic6Parser.SETATTR - 129)) | (1 << (VisualBasic6Parser.SHARED - 129)) | (1 << (VisualBasic6Parser.SINGLE - 129)) | (1 << (VisualBasic6Parser.SPC - 129)) | (1 << (VisualBasic6Parser.STATIC - 129)) | (1 << (VisualBasic6Parser.STEP - 129)) | (1 << (VisualBasic6Parser.STOP - 129)) | (1 << (VisualBasic6Parser.STRING - 129)) | (1 << (VisualBasic6Parser.SUB - 129)) | (1 << (VisualBasic6Parser.TAB - 129)) | (1 << (VisualBasic6Parser.TEXT - 129)) | (1 << (VisualBasic6Parser.THEN - 129)))) !== 0) || ((((_la - 161)) & ~0x1f) == 0 && ((1 << (_la - 161)) & ((1 << (VisualBasic6Parser.TIME - 161)) | (1 << (VisualBasic6Parser.TO - 161)) | (1 << (VisualBasic6Parser.TRUE - 161)) | (1 << (VisualBasic6Parser.TYPE - 161)) | (1 << (VisualBasic6Parser.TYPEOF - 161)) | (1 << (VisualBasic6Parser.UNLOAD - 161)) | (1 << (VisualBasic6Parser.UNLOCK - 161)) | (1 << (VisualBasic6Parser.UNTIL - 161)) | (1 << (VisualBasic6Parser.VARIANT - 161)) | (1 << (VisualBasic6Parser.VERSION - 161)) | (1 << (VisualBasic6Parser.WEND - 161)) | (1 << (VisualBasic6Parser.WHILE - 161)) | (1 << (VisualBasic6Parser.WIDTH - 161)) | (1 << (VisualBasic6Parser.WITH - 161)) | (1 << (VisualBasic6Parser.WITHEVENTS - 161)) | (1 << (VisualBasic6Parser.WRITE - 161)) | (1 << (VisualBasic6Parser.XOR - 161)) | (1 << (VisualBasic6Parser.DOT - 161)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 161)))) !== 0) || ((((_la - 207)) & ~0x1f) == 0 && ((1 << (_la - 207)) & ((1 << (VisualBasic6Parser.L_SQUARE_BRACKET - 207)) | (1 << (VisualBasic6Parser.IDENTIFIER - 207)) | (1 << (VisualBasic6Parser.WS - 207)))) !== 0)) {
                this.state = 1271;
                this.block();
                this.state = 1273;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                do {
                    this.state = 1272;
                    this.match(VisualBasic6Parser.NEWLINE);
                    this.state = 1275;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                } while (_la === VisualBasic6Parser.NEWLINE);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    implementsStmt() {
        let localctx = new ImplementsStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 114, VisualBasic6Parser.RULE_implementsStmt);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1279;
            this.match(VisualBasic6Parser.IMPLEMENTS);
            this.state = 1280;
            this.match(VisualBasic6Parser.WS);
            this.state = 1281;
            this.ambiguousIdentifier();
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    inputStmt() {
        let localctx = new InputStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 116, VisualBasic6Parser.RULE_inputStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1283;
            this.match(VisualBasic6Parser.INPUT);
            this.state = 1284;
            this.match(VisualBasic6Parser.WS);
            this.state = 1285;
            this.valueStmt(0);
            this.state = 1294;
            this._errHandler.sync(this);
            var _alt = 1;
            do {
                switch (_alt) {
                    case 1:
                        this.state = 1287;
                        this._errHandler.sync(this);
                        _la = this._input.LA(1);
                        if (_la === VisualBasic6Parser.WS) {
                            this.state = 1286;
                            this.match(VisualBasic6Parser.WS);
                        }
                        this.state = 1289;
                        this.match(VisualBasic6Parser.COMMA);
                        this.state = 1291;
                        this._errHandler.sync(this);
                        var la_ = this._interp.adaptivePredict(this._input, 169, this._ctx);
                        if (la_ === 1) {
                            this.state = 1290;
                            this.match(VisualBasic6Parser.WS);
                        }
                        this.state = 1293;
                        this.valueStmt(0);
                        break;
                    default:
                        throw new antlr4_1.default.error.NoViableAltException(this);
                }
                this.state = 1296;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input, 170, this._ctx);
            } while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    killStmt() {
        let localctx = new KillStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 118, VisualBasic6Parser.RULE_killStmt);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1298;
            this.match(VisualBasic6Parser.KILL);
            this.state = 1299;
            this.match(VisualBasic6Parser.WS);
            this.state = 1300;
            this.valueStmt(0);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    letStmt() {
        let localctx = new LetStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 120, VisualBasic6Parser.RULE_letStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1304;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 171, this._ctx);
            if (la_ === 1) {
                this.state = 1302;
                this.match(VisualBasic6Parser.LET);
                this.state = 1303;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1306;
            this.implicitCallStmt_InStmt();
            this.state = 1308;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 1307;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1310;
            _la = this._input.LA(1);
            if (!(((((_la - 187)) & ~0x1f) == 0 && ((1 << (_la - 187)) & ((1 << (VisualBasic6Parser.EQ - 187)) | (1 << (VisualBasic6Parser.MINUS_EQ - 187)) | (1 << (VisualBasic6Parser.PLUS_EQ - 187)))) !== 0))) {
                this._errHandler.recoverInline(this);
            }
            else {
                this._errHandler.reportMatch(this);
                this.consume();
            }
            this.state = 1312;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 173, this._ctx);
            if (la_ === 1) {
                this.state = 1311;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1314;
            this.valueStmt(0);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    lineInputStmt() {
        let localctx = new LineInputStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 122, VisualBasic6Parser.RULE_lineInputStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1316;
            this.match(VisualBasic6Parser.LINE_INPUT);
            this.state = 1317;
            this.match(VisualBasic6Parser.WS);
            this.state = 1318;
            this.valueStmt(0);
            this.state = 1320;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 1319;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1322;
            this.match(VisualBasic6Parser.COMMA);
            this.state = 1324;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 175, this._ctx);
            if (la_ === 1) {
                this.state = 1323;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1326;
            this.valueStmt(0);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    loadStmt() {
        let localctx = new LoadStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 124, VisualBasic6Parser.RULE_loadStmt);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1328;
            this.match(VisualBasic6Parser.LOAD);
            this.state = 1329;
            this.match(VisualBasic6Parser.WS);
            this.state = 1330;
            this.valueStmt(0);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    lockStmt() {
        let localctx = new LockStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 126, VisualBasic6Parser.RULE_lockStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1332;
            this.match(VisualBasic6Parser.LOCK);
            this.state = 1333;
            this.match(VisualBasic6Parser.WS);
            this.state = 1334;
            this.valueStmt(0);
            this.state = 1349;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 179, this._ctx);
            if (la_ === 1) {
                this.state = 1336;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === VisualBasic6Parser.WS) {
                    this.state = 1335;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 1338;
                this.match(VisualBasic6Parser.COMMA);
                this.state = 1340;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 177, this._ctx);
                if (la_ === 1) {
                    this.state = 1339;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 1342;
                this.valueStmt(0);
                this.state = 1347;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 178, this._ctx);
                if (la_ === 1) {
                    this.state = 1343;
                    this.match(VisualBasic6Parser.WS);
                    this.state = 1344;
                    this.match(VisualBasic6Parser.TO);
                    this.state = 1345;
                    this.match(VisualBasic6Parser.WS);
                    this.state = 1346;
                    this.valueStmt(0);
                }
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    lsetStmt() {
        let localctx = new LsetStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 128, VisualBasic6Parser.RULE_lsetStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1351;
            this.match(VisualBasic6Parser.LSET);
            this.state = 1352;
            this.match(VisualBasic6Parser.WS);
            this.state = 1353;
            this.implicitCallStmt_InStmt();
            this.state = 1355;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 1354;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1357;
            this.match(VisualBasic6Parser.EQ);
            this.state = 1359;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 181, this._ctx);
            if (la_ === 1) {
                this.state = 1358;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1361;
            this.valueStmt(0);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    macroIfThenElseStmt() {
        let localctx = new MacroIfThenElseStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 130, VisualBasic6Parser.RULE_macroIfThenElseStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1363;
            this.macroIfBlockStmt();
            this.state = 1367;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while (_la === VisualBasic6Parser.MACRO_ELSEIF) {
                this.state = 1364;
                this.macroElseIfBlockStmt();
                this.state = 1369;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            this.state = 1371;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.MACRO_ELSE) {
                this.state = 1370;
                this.macroElseBlockStmt();
            }
            this.state = 1373;
            this.match(VisualBasic6Parser.MACRO_END_IF);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    macroIfBlockStmt() {
        let localctx = new MacroIfBlockStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 132, VisualBasic6Parser.RULE_macroIfBlockStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1375;
            this.match(VisualBasic6Parser.MACRO_IF);
            this.state = 1376;
            this.match(VisualBasic6Parser.WS);
            this.state = 1377;
            this.ifConditionStmt();
            this.state = 1378;
            this.match(VisualBasic6Parser.WS);
            this.state = 1379;
            this.match(VisualBasic6Parser.THEN);
            this.state = 1381;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 1380;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 1383;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while (_la === VisualBasic6Parser.NEWLINE);
            this.state = 1391;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFCUR - 32)) | (1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)) | (1 << (VisualBasic6Parser.EXIT_DO - 32)) | (1 << (VisualBasic6Parser.EXIT_FOR - 32)) | (1 << (VisualBasic6Parser.EXIT_FUNCTION - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (VisualBasic6Parser.EXIT_PROPERTY - 64)) | (1 << (VisualBasic6Parser.EXIT_SUB - 64)) | (1 << (VisualBasic6Parser.FALSE - 64)) | (1 << (VisualBasic6Parser.FILECOPY - 64)) | (1 << (VisualBasic6Parser.FRIEND - 64)) | (1 << (VisualBasic6Parser.FOR - 64)) | (1 << (VisualBasic6Parser.FUNCTION - 64)) | (1 << (VisualBasic6Parser.GET - 64)) | (1 << (VisualBasic6Parser.GLOBAL - 64)) | (1 << (VisualBasic6Parser.GOSUB - 64)) | (1 << (VisualBasic6Parser.GOTO - 64)) | (1 << (VisualBasic6Parser.IF - 64)) | (1 << (VisualBasic6Parser.IMP - 64)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 64)) | (1 << (VisualBasic6Parser.IN - 64)) | (1 << (VisualBasic6Parser.INPUT - 64)) | (1 << (VisualBasic6Parser.IS - 64)) | (1 << (VisualBasic6Parser.INTEGER - 64)) | (1 << (VisualBasic6Parser.KILL - 64)) | (1 << (VisualBasic6Parser.LOAD - 64)) | (1 << (VisualBasic6Parser.LOCK - 64)) | (1 << (VisualBasic6Parser.LONG - 64)) | (1 << (VisualBasic6Parser.LOOP - 64)) | (1 << (VisualBasic6Parser.LEN - 64)) | (1 << (VisualBasic6Parser.LET - 64)) | (1 << (VisualBasic6Parser.LIB - 64)) | (1 << (VisualBasic6Parser.LIKE - 64)) | (1 << (VisualBasic6Parser.LINE_INPUT - 64)) | (1 << (VisualBasic6Parser.LSET - 64)))) !== 0) || ((((_la - 96)) & ~0x1f) == 0 && ((1 << (_la - 96)) & ((1 << (VisualBasic6Parser.MACRO_IF - 96)) | (1 << (VisualBasic6Parser.ME - 96)) | (1 << (VisualBasic6Parser.MID - 96)) | (1 << (VisualBasic6Parser.MKDIR - 96)) | (1 << (VisualBasic6Parser.MOD - 96)) | (1 << (VisualBasic6Parser.NAME - 96)) | (1 << (VisualBasic6Parser.NEXT - 96)) | (1 << (VisualBasic6Parser.NEW - 96)) | (1 << (VisualBasic6Parser.NOT - 96)) | (1 << (VisualBasic6Parser.NOTHING - 96)) | (1 << (VisualBasic6Parser.NULL_ - 96)) | (1 << (VisualBasic6Parser.OBJECT - 96)) | (1 << (VisualBasic6Parser.ON - 96)) | (1 << (VisualBasic6Parser.ON_ERROR - 96)) | (1 << (VisualBasic6Parser.ON_LOCAL_ERROR - 96)) | (1 << (VisualBasic6Parser.OPEN - 96)) | (1 << (VisualBasic6Parser.OPTIONAL - 96)) | (1 << (VisualBasic6Parser.OPTION_BASE - 96)) | (1 << (VisualBasic6Parser.OPTION_EXPLICIT - 96)) | (1 << (VisualBasic6Parser.OPTION_COMPARE - 96)) | (1 << (VisualBasic6Parser.OPTION_PRIVATE_MODULE - 96)) | (1 << (VisualBasic6Parser.OR - 96)) | (1 << (VisualBasic6Parser.OUTPUT - 96)) | (1 << (VisualBasic6Parser.PARAMARRAY - 96)) | (1 << (VisualBasic6Parser.PRESERVE - 96)) | (1 << (VisualBasic6Parser.PRINT - 96)) | (1 << (VisualBasic6Parser.PRIVATE - 96)) | (1 << (VisualBasic6Parser.PROPERTY_GET - 96)) | (1 << (VisualBasic6Parser.PROPERTY_LET - 96)))) !== 0) || ((((_la - 128)) & ~0x1f) == 0 && ((1 << (_la - 128)) & ((1 << (VisualBasic6Parser.PROPERTY_SET - 128)) | (1 << (VisualBasic6Parser.PUBLIC - 128)) | (1 << (VisualBasic6Parser.PUT - 128)) | (1 << (VisualBasic6Parser.RANDOM - 128)) | (1 << (VisualBasic6Parser.RANDOMIZE - 128)) | (1 << (VisualBasic6Parser.RAISEEVENT - 128)) | (1 << (VisualBasic6Parser.READ - 128)) | (1 << (VisualBasic6Parser.REDIM - 128)) | (1 << (VisualBasic6Parser.REM - 128)) | (1 << (VisualBasic6Parser.RESET - 128)) | (1 << (VisualBasic6Parser.RESUME - 128)) | (1 << (VisualBasic6Parser.RETURN - 128)) | (1 << (VisualBasic6Parser.RMDIR - 128)) | (1 << (VisualBasic6Parser.RSET - 128)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 128)) | (1 << (VisualBasic6Parser.SAVESETTING - 128)) | (1 << (VisualBasic6Parser.SEEK - 128)) | (1 << (VisualBasic6Parser.SELECT - 128)) | (1 << (VisualBasic6Parser.SENDKEYS - 128)) | (1 << (VisualBasic6Parser.SET - 128)) | (1 << (VisualBasic6Parser.SETATTR - 128)) | (1 << (VisualBasic6Parser.SHARED - 128)) | (1 << (VisualBasic6Parser.SINGLE - 128)) | (1 << (VisualBasic6Parser.SPC - 128)) | (1 << (VisualBasic6Parser.STATIC - 128)) | (1 << (VisualBasic6Parser.STEP - 128)) | (1 << (VisualBasic6Parser.STOP - 128)) | (1 << (VisualBasic6Parser.STRING - 128)) | (1 << (VisualBasic6Parser.SUB - 128)) | (1 << (VisualBasic6Parser.TAB - 128)) | (1 << (VisualBasic6Parser.TEXT - 128)))) !== 0) || ((((_la - 160)) & ~0x1f) == 0 && ((1 << (_la - 160)) & ((1 << (VisualBasic6Parser.THEN - 160)) | (1 << (VisualBasic6Parser.TIME - 160)) | (1 << (VisualBasic6Parser.TO - 160)) | (1 << (VisualBasic6Parser.TRUE - 160)) | (1 << (VisualBasic6Parser.TYPE - 160)) | (1 << (VisualBasic6Parser.TYPEOF - 160)) | (1 << (VisualBasic6Parser.UNLOAD - 160)) | (1 << (VisualBasic6Parser.UNLOCK - 160)) | (1 << (VisualBasic6Parser.UNTIL - 160)) | (1 << (VisualBasic6Parser.VARIANT - 160)) | (1 << (VisualBasic6Parser.VERSION - 160)) | (1 << (VisualBasic6Parser.WEND - 160)) | (1 << (VisualBasic6Parser.WHILE - 160)) | (1 << (VisualBasic6Parser.WIDTH - 160)) | (1 << (VisualBasic6Parser.WITH - 160)) | (1 << (VisualBasic6Parser.WITHEVENTS - 160)) | (1 << (VisualBasic6Parser.WRITE - 160)) | (1 << (VisualBasic6Parser.XOR - 160)) | (1 << (VisualBasic6Parser.DOT - 160)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 160)))) !== 0) || ((((_la - 207)) & ~0x1f) == 0 && ((1 << (_la - 207)) & ((1 << (VisualBasic6Parser.L_SQUARE_BRACKET - 207)) | (1 << (VisualBasic6Parser.IDENTIFIER - 207)) | (1 << (VisualBasic6Parser.WS - 207)))) !== 0)) {
                this.state = 1385;
                this.moduleBody();
                this.state = 1387;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                do {
                    this.state = 1386;
                    this.match(VisualBasic6Parser.NEWLINE);
                    this.state = 1389;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                } while (_la === VisualBasic6Parser.NEWLINE);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    macroElseIfBlockStmt() {
        let localctx = new MacroElseIfBlockStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 134, VisualBasic6Parser.RULE_macroElseIfBlockStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1393;
            this.match(VisualBasic6Parser.MACRO_ELSEIF);
            this.state = 1394;
            this.match(VisualBasic6Parser.WS);
            this.state = 1395;
            this.ifConditionStmt();
            this.state = 1396;
            this.match(VisualBasic6Parser.WS);
            this.state = 1397;
            this.match(VisualBasic6Parser.THEN);
            this.state = 1399;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 1398;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 1401;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while (_la === VisualBasic6Parser.NEWLINE);
            this.state = 1409;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFCUR - 32)) | (1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)) | (1 << (VisualBasic6Parser.EXIT_DO - 32)) | (1 << (VisualBasic6Parser.EXIT_FOR - 32)) | (1 << (VisualBasic6Parser.EXIT_FUNCTION - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (VisualBasic6Parser.EXIT_PROPERTY - 64)) | (1 << (VisualBasic6Parser.EXIT_SUB - 64)) | (1 << (VisualBasic6Parser.FALSE - 64)) | (1 << (VisualBasic6Parser.FILECOPY - 64)) | (1 << (VisualBasic6Parser.FRIEND - 64)) | (1 << (VisualBasic6Parser.FOR - 64)) | (1 << (VisualBasic6Parser.FUNCTION - 64)) | (1 << (VisualBasic6Parser.GET - 64)) | (1 << (VisualBasic6Parser.GLOBAL - 64)) | (1 << (VisualBasic6Parser.GOSUB - 64)) | (1 << (VisualBasic6Parser.GOTO - 64)) | (1 << (VisualBasic6Parser.IF - 64)) | (1 << (VisualBasic6Parser.IMP - 64)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 64)) | (1 << (VisualBasic6Parser.IN - 64)) | (1 << (VisualBasic6Parser.INPUT - 64)) | (1 << (VisualBasic6Parser.IS - 64)) | (1 << (VisualBasic6Parser.INTEGER - 64)) | (1 << (VisualBasic6Parser.KILL - 64)) | (1 << (VisualBasic6Parser.LOAD - 64)) | (1 << (VisualBasic6Parser.LOCK - 64)) | (1 << (VisualBasic6Parser.LONG - 64)) | (1 << (VisualBasic6Parser.LOOP - 64)) | (1 << (VisualBasic6Parser.LEN - 64)) | (1 << (VisualBasic6Parser.LET - 64)) | (1 << (VisualBasic6Parser.LIB - 64)) | (1 << (VisualBasic6Parser.LIKE - 64)) | (1 << (VisualBasic6Parser.LINE_INPUT - 64)) | (1 << (VisualBasic6Parser.LSET - 64)))) !== 0) || ((((_la - 96)) & ~0x1f) == 0 && ((1 << (_la - 96)) & ((1 << (VisualBasic6Parser.MACRO_IF - 96)) | (1 << (VisualBasic6Parser.ME - 96)) | (1 << (VisualBasic6Parser.MID - 96)) | (1 << (VisualBasic6Parser.MKDIR - 96)) | (1 << (VisualBasic6Parser.MOD - 96)) | (1 << (VisualBasic6Parser.NAME - 96)) | (1 << (VisualBasic6Parser.NEXT - 96)) | (1 << (VisualBasic6Parser.NEW - 96)) | (1 << (VisualBasic6Parser.NOT - 96)) | (1 << (VisualBasic6Parser.NOTHING - 96)) | (1 << (VisualBasic6Parser.NULL_ - 96)) | (1 << (VisualBasic6Parser.OBJECT - 96)) | (1 << (VisualBasic6Parser.ON - 96)) | (1 << (VisualBasic6Parser.ON_ERROR - 96)) | (1 << (VisualBasic6Parser.ON_LOCAL_ERROR - 96)) | (1 << (VisualBasic6Parser.OPEN - 96)) | (1 << (VisualBasic6Parser.OPTIONAL - 96)) | (1 << (VisualBasic6Parser.OPTION_BASE - 96)) | (1 << (VisualBasic6Parser.OPTION_EXPLICIT - 96)) | (1 << (VisualBasic6Parser.OPTION_COMPARE - 96)) | (1 << (VisualBasic6Parser.OPTION_PRIVATE_MODULE - 96)) | (1 << (VisualBasic6Parser.OR - 96)) | (1 << (VisualBasic6Parser.OUTPUT - 96)) | (1 << (VisualBasic6Parser.PARAMARRAY - 96)) | (1 << (VisualBasic6Parser.PRESERVE - 96)) | (1 << (VisualBasic6Parser.PRINT - 96)) | (1 << (VisualBasic6Parser.PRIVATE - 96)) | (1 << (VisualBasic6Parser.PROPERTY_GET - 96)) | (1 << (VisualBasic6Parser.PROPERTY_LET - 96)))) !== 0) || ((((_la - 128)) & ~0x1f) == 0 && ((1 << (_la - 128)) & ((1 << (VisualBasic6Parser.PROPERTY_SET - 128)) | (1 << (VisualBasic6Parser.PUBLIC - 128)) | (1 << (VisualBasic6Parser.PUT - 128)) | (1 << (VisualBasic6Parser.RANDOM - 128)) | (1 << (VisualBasic6Parser.RANDOMIZE - 128)) | (1 << (VisualBasic6Parser.RAISEEVENT - 128)) | (1 << (VisualBasic6Parser.READ - 128)) | (1 << (VisualBasic6Parser.REDIM - 128)) | (1 << (VisualBasic6Parser.REM - 128)) | (1 << (VisualBasic6Parser.RESET - 128)) | (1 << (VisualBasic6Parser.RESUME - 128)) | (1 << (VisualBasic6Parser.RETURN - 128)) | (1 << (VisualBasic6Parser.RMDIR - 128)) | (1 << (VisualBasic6Parser.RSET - 128)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 128)) | (1 << (VisualBasic6Parser.SAVESETTING - 128)) | (1 << (VisualBasic6Parser.SEEK - 128)) | (1 << (VisualBasic6Parser.SELECT - 128)) | (1 << (VisualBasic6Parser.SENDKEYS - 128)) | (1 << (VisualBasic6Parser.SET - 128)) | (1 << (VisualBasic6Parser.SETATTR - 128)) | (1 << (VisualBasic6Parser.SHARED - 128)) | (1 << (VisualBasic6Parser.SINGLE - 128)) | (1 << (VisualBasic6Parser.SPC - 128)) | (1 << (VisualBasic6Parser.STATIC - 128)) | (1 << (VisualBasic6Parser.STEP - 128)) | (1 << (VisualBasic6Parser.STOP - 128)) | (1 << (VisualBasic6Parser.STRING - 128)) | (1 << (VisualBasic6Parser.SUB - 128)) | (1 << (VisualBasic6Parser.TAB - 128)) | (1 << (VisualBasic6Parser.TEXT - 128)))) !== 0) || ((((_la - 160)) & ~0x1f) == 0 && ((1 << (_la - 160)) & ((1 << (VisualBasic6Parser.THEN - 160)) | (1 << (VisualBasic6Parser.TIME - 160)) | (1 << (VisualBasic6Parser.TO - 160)) | (1 << (VisualBasic6Parser.TRUE - 160)) | (1 << (VisualBasic6Parser.TYPE - 160)) | (1 << (VisualBasic6Parser.TYPEOF - 160)) | (1 << (VisualBasic6Parser.UNLOAD - 160)) | (1 << (VisualBasic6Parser.UNLOCK - 160)) | (1 << (VisualBasic6Parser.UNTIL - 160)) | (1 << (VisualBasic6Parser.VARIANT - 160)) | (1 << (VisualBasic6Parser.VERSION - 160)) | (1 << (VisualBasic6Parser.WEND - 160)) | (1 << (VisualBasic6Parser.WHILE - 160)) | (1 << (VisualBasic6Parser.WIDTH - 160)) | (1 << (VisualBasic6Parser.WITH - 160)) | (1 << (VisualBasic6Parser.WITHEVENTS - 160)) | (1 << (VisualBasic6Parser.WRITE - 160)) | (1 << (VisualBasic6Parser.XOR - 160)) | (1 << (VisualBasic6Parser.DOT - 160)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 160)))) !== 0) || ((((_la - 207)) & ~0x1f) == 0 && ((1 << (_la - 207)) & ((1 << (VisualBasic6Parser.L_SQUARE_BRACKET - 207)) | (1 << (VisualBasic6Parser.IDENTIFIER - 207)) | (1 << (VisualBasic6Parser.WS - 207)))) !== 0)) {
                this.state = 1403;
                this.moduleBody();
                this.state = 1405;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                do {
                    this.state = 1404;
                    this.match(VisualBasic6Parser.NEWLINE);
                    this.state = 1407;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                } while (_la === VisualBasic6Parser.NEWLINE);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    macroElseBlockStmt() {
        let localctx = new MacroElseBlockStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 136, VisualBasic6Parser.RULE_macroElseBlockStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1411;
            this.match(VisualBasic6Parser.MACRO_ELSE);
            this.state = 1413;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 1412;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 1415;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while (_la === VisualBasic6Parser.NEWLINE);
            this.state = 1423;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFCUR - 32)) | (1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)) | (1 << (VisualBasic6Parser.EXIT_DO - 32)) | (1 << (VisualBasic6Parser.EXIT_FOR - 32)) | (1 << (VisualBasic6Parser.EXIT_FUNCTION - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (VisualBasic6Parser.EXIT_PROPERTY - 64)) | (1 << (VisualBasic6Parser.EXIT_SUB - 64)) | (1 << (VisualBasic6Parser.FALSE - 64)) | (1 << (VisualBasic6Parser.FILECOPY - 64)) | (1 << (VisualBasic6Parser.FRIEND - 64)) | (1 << (VisualBasic6Parser.FOR - 64)) | (1 << (VisualBasic6Parser.FUNCTION - 64)) | (1 << (VisualBasic6Parser.GET - 64)) | (1 << (VisualBasic6Parser.GLOBAL - 64)) | (1 << (VisualBasic6Parser.GOSUB - 64)) | (1 << (VisualBasic6Parser.GOTO - 64)) | (1 << (VisualBasic6Parser.IF - 64)) | (1 << (VisualBasic6Parser.IMP - 64)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 64)) | (1 << (VisualBasic6Parser.IN - 64)) | (1 << (VisualBasic6Parser.INPUT - 64)) | (1 << (VisualBasic6Parser.IS - 64)) | (1 << (VisualBasic6Parser.INTEGER - 64)) | (1 << (VisualBasic6Parser.KILL - 64)) | (1 << (VisualBasic6Parser.LOAD - 64)) | (1 << (VisualBasic6Parser.LOCK - 64)) | (1 << (VisualBasic6Parser.LONG - 64)) | (1 << (VisualBasic6Parser.LOOP - 64)) | (1 << (VisualBasic6Parser.LEN - 64)) | (1 << (VisualBasic6Parser.LET - 64)) | (1 << (VisualBasic6Parser.LIB - 64)) | (1 << (VisualBasic6Parser.LIKE - 64)) | (1 << (VisualBasic6Parser.LINE_INPUT - 64)) | (1 << (VisualBasic6Parser.LSET - 64)))) !== 0) || ((((_la - 96)) & ~0x1f) == 0 && ((1 << (_la - 96)) & ((1 << (VisualBasic6Parser.MACRO_IF - 96)) | (1 << (VisualBasic6Parser.ME - 96)) | (1 << (VisualBasic6Parser.MID - 96)) | (1 << (VisualBasic6Parser.MKDIR - 96)) | (1 << (VisualBasic6Parser.MOD - 96)) | (1 << (VisualBasic6Parser.NAME - 96)) | (1 << (VisualBasic6Parser.NEXT - 96)) | (1 << (VisualBasic6Parser.NEW - 96)) | (1 << (VisualBasic6Parser.NOT - 96)) | (1 << (VisualBasic6Parser.NOTHING - 96)) | (1 << (VisualBasic6Parser.NULL_ - 96)) | (1 << (VisualBasic6Parser.OBJECT - 96)) | (1 << (VisualBasic6Parser.ON - 96)) | (1 << (VisualBasic6Parser.ON_ERROR - 96)) | (1 << (VisualBasic6Parser.ON_LOCAL_ERROR - 96)) | (1 << (VisualBasic6Parser.OPEN - 96)) | (1 << (VisualBasic6Parser.OPTIONAL - 96)) | (1 << (VisualBasic6Parser.OPTION_BASE - 96)) | (1 << (VisualBasic6Parser.OPTION_EXPLICIT - 96)) | (1 << (VisualBasic6Parser.OPTION_COMPARE - 96)) | (1 << (VisualBasic6Parser.OPTION_PRIVATE_MODULE - 96)) | (1 << (VisualBasic6Parser.OR - 96)) | (1 << (VisualBasic6Parser.OUTPUT - 96)) | (1 << (VisualBasic6Parser.PARAMARRAY - 96)) | (1 << (VisualBasic6Parser.PRESERVE - 96)) | (1 << (VisualBasic6Parser.PRINT - 96)) | (1 << (VisualBasic6Parser.PRIVATE - 96)) | (1 << (VisualBasic6Parser.PROPERTY_GET - 96)) | (1 << (VisualBasic6Parser.PROPERTY_LET - 96)))) !== 0) || ((((_la - 128)) & ~0x1f) == 0 && ((1 << (_la - 128)) & ((1 << (VisualBasic6Parser.PROPERTY_SET - 128)) | (1 << (VisualBasic6Parser.PUBLIC - 128)) | (1 << (VisualBasic6Parser.PUT - 128)) | (1 << (VisualBasic6Parser.RANDOM - 128)) | (1 << (VisualBasic6Parser.RANDOMIZE - 128)) | (1 << (VisualBasic6Parser.RAISEEVENT - 128)) | (1 << (VisualBasic6Parser.READ - 128)) | (1 << (VisualBasic6Parser.REDIM - 128)) | (1 << (VisualBasic6Parser.REM - 128)) | (1 << (VisualBasic6Parser.RESET - 128)) | (1 << (VisualBasic6Parser.RESUME - 128)) | (1 << (VisualBasic6Parser.RETURN - 128)) | (1 << (VisualBasic6Parser.RMDIR - 128)) | (1 << (VisualBasic6Parser.RSET - 128)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 128)) | (1 << (VisualBasic6Parser.SAVESETTING - 128)) | (1 << (VisualBasic6Parser.SEEK - 128)) | (1 << (VisualBasic6Parser.SELECT - 128)) | (1 << (VisualBasic6Parser.SENDKEYS - 128)) | (1 << (VisualBasic6Parser.SET - 128)) | (1 << (VisualBasic6Parser.SETATTR - 128)) | (1 << (VisualBasic6Parser.SHARED - 128)) | (1 << (VisualBasic6Parser.SINGLE - 128)) | (1 << (VisualBasic6Parser.SPC - 128)) | (1 << (VisualBasic6Parser.STATIC - 128)) | (1 << (VisualBasic6Parser.STEP - 128)) | (1 << (VisualBasic6Parser.STOP - 128)) | (1 << (VisualBasic6Parser.STRING - 128)) | (1 << (VisualBasic6Parser.SUB - 128)) | (1 << (VisualBasic6Parser.TAB - 128)) | (1 << (VisualBasic6Parser.TEXT - 128)))) !== 0) || ((((_la - 160)) & ~0x1f) == 0 && ((1 << (_la - 160)) & ((1 << (VisualBasic6Parser.THEN - 160)) | (1 << (VisualBasic6Parser.TIME - 160)) | (1 << (VisualBasic6Parser.TO - 160)) | (1 << (VisualBasic6Parser.TRUE - 160)) | (1 << (VisualBasic6Parser.TYPE - 160)) | (1 << (VisualBasic6Parser.TYPEOF - 160)) | (1 << (VisualBasic6Parser.UNLOAD - 160)) | (1 << (VisualBasic6Parser.UNLOCK - 160)) | (1 << (VisualBasic6Parser.UNTIL - 160)) | (1 << (VisualBasic6Parser.VARIANT - 160)) | (1 << (VisualBasic6Parser.VERSION - 160)) | (1 << (VisualBasic6Parser.WEND - 160)) | (1 << (VisualBasic6Parser.WHILE - 160)) | (1 << (VisualBasic6Parser.WIDTH - 160)) | (1 << (VisualBasic6Parser.WITH - 160)) | (1 << (VisualBasic6Parser.WITHEVENTS - 160)) | (1 << (VisualBasic6Parser.WRITE - 160)) | (1 << (VisualBasic6Parser.XOR - 160)) | (1 << (VisualBasic6Parser.DOT - 160)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 160)))) !== 0) || ((((_la - 207)) & ~0x1f) == 0 && ((1 << (_la - 207)) & ((1 << (VisualBasic6Parser.L_SQUARE_BRACKET - 207)) | (1 << (VisualBasic6Parser.IDENTIFIER - 207)) | (1 << (VisualBasic6Parser.WS - 207)))) !== 0)) {
                this.state = 1417;
                this.moduleBody();
                this.state = 1419;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                do {
                    this.state = 1418;
                    this.match(VisualBasic6Parser.NEWLINE);
                    this.state = 1421;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                } while (_la === VisualBasic6Parser.NEWLINE);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    midStmt() {
        let localctx = new MidStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 138, VisualBasic6Parser.RULE_midStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1425;
            this.match(VisualBasic6Parser.MID);
            this.state = 1427;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 1426;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1429;
            this.match(VisualBasic6Parser.LPAREN);
            this.state = 1431;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 194, this._ctx);
            if (la_ === 1) {
                this.state = 1430;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1433;
            this.argsCall();
            this.state = 1435;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 1434;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1437;
            this.match(VisualBasic6Parser.RPAREN);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    mkdirStmt() {
        let localctx = new MkdirStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 140, VisualBasic6Parser.RULE_mkdirStmt);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1439;
            this.match(VisualBasic6Parser.MKDIR);
            this.state = 1440;
            this.match(VisualBasic6Parser.WS);
            this.state = 1441;
            this.valueStmt(0);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    nameStmt() {
        let localctx = new NameStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 142, VisualBasic6Parser.RULE_nameStmt);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1443;
            this.match(VisualBasic6Parser.NAME);
            this.state = 1444;
            this.match(VisualBasic6Parser.WS);
            this.state = 1445;
            this.valueStmt(0);
            this.state = 1446;
            this.match(VisualBasic6Parser.WS);
            this.state = 1447;
            this.match(VisualBasic6Parser.AS);
            this.state = 1448;
            this.match(VisualBasic6Parser.WS);
            this.state = 1449;
            this.valueStmt(0);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    onErrorStmt() {
        let localctx = new OnErrorStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 144, VisualBasic6Parser.RULE_onErrorStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1451;
            _la = this._input.LA(1);
            if (!(_la === VisualBasic6Parser.ON_ERROR || _la === VisualBasic6Parser.ON_LOCAL_ERROR)) {
                this._errHandler.recoverInline(this);
            }
            else {
                this._errHandler.reportMatch(this);
                this.consume();
            }
            this.state = 1452;
            this.match(VisualBasic6Parser.WS);
            this.state = 1462;
            this._errHandler.sync(this);
            switch (this._input.LA(1)) {
                case VisualBasic6Parser.GOTO:
                    this.state = 1453;
                    this.match(VisualBasic6Parser.GOTO);
                    this.state = 1454;
                    this.match(VisualBasic6Parser.WS);
                    this.state = 1455;
                    this.valueStmt(0);
                    this.state = 1457;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if (_la === VisualBasic6Parser.COLON) {
                        this.state = 1456;
                        this.match(VisualBasic6Parser.COLON);
                    }
                    break;
                case VisualBasic6Parser.RESUME:
                    this.state = 1459;
                    this.match(VisualBasic6Parser.RESUME);
                    this.state = 1460;
                    this.match(VisualBasic6Parser.WS);
                    this.state = 1461;
                    this.match(VisualBasic6Parser.NEXT);
                    break;
                default:
                    throw new antlr4_1.default.error.NoViableAltException(this);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    onGoToStmt() {
        let localctx = new OnGoToStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 146, VisualBasic6Parser.RULE_onGoToStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1464;
            this.match(VisualBasic6Parser.ON);
            this.state = 1465;
            this.match(VisualBasic6Parser.WS);
            this.state = 1466;
            this.valueStmt(0);
            this.state = 1467;
            this.match(VisualBasic6Parser.WS);
            this.state = 1468;
            this.match(VisualBasic6Parser.GOTO);
            this.state = 1469;
            this.match(VisualBasic6Parser.WS);
            this.state = 1470;
            this.valueStmt(0);
            this.state = 1481;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input, 200, this._ctx);
            while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER) {
                if (_alt === 1) {
                    this.state = 1472;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if (_la === VisualBasic6Parser.WS) {
                        this.state = 1471;
                        this.match(VisualBasic6Parser.WS);
                    }
                    this.state = 1474;
                    this.match(VisualBasic6Parser.COMMA);
                    this.state = 1476;
                    this._errHandler.sync(this);
                    var la_ = this._interp.adaptivePredict(this._input, 199, this._ctx);
                    if (la_ === 1) {
                        this.state = 1475;
                        this.match(VisualBasic6Parser.WS);
                    }
                    this.state = 1478;
                    this.valueStmt(0);
                }
                this.state = 1483;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input, 200, this._ctx);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    onGoSubStmt() {
        let localctx = new OnGoSubStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 148, VisualBasic6Parser.RULE_onGoSubStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1484;
            this.match(VisualBasic6Parser.ON);
            this.state = 1485;
            this.match(VisualBasic6Parser.WS);
            this.state = 1486;
            this.valueStmt(0);
            this.state = 1487;
            this.match(VisualBasic6Parser.WS);
            this.state = 1488;
            this.match(VisualBasic6Parser.GOSUB);
            this.state = 1489;
            this.match(VisualBasic6Parser.WS);
            this.state = 1490;
            this.valueStmt(0);
            this.state = 1501;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input, 203, this._ctx);
            while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER) {
                if (_alt === 1) {
                    this.state = 1492;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if (_la === VisualBasic6Parser.WS) {
                        this.state = 1491;
                        this.match(VisualBasic6Parser.WS);
                    }
                    this.state = 1494;
                    this.match(VisualBasic6Parser.COMMA);
                    this.state = 1496;
                    this._errHandler.sync(this);
                    var la_ = this._interp.adaptivePredict(this._input, 202, this._ctx);
                    if (la_ === 1) {
                        this.state = 1495;
                        this.match(VisualBasic6Parser.WS);
                    }
                    this.state = 1498;
                    this.valueStmt(0);
                }
                this.state = 1503;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input, 203, this._ctx);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    openStmt() {
        let localctx = new OpenStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 150, VisualBasic6Parser.RULE_openStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1504;
            this.match(VisualBasic6Parser.OPEN);
            this.state = 1505;
            this.match(VisualBasic6Parser.WS);
            this.state = 1506;
            this.valueStmt(0);
            this.state = 1507;
            this.match(VisualBasic6Parser.WS);
            this.state = 1508;
            this.match(VisualBasic6Parser.FOR);
            this.state = 1509;
            this.match(VisualBasic6Parser.WS);
            this.state = 1510;
            _la = this._input.LA(1);
            if (!(_la === VisualBasic6Parser.APPEND || _la === VisualBasic6Parser.BINARY || _la === VisualBasic6Parser.INPUT || _la === VisualBasic6Parser.OUTPUT || _la === VisualBasic6Parser.RANDOM)) {
                this._errHandler.recoverInline(this);
            }
            else {
                this._errHandler.reportMatch(this);
                this.consume();
            }
            this.state = 1515;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 204, this._ctx);
            if (la_ === 1) {
                this.state = 1511;
                this.match(VisualBasic6Parser.WS);
                this.state = 1512;
                this.match(VisualBasic6Parser.ACCESS);
                this.state = 1513;
                this.match(VisualBasic6Parser.WS);
                this.state = 1514;
                _la = this._input.LA(1);
                if (!(_la === VisualBasic6Parser.READ || _la === VisualBasic6Parser.READ_WRITE || _la === VisualBasic6Parser.WRITE)) {
                    this._errHandler.recoverInline(this);
                }
                else {
                    this._errHandler.reportMatch(this);
                    this.consume();
                }
            }
            this.state = 1519;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 205, this._ctx);
            if (la_ === 1) {
                this.state = 1517;
                this.match(VisualBasic6Parser.WS);
                this.state = 1518;
                _la = this._input.LA(1);
                if (!(((((_la - 92)) & ~0x1f) == 0 && ((1 << (_la - 92)) & ((1 << (VisualBasic6Parser.LOCK_READ - 92)) | (1 << (VisualBasic6Parser.LOCK_WRITE - 92)) | (1 << (VisualBasic6Parser.LOCK_READ_WRITE - 92)))) !== 0) || _la === VisualBasic6Parser.SHARED)) {
                    this._errHandler.recoverInline(this);
                }
                else {
                    this._errHandler.reportMatch(this);
                    this.consume();
                }
            }
            this.state = 1521;
            this.match(VisualBasic6Parser.WS);
            this.state = 1522;
            this.match(VisualBasic6Parser.AS);
            this.state = 1523;
            this.match(VisualBasic6Parser.WS);
            this.state = 1524;
            this.valueStmt(0);
            this.state = 1535;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 208, this._ctx);
            if (la_ === 1) {
                this.state = 1525;
                this.match(VisualBasic6Parser.WS);
                this.state = 1526;
                this.match(VisualBasic6Parser.LEN);
                this.state = 1528;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === VisualBasic6Parser.WS) {
                    this.state = 1527;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 1530;
                this.match(VisualBasic6Parser.EQ);
                this.state = 1532;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 207, this._ctx);
                if (la_ === 1) {
                    this.state = 1531;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 1534;
                this.valueStmt(0);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    outputList() {
        let localctx = new OutputListContext(this, this._ctx, this.state);
        this.enterRule(localctx, 152, VisualBasic6Parser.RULE_outputList);
        var _la = 0;
        try {
            this.state = 1570;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 218, this._ctx);
            switch (la_) {
                case 1:
                    this.enterOuterAlt(localctx, 1);
                    this.state = 1537;
                    this.outputList_Expression();
                    this.state = 1550;
                    this._errHandler.sync(this);
                    var _alt = this._interp.adaptivePredict(this._input, 212, this._ctx);
                    while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER) {
                        if (_alt === 1) {
                            this.state = 1539;
                            this._errHandler.sync(this);
                            _la = this._input.LA(1);
                            if (_la === VisualBasic6Parser.WS) {
                                this.state = 1538;
                                this.match(VisualBasic6Parser.WS);
                            }
                            this.state = 1541;
                            _la = this._input.LA(1);
                            if (!(_la === VisualBasic6Parser.COMMA || _la === VisualBasic6Parser.SEMICOLON)) {
                                this._errHandler.recoverInline(this);
                            }
                            else {
                                this._errHandler.reportMatch(this);
                                this.consume();
                            }
                            this.state = 1543;
                            this._errHandler.sync(this);
                            var la_ = this._interp.adaptivePredict(this._input, 210, this._ctx);
                            if (la_ === 1) {
                                this.state = 1542;
                                this.match(VisualBasic6Parser.WS);
                            }
                            this.state = 1546;
                            this._errHandler.sync(this);
                            var la_ = this._interp.adaptivePredict(this._input, 211, this._ctx);
                            if (la_ === 1) {
                                this.state = 1545;
                                this.outputList_Expression();
                            }
                        }
                        this.state = 1552;
                        this._errHandler.sync(this);
                        _alt = this._interp.adaptivePredict(this._input, 212, this._ctx);
                    }
                    break;
                case 2:
                    this.enterOuterAlt(localctx, 2);
                    this.state = 1554;
                    this._errHandler.sync(this);
                    var la_ = this._interp.adaptivePredict(this._input, 213, this._ctx);
                    if (la_ === 1) {
                        this.state = 1553;
                        this.outputList_Expression();
                    }
                    this.state = 1566;
                    this._errHandler.sync(this);
                    var _alt = 1;
                    do {
                        switch (_alt) {
                            case 1:
                                this.state = 1557;
                                this._errHandler.sync(this);
                                _la = this._input.LA(1);
                                if (_la === VisualBasic6Parser.WS) {
                                    this.state = 1556;
                                    this.match(VisualBasic6Parser.WS);
                                }
                                this.state = 1559;
                                _la = this._input.LA(1);
                                if (!(_la === VisualBasic6Parser.COMMA || _la === VisualBasic6Parser.SEMICOLON)) {
                                    this._errHandler.recoverInline(this);
                                }
                                else {
                                    this._errHandler.reportMatch(this);
                                    this.consume();
                                }
                                this.state = 1561;
                                this._errHandler.sync(this);
                                var la_ = this._interp.adaptivePredict(this._input, 215, this._ctx);
                                if (la_ === 1) {
                                    this.state = 1560;
                                    this.match(VisualBasic6Parser.WS);
                                }
                                this.state = 1564;
                                this._errHandler.sync(this);
                                var la_ = this._interp.adaptivePredict(this._input, 216, this._ctx);
                                if (la_ === 1) {
                                    this.state = 1563;
                                    this.outputList_Expression();
                                }
                                break;
                            default:
                                throw new antlr4_1.default.error.NoViableAltException(this);
                        }
                        this.state = 1568;
                        this._errHandler.sync(this);
                        _alt = this._interp.adaptivePredict(this._input, 217, this._ctx);
                    } while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER);
                    break;
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    outputList_Expression() {
        let localctx = new OutputList_ExpressionContext(this, this._ctx, this.state);
        this.enterRule(localctx, 154, VisualBasic6Parser.RULE_outputList_Expression);
        var _la = 0;
        try {
            this.state = 1589;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 223, this._ctx);
            switch (la_) {
                case 1:
                    this.enterOuterAlt(localctx, 1);
                    this.state = 1572;
                    _la = this._input.LA(1);
                    if (!(_la === VisualBasic6Parser.SPC || _la === VisualBasic6Parser.TAB)) {
                        this._errHandler.recoverInline(this);
                    }
                    else {
                        this._errHandler.reportMatch(this);
                        this.consume();
                    }
                    this.state = 1586;
                    this._errHandler.sync(this);
                    var la_ = this._interp.adaptivePredict(this._input, 222, this._ctx);
                    if (la_ === 1) {
                        this.state = 1574;
                        this._errHandler.sync(this);
                        _la = this._input.LA(1);
                        if (_la === VisualBasic6Parser.WS) {
                            this.state = 1573;
                            this.match(VisualBasic6Parser.WS);
                        }
                        this.state = 1576;
                        this.match(VisualBasic6Parser.LPAREN);
                        this.state = 1578;
                        this._errHandler.sync(this);
                        var la_ = this._interp.adaptivePredict(this._input, 220, this._ctx);
                        if (la_ === 1) {
                            this.state = 1577;
                            this.match(VisualBasic6Parser.WS);
                        }
                        this.state = 1580;
                        this.argsCall();
                        this.state = 1582;
                        this._errHandler.sync(this);
                        _la = this._input.LA(1);
                        if (_la === VisualBasic6Parser.WS) {
                            this.state = 1581;
                            this.match(VisualBasic6Parser.WS);
                        }
                        this.state = 1584;
                        this.match(VisualBasic6Parser.RPAREN);
                    }
                    break;
                case 2:
                    this.enterOuterAlt(localctx, 2);
                    this.state = 1588;
                    this.valueStmt(0);
                    break;
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    printStmt() {
        let localctx = new PrintStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 156, VisualBasic6Parser.RULE_printStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1591;
            this.match(VisualBasic6Parser.PRINT);
            this.state = 1592;
            this.match(VisualBasic6Parser.WS);
            this.state = 1593;
            this.valueStmt(0);
            this.state = 1595;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 1594;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1597;
            this.match(VisualBasic6Parser.COMMA);
            this.state = 1602;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 226, this._ctx);
            if (la_ === 1) {
                this.state = 1599;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 225, this._ctx);
                if (la_ === 1) {
                    this.state = 1598;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 1601;
                this.outputList();
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    propertyGetStmt() {
        let localctx = new PropertyGetStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 158, VisualBasic6Parser.RULE_propertyGetStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1607;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.FRIEND || _la === VisualBasic6Parser.GLOBAL || _la === VisualBasic6Parser.PRIVATE || _la === VisualBasic6Parser.PUBLIC) {
                this.state = 1604;
                this.visibility();
                this.state = 1605;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1611;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.STATIC) {
                this.state = 1609;
                this.match(VisualBasic6Parser.STATIC);
                this.state = 1610;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1613;
            this.match(VisualBasic6Parser.PROPERTY_GET);
            this.state = 1614;
            this.match(VisualBasic6Parser.WS);
            this.state = 1615;
            this.ambiguousIdentifier();
            this.state = 1617;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (((((_la - 178)) & ~0x1f) == 0 && ((1 << (_la - 178)) & ((1 << (VisualBasic6Parser.AMPERSAND - 178)) | (1 << (VisualBasic6Parser.AT - 178)) | (1 << (VisualBasic6Parser.DOLLAR - 178)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 178)) | (1 << (VisualBasic6Parser.HASH - 178)) | (1 << (VisualBasic6Parser.PERCENT - 178)))) !== 0)) {
                this.state = 1616;
                this.typeHint();
            }
            this.state = 1623;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 231, this._ctx);
            if (la_ === 1) {
                this.state = 1620;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === VisualBasic6Parser.WS) {
                    this.state = 1619;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 1622;
                this.argList();
            }
            this.state = 1627;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 1625;
                this.match(VisualBasic6Parser.WS);
                this.state = 1626;
                this.asTypeClause();
            }
            this.state = 1630;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 1629;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 1632;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while (_la === VisualBasic6Parser.NEWLINE);
            this.state = 1640;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFCUR - 32)) | (1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)) | (1 << (VisualBasic6Parser.EXIT_DO - 32)) | (1 << (VisualBasic6Parser.EXIT_FOR - 32)) | (1 << (VisualBasic6Parser.EXIT_FUNCTION - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (VisualBasic6Parser.EXIT_PROPERTY - 64)) | (1 << (VisualBasic6Parser.EXIT_SUB - 64)) | (1 << (VisualBasic6Parser.FALSE - 64)) | (1 << (VisualBasic6Parser.FILECOPY - 64)) | (1 << (VisualBasic6Parser.FRIEND - 64)) | (1 << (VisualBasic6Parser.FOR - 64)) | (1 << (VisualBasic6Parser.FUNCTION - 64)) | (1 << (VisualBasic6Parser.GET - 64)) | (1 << (VisualBasic6Parser.GLOBAL - 64)) | (1 << (VisualBasic6Parser.GOSUB - 64)) | (1 << (VisualBasic6Parser.GOTO - 64)) | (1 << (VisualBasic6Parser.IF - 64)) | (1 << (VisualBasic6Parser.IMP - 64)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 64)) | (1 << (VisualBasic6Parser.IN - 64)) | (1 << (VisualBasic6Parser.INPUT - 64)) | (1 << (VisualBasic6Parser.IS - 64)) | (1 << (VisualBasic6Parser.INTEGER - 64)) | (1 << (VisualBasic6Parser.KILL - 64)) | (1 << (VisualBasic6Parser.LOAD - 64)) | (1 << (VisualBasic6Parser.LOCK - 64)) | (1 << (VisualBasic6Parser.LONG - 64)) | (1 << (VisualBasic6Parser.LOOP - 64)) | (1 << (VisualBasic6Parser.LEN - 64)) | (1 << (VisualBasic6Parser.LET - 64)) | (1 << (VisualBasic6Parser.LIB - 64)) | (1 << (VisualBasic6Parser.LIKE - 64)) | (1 << (VisualBasic6Parser.LINE_INPUT - 64)) | (1 << (VisualBasic6Parser.LSET - 64)))) !== 0) || ((((_la - 96)) & ~0x1f) == 0 && ((1 << (_la - 96)) & ((1 << (VisualBasic6Parser.MACRO_IF - 96)) | (1 << (VisualBasic6Parser.ME - 96)) | (1 << (VisualBasic6Parser.MID - 96)) | (1 << (VisualBasic6Parser.MKDIR - 96)) | (1 << (VisualBasic6Parser.MOD - 96)) | (1 << (VisualBasic6Parser.NAME - 96)) | (1 << (VisualBasic6Parser.NEXT - 96)) | (1 << (VisualBasic6Parser.NEW - 96)) | (1 << (VisualBasic6Parser.NOT - 96)) | (1 << (VisualBasic6Parser.NOTHING - 96)) | (1 << (VisualBasic6Parser.NULL_ - 96)) | (1 << (VisualBasic6Parser.OBJECT - 96)) | (1 << (VisualBasic6Parser.ON - 96)) | (1 << (VisualBasic6Parser.ON_ERROR - 96)) | (1 << (VisualBasic6Parser.ON_LOCAL_ERROR - 96)) | (1 << (VisualBasic6Parser.OPEN - 96)) | (1 << (VisualBasic6Parser.OPTIONAL - 96)) | (1 << (VisualBasic6Parser.OR - 96)) | (1 << (VisualBasic6Parser.OUTPUT - 96)) | (1 << (VisualBasic6Parser.PARAMARRAY - 96)) | (1 << (VisualBasic6Parser.PRESERVE - 96)) | (1 << (VisualBasic6Parser.PRINT - 96)) | (1 << (VisualBasic6Parser.PRIVATE - 96)))) !== 0) || ((((_la - 129)) & ~0x1f) == 0 && ((1 << (_la - 129)) & ((1 << (VisualBasic6Parser.PUBLIC - 129)) | (1 << (VisualBasic6Parser.PUT - 129)) | (1 << (VisualBasic6Parser.RANDOM - 129)) | (1 << (VisualBasic6Parser.RANDOMIZE - 129)) | (1 << (VisualBasic6Parser.RAISEEVENT - 129)) | (1 << (VisualBasic6Parser.READ - 129)) | (1 << (VisualBasic6Parser.REDIM - 129)) | (1 << (VisualBasic6Parser.REM - 129)) | (1 << (VisualBasic6Parser.RESET - 129)) | (1 << (VisualBasic6Parser.RESUME - 129)) | (1 << (VisualBasic6Parser.RETURN - 129)) | (1 << (VisualBasic6Parser.RMDIR - 129)) | (1 << (VisualBasic6Parser.RSET - 129)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 129)) | (1 << (VisualBasic6Parser.SAVESETTING - 129)) | (1 << (VisualBasic6Parser.SEEK - 129)) | (1 << (VisualBasic6Parser.SELECT - 129)) | (1 << (VisualBasic6Parser.SENDKEYS - 129)) | (1 << (VisualBasic6Parser.SET - 129)) | (1 << (VisualBasic6Parser.SETATTR - 129)) | (1 << (VisualBasic6Parser.SHARED - 129)) | (1 << (VisualBasic6Parser.SINGLE - 129)) | (1 << (VisualBasic6Parser.SPC - 129)) | (1 << (VisualBasic6Parser.STATIC - 129)) | (1 << (VisualBasic6Parser.STEP - 129)) | (1 << (VisualBasic6Parser.STOP - 129)) | (1 << (VisualBasic6Parser.STRING - 129)) | (1 << (VisualBasic6Parser.SUB - 129)) | (1 << (VisualBasic6Parser.TAB - 129)) | (1 << (VisualBasic6Parser.TEXT - 129)) | (1 << (VisualBasic6Parser.THEN - 129)))) !== 0) || ((((_la - 161)) & ~0x1f) == 0 && ((1 << (_la - 161)) & ((1 << (VisualBasic6Parser.TIME - 161)) | (1 << (VisualBasic6Parser.TO - 161)) | (1 << (VisualBasic6Parser.TRUE - 161)) | (1 << (VisualBasic6Parser.TYPE - 161)) | (1 << (VisualBasic6Parser.TYPEOF - 161)) | (1 << (VisualBasic6Parser.UNLOAD - 161)) | (1 << (VisualBasic6Parser.UNLOCK - 161)) | (1 << (VisualBasic6Parser.UNTIL - 161)) | (1 << (VisualBasic6Parser.VARIANT - 161)) | (1 << (VisualBasic6Parser.VERSION - 161)) | (1 << (VisualBasic6Parser.WEND - 161)) | (1 << (VisualBasic6Parser.WHILE - 161)) | (1 << (VisualBasic6Parser.WIDTH - 161)) | (1 << (VisualBasic6Parser.WITH - 161)) | (1 << (VisualBasic6Parser.WITHEVENTS - 161)) | (1 << (VisualBasic6Parser.WRITE - 161)) | (1 << (VisualBasic6Parser.XOR - 161)) | (1 << (VisualBasic6Parser.DOT - 161)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 161)))) !== 0) || ((((_la - 207)) & ~0x1f) == 0 && ((1 << (_la - 207)) & ((1 << (VisualBasic6Parser.L_SQUARE_BRACKET - 207)) | (1 << (VisualBasic6Parser.IDENTIFIER - 207)) | (1 << (VisualBasic6Parser.WS - 207)))) !== 0)) {
                this.state = 1634;
                this.block();
                this.state = 1636;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                do {
                    this.state = 1635;
                    this.match(VisualBasic6Parser.NEWLINE);
                    this.state = 1638;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                } while (_la === VisualBasic6Parser.NEWLINE);
            }
            this.state = 1642;
            this.match(VisualBasic6Parser.END_PROPERTY);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    propertySetStmt() {
        let localctx = new PropertySetStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 160, VisualBasic6Parser.RULE_propertySetStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1647;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.FRIEND || _la === VisualBasic6Parser.GLOBAL || _la === VisualBasic6Parser.PRIVATE || _la === VisualBasic6Parser.PUBLIC) {
                this.state = 1644;
                this.visibility();
                this.state = 1645;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1651;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.STATIC) {
                this.state = 1649;
                this.match(VisualBasic6Parser.STATIC);
                this.state = 1650;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1653;
            this.match(VisualBasic6Parser.PROPERTY_SET);
            this.state = 1654;
            this.match(VisualBasic6Parser.WS);
            this.state = 1655;
            this.ambiguousIdentifier();
            this.state = 1660;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.LPAREN || _la === VisualBasic6Parser.WS) {
                this.state = 1657;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === VisualBasic6Parser.WS) {
                    this.state = 1656;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 1659;
                this.argList();
            }
            this.state = 1663;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 1662;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 1665;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while (_la === VisualBasic6Parser.NEWLINE);
            this.state = 1673;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFCUR - 32)) | (1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)) | (1 << (VisualBasic6Parser.EXIT_DO - 32)) | (1 << (VisualBasic6Parser.EXIT_FOR - 32)) | (1 << (VisualBasic6Parser.EXIT_FUNCTION - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (VisualBasic6Parser.EXIT_PROPERTY - 64)) | (1 << (VisualBasic6Parser.EXIT_SUB - 64)) | (1 << (VisualBasic6Parser.FALSE - 64)) | (1 << (VisualBasic6Parser.FILECOPY - 64)) | (1 << (VisualBasic6Parser.FRIEND - 64)) | (1 << (VisualBasic6Parser.FOR - 64)) | (1 << (VisualBasic6Parser.FUNCTION - 64)) | (1 << (VisualBasic6Parser.GET - 64)) | (1 << (VisualBasic6Parser.GLOBAL - 64)) | (1 << (VisualBasic6Parser.GOSUB - 64)) | (1 << (VisualBasic6Parser.GOTO - 64)) | (1 << (VisualBasic6Parser.IF - 64)) | (1 << (VisualBasic6Parser.IMP - 64)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 64)) | (1 << (VisualBasic6Parser.IN - 64)) | (1 << (VisualBasic6Parser.INPUT - 64)) | (1 << (VisualBasic6Parser.IS - 64)) | (1 << (VisualBasic6Parser.INTEGER - 64)) | (1 << (VisualBasic6Parser.KILL - 64)) | (1 << (VisualBasic6Parser.LOAD - 64)) | (1 << (VisualBasic6Parser.LOCK - 64)) | (1 << (VisualBasic6Parser.LONG - 64)) | (1 << (VisualBasic6Parser.LOOP - 64)) | (1 << (VisualBasic6Parser.LEN - 64)) | (1 << (VisualBasic6Parser.LET - 64)) | (1 << (VisualBasic6Parser.LIB - 64)) | (1 << (VisualBasic6Parser.LIKE - 64)) | (1 << (VisualBasic6Parser.LINE_INPUT - 64)) | (1 << (VisualBasic6Parser.LSET - 64)))) !== 0) || ((((_la - 96)) & ~0x1f) == 0 && ((1 << (_la - 96)) & ((1 << (VisualBasic6Parser.MACRO_IF - 96)) | (1 << (VisualBasic6Parser.ME - 96)) | (1 << (VisualBasic6Parser.MID - 96)) | (1 << (VisualBasic6Parser.MKDIR - 96)) | (1 << (VisualBasic6Parser.MOD - 96)) | (1 << (VisualBasic6Parser.NAME - 96)) | (1 << (VisualBasic6Parser.NEXT - 96)) | (1 << (VisualBasic6Parser.NEW - 96)) | (1 << (VisualBasic6Parser.NOT - 96)) | (1 << (VisualBasic6Parser.NOTHING - 96)) | (1 << (VisualBasic6Parser.NULL_ - 96)) | (1 << (VisualBasic6Parser.OBJECT - 96)) | (1 << (VisualBasic6Parser.ON - 96)) | (1 << (VisualBasic6Parser.ON_ERROR - 96)) | (1 << (VisualBasic6Parser.ON_LOCAL_ERROR - 96)) | (1 << (VisualBasic6Parser.OPEN - 96)) | (1 << (VisualBasic6Parser.OPTIONAL - 96)) | (1 << (VisualBasic6Parser.OR - 96)) | (1 << (VisualBasic6Parser.OUTPUT - 96)) | (1 << (VisualBasic6Parser.PARAMARRAY - 96)) | (1 << (VisualBasic6Parser.PRESERVE - 96)) | (1 << (VisualBasic6Parser.PRINT - 96)) | (1 << (VisualBasic6Parser.PRIVATE - 96)))) !== 0) || ((((_la - 129)) & ~0x1f) == 0 && ((1 << (_la - 129)) & ((1 << (VisualBasic6Parser.PUBLIC - 129)) | (1 << (VisualBasic6Parser.PUT - 129)) | (1 << (VisualBasic6Parser.RANDOM - 129)) | (1 << (VisualBasic6Parser.RANDOMIZE - 129)) | (1 << (VisualBasic6Parser.RAISEEVENT - 129)) | (1 << (VisualBasic6Parser.READ - 129)) | (1 << (VisualBasic6Parser.REDIM - 129)) | (1 << (VisualBasic6Parser.REM - 129)) | (1 << (VisualBasic6Parser.RESET - 129)) | (1 << (VisualBasic6Parser.RESUME - 129)) | (1 << (VisualBasic6Parser.RETURN - 129)) | (1 << (VisualBasic6Parser.RMDIR - 129)) | (1 << (VisualBasic6Parser.RSET - 129)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 129)) | (1 << (VisualBasic6Parser.SAVESETTING - 129)) | (1 << (VisualBasic6Parser.SEEK - 129)) | (1 << (VisualBasic6Parser.SELECT - 129)) | (1 << (VisualBasic6Parser.SENDKEYS - 129)) | (1 << (VisualBasic6Parser.SET - 129)) | (1 << (VisualBasic6Parser.SETATTR - 129)) | (1 << (VisualBasic6Parser.SHARED - 129)) | (1 << (VisualBasic6Parser.SINGLE - 129)) | (1 << (VisualBasic6Parser.SPC - 129)) | (1 << (VisualBasic6Parser.STATIC - 129)) | (1 << (VisualBasic6Parser.STEP - 129)) | (1 << (VisualBasic6Parser.STOP - 129)) | (1 << (VisualBasic6Parser.STRING - 129)) | (1 << (VisualBasic6Parser.SUB - 129)) | (1 << (VisualBasic6Parser.TAB - 129)) | (1 << (VisualBasic6Parser.TEXT - 129)) | (1 << (VisualBasic6Parser.THEN - 129)))) !== 0) || ((((_la - 161)) & ~0x1f) == 0 && ((1 << (_la - 161)) & ((1 << (VisualBasic6Parser.TIME - 161)) | (1 << (VisualBasic6Parser.TO - 161)) | (1 << (VisualBasic6Parser.TRUE - 161)) | (1 << (VisualBasic6Parser.TYPE - 161)) | (1 << (VisualBasic6Parser.TYPEOF - 161)) | (1 << (VisualBasic6Parser.UNLOAD - 161)) | (1 << (VisualBasic6Parser.UNLOCK - 161)) | (1 << (VisualBasic6Parser.UNTIL - 161)) | (1 << (VisualBasic6Parser.VARIANT - 161)) | (1 << (VisualBasic6Parser.VERSION - 161)) | (1 << (VisualBasic6Parser.WEND - 161)) | (1 << (VisualBasic6Parser.WHILE - 161)) | (1 << (VisualBasic6Parser.WIDTH - 161)) | (1 << (VisualBasic6Parser.WITH - 161)) | (1 << (VisualBasic6Parser.WITHEVENTS - 161)) | (1 << (VisualBasic6Parser.WRITE - 161)) | (1 << (VisualBasic6Parser.XOR - 161)) | (1 << (VisualBasic6Parser.DOT - 161)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 161)))) !== 0) || ((((_la - 207)) & ~0x1f) == 0 && ((1 << (_la - 207)) & ((1 << (VisualBasic6Parser.L_SQUARE_BRACKET - 207)) | (1 << (VisualBasic6Parser.IDENTIFIER - 207)) | (1 << (VisualBasic6Parser.WS - 207)))) !== 0)) {
                this.state = 1667;
                this.block();
                this.state = 1669;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                do {
                    this.state = 1668;
                    this.match(VisualBasic6Parser.NEWLINE);
                    this.state = 1671;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                } while (_la === VisualBasic6Parser.NEWLINE);
            }
            this.state = 1675;
            this.match(VisualBasic6Parser.END_PROPERTY);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    propertyLetStmt() {
        let localctx = new PropertyLetStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 162, VisualBasic6Parser.RULE_propertyLetStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1680;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.FRIEND || _la === VisualBasic6Parser.GLOBAL || _la === VisualBasic6Parser.PRIVATE || _la === VisualBasic6Parser.PUBLIC) {
                this.state = 1677;
                this.visibility();
                this.state = 1678;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1684;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.STATIC) {
                this.state = 1682;
                this.match(VisualBasic6Parser.STATIC);
                this.state = 1683;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1686;
            this.match(VisualBasic6Parser.PROPERTY_LET);
            this.state = 1687;
            this.match(VisualBasic6Parser.WS);
            this.state = 1688;
            this.ambiguousIdentifier();
            this.state = 1693;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.LPAREN || _la === VisualBasic6Parser.WS) {
                this.state = 1690;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === VisualBasic6Parser.WS) {
                    this.state = 1689;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 1692;
                this.argList();
            }
            this.state = 1696;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 1695;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 1698;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while (_la === VisualBasic6Parser.NEWLINE);
            this.state = 1706;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFCUR - 32)) | (1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)) | (1 << (VisualBasic6Parser.EXIT_DO - 32)) | (1 << (VisualBasic6Parser.EXIT_FOR - 32)) | (1 << (VisualBasic6Parser.EXIT_FUNCTION - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (VisualBasic6Parser.EXIT_PROPERTY - 64)) | (1 << (VisualBasic6Parser.EXIT_SUB - 64)) | (1 << (VisualBasic6Parser.FALSE - 64)) | (1 << (VisualBasic6Parser.FILECOPY - 64)) | (1 << (VisualBasic6Parser.FRIEND - 64)) | (1 << (VisualBasic6Parser.FOR - 64)) | (1 << (VisualBasic6Parser.FUNCTION - 64)) | (1 << (VisualBasic6Parser.GET - 64)) | (1 << (VisualBasic6Parser.GLOBAL - 64)) | (1 << (VisualBasic6Parser.GOSUB - 64)) | (1 << (VisualBasic6Parser.GOTO - 64)) | (1 << (VisualBasic6Parser.IF - 64)) | (1 << (VisualBasic6Parser.IMP - 64)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 64)) | (1 << (VisualBasic6Parser.IN - 64)) | (1 << (VisualBasic6Parser.INPUT - 64)) | (1 << (VisualBasic6Parser.IS - 64)) | (1 << (VisualBasic6Parser.INTEGER - 64)) | (1 << (VisualBasic6Parser.KILL - 64)) | (1 << (VisualBasic6Parser.LOAD - 64)) | (1 << (VisualBasic6Parser.LOCK - 64)) | (1 << (VisualBasic6Parser.LONG - 64)) | (1 << (VisualBasic6Parser.LOOP - 64)) | (1 << (VisualBasic6Parser.LEN - 64)) | (1 << (VisualBasic6Parser.LET - 64)) | (1 << (VisualBasic6Parser.LIB - 64)) | (1 << (VisualBasic6Parser.LIKE - 64)) | (1 << (VisualBasic6Parser.LINE_INPUT - 64)) | (1 << (VisualBasic6Parser.LSET - 64)))) !== 0) || ((((_la - 96)) & ~0x1f) == 0 && ((1 << (_la - 96)) & ((1 << (VisualBasic6Parser.MACRO_IF - 96)) | (1 << (VisualBasic6Parser.ME - 96)) | (1 << (VisualBasic6Parser.MID - 96)) | (1 << (VisualBasic6Parser.MKDIR - 96)) | (1 << (VisualBasic6Parser.MOD - 96)) | (1 << (VisualBasic6Parser.NAME - 96)) | (1 << (VisualBasic6Parser.NEXT - 96)) | (1 << (VisualBasic6Parser.NEW - 96)) | (1 << (VisualBasic6Parser.NOT - 96)) | (1 << (VisualBasic6Parser.NOTHING - 96)) | (1 << (VisualBasic6Parser.NULL_ - 96)) | (1 << (VisualBasic6Parser.OBJECT - 96)) | (1 << (VisualBasic6Parser.ON - 96)) | (1 << (VisualBasic6Parser.ON_ERROR - 96)) | (1 << (VisualBasic6Parser.ON_LOCAL_ERROR - 96)) | (1 << (VisualBasic6Parser.OPEN - 96)) | (1 << (VisualBasic6Parser.OPTIONAL - 96)) | (1 << (VisualBasic6Parser.OR - 96)) | (1 << (VisualBasic6Parser.OUTPUT - 96)) | (1 << (VisualBasic6Parser.PARAMARRAY - 96)) | (1 << (VisualBasic6Parser.PRESERVE - 96)) | (1 << (VisualBasic6Parser.PRINT - 96)) | (1 << (VisualBasic6Parser.PRIVATE - 96)))) !== 0) || ((((_la - 129)) & ~0x1f) == 0 && ((1 << (_la - 129)) & ((1 << (VisualBasic6Parser.PUBLIC - 129)) | (1 << (VisualBasic6Parser.PUT - 129)) | (1 << (VisualBasic6Parser.RANDOM - 129)) | (1 << (VisualBasic6Parser.RANDOMIZE - 129)) | (1 << (VisualBasic6Parser.RAISEEVENT - 129)) | (1 << (VisualBasic6Parser.READ - 129)) | (1 << (VisualBasic6Parser.REDIM - 129)) | (1 << (VisualBasic6Parser.REM - 129)) | (1 << (VisualBasic6Parser.RESET - 129)) | (1 << (VisualBasic6Parser.RESUME - 129)) | (1 << (VisualBasic6Parser.RETURN - 129)) | (1 << (VisualBasic6Parser.RMDIR - 129)) | (1 << (VisualBasic6Parser.RSET - 129)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 129)) | (1 << (VisualBasic6Parser.SAVESETTING - 129)) | (1 << (VisualBasic6Parser.SEEK - 129)) | (1 << (VisualBasic6Parser.SELECT - 129)) | (1 << (VisualBasic6Parser.SENDKEYS - 129)) | (1 << (VisualBasic6Parser.SET - 129)) | (1 << (VisualBasic6Parser.SETATTR - 129)) | (1 << (VisualBasic6Parser.SHARED - 129)) | (1 << (VisualBasic6Parser.SINGLE - 129)) | (1 << (VisualBasic6Parser.SPC - 129)) | (1 << (VisualBasic6Parser.STATIC - 129)) | (1 << (VisualBasic6Parser.STEP - 129)) | (1 << (VisualBasic6Parser.STOP - 129)) | (1 << (VisualBasic6Parser.STRING - 129)) | (1 << (VisualBasic6Parser.SUB - 129)) | (1 << (VisualBasic6Parser.TAB - 129)) | (1 << (VisualBasic6Parser.TEXT - 129)) | (1 << (VisualBasic6Parser.THEN - 129)))) !== 0) || ((((_la - 161)) & ~0x1f) == 0 && ((1 << (_la - 161)) & ((1 << (VisualBasic6Parser.TIME - 161)) | (1 << (VisualBasic6Parser.TO - 161)) | (1 << (VisualBasic6Parser.TRUE - 161)) | (1 << (VisualBasic6Parser.TYPE - 161)) | (1 << (VisualBasic6Parser.TYPEOF - 161)) | (1 << (VisualBasic6Parser.UNLOAD - 161)) | (1 << (VisualBasic6Parser.UNLOCK - 161)) | (1 << (VisualBasic6Parser.UNTIL - 161)) | (1 << (VisualBasic6Parser.VARIANT - 161)) | (1 << (VisualBasic6Parser.VERSION - 161)) | (1 << (VisualBasic6Parser.WEND - 161)) | (1 << (VisualBasic6Parser.WHILE - 161)) | (1 << (VisualBasic6Parser.WIDTH - 161)) | (1 << (VisualBasic6Parser.WITH - 161)) | (1 << (VisualBasic6Parser.WITHEVENTS - 161)) | (1 << (VisualBasic6Parser.WRITE - 161)) | (1 << (VisualBasic6Parser.XOR - 161)) | (1 << (VisualBasic6Parser.DOT - 161)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 161)))) !== 0) || ((((_la - 207)) & ~0x1f) == 0 && ((1 << (_la - 207)) & ((1 << (VisualBasic6Parser.L_SQUARE_BRACKET - 207)) | (1 << (VisualBasic6Parser.IDENTIFIER - 207)) | (1 << (VisualBasic6Parser.WS - 207)))) !== 0)) {
                this.state = 1700;
                this.block();
                this.state = 1702;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                do {
                    this.state = 1701;
                    this.match(VisualBasic6Parser.NEWLINE);
                    this.state = 1704;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                } while (_la === VisualBasic6Parser.NEWLINE);
            }
            this.state = 1708;
            this.match(VisualBasic6Parser.END_PROPERTY);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    putStmt() {
        let localctx = new PutStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 164, VisualBasic6Parser.RULE_putStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1710;
            this.match(VisualBasic6Parser.PUT);
            this.state = 1711;
            this.match(VisualBasic6Parser.WS);
            this.state = 1712;
            this.valueStmt(0);
            this.state = 1714;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 1713;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1716;
            this.match(VisualBasic6Parser.COMMA);
            this.state = 1718;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 251, this._ctx);
            if (la_ === 1) {
                this.state = 1717;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1721;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 252, this._ctx);
            if (la_ === 1) {
                this.state = 1720;
                this.valueStmt(0);
            }
            this.state = 1724;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 1723;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1726;
            this.match(VisualBasic6Parser.COMMA);
            this.state = 1728;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 254, this._ctx);
            if (la_ === 1) {
                this.state = 1727;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1730;
            this.valueStmt(0);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    raiseEventStmt() {
        let localctx = new RaiseEventStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 166, VisualBasic6Parser.RULE_raiseEventStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1732;
            this.match(VisualBasic6Parser.RAISEEVENT);
            this.state = 1733;
            this.match(VisualBasic6Parser.WS);
            this.state = 1734;
            this.ambiguousIdentifier();
            this.state = 1749;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 259, this._ctx);
            if (la_ === 1) {
                this.state = 1736;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === VisualBasic6Parser.WS) {
                    this.state = 1735;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 1738;
                this.match(VisualBasic6Parser.LPAREN);
                this.state = 1740;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 256, this._ctx);
                if (la_ === 1) {
                    this.state = 1739;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 1746;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFCUR - 32)) | (1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)))) !== 0) || ((((_la - 66)) & ~0x1f) == 0 && ((1 << (_la - 66)) & ((1 << (VisualBasic6Parser.FALSE - 66)) | (1 << (VisualBasic6Parser.FILECOPY - 66)) | (1 << (VisualBasic6Parser.FRIEND - 66)) | (1 << (VisualBasic6Parser.FOR - 66)) | (1 << (VisualBasic6Parser.FUNCTION - 66)) | (1 << (VisualBasic6Parser.GET - 66)) | (1 << (VisualBasic6Parser.GLOBAL - 66)) | (1 << (VisualBasic6Parser.GOSUB - 66)) | (1 << (VisualBasic6Parser.GOTO - 66)) | (1 << (VisualBasic6Parser.IF - 66)) | (1 << (VisualBasic6Parser.IMP - 66)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 66)) | (1 << (VisualBasic6Parser.IN - 66)) | (1 << (VisualBasic6Parser.INPUT - 66)) | (1 << (VisualBasic6Parser.IS - 66)) | (1 << (VisualBasic6Parser.INTEGER - 66)) | (1 << (VisualBasic6Parser.KILL - 66)) | (1 << (VisualBasic6Parser.LOAD - 66)) | (1 << (VisualBasic6Parser.LOCK - 66)) | (1 << (VisualBasic6Parser.LONG - 66)) | (1 << (VisualBasic6Parser.LOOP - 66)) | (1 << (VisualBasic6Parser.LEN - 66)) | (1 << (VisualBasic6Parser.LET - 66)) | (1 << (VisualBasic6Parser.LIB - 66)) | (1 << (VisualBasic6Parser.LIKE - 66)) | (1 << (VisualBasic6Parser.LSET - 66)))) !== 0) || ((((_la - 100)) & ~0x1f) == 0 && ((1 << (_la - 100)) & ((1 << (VisualBasic6Parser.ME - 100)) | (1 << (VisualBasic6Parser.MID - 100)) | (1 << (VisualBasic6Parser.MKDIR - 100)) | (1 << (VisualBasic6Parser.MOD - 100)) | (1 << (VisualBasic6Parser.NAME - 100)) | (1 << (VisualBasic6Parser.NEXT - 100)) | (1 << (VisualBasic6Parser.NEW - 100)) | (1 << (VisualBasic6Parser.NOT - 100)) | (1 << (VisualBasic6Parser.NOTHING - 100)) | (1 << (VisualBasic6Parser.NULL_ - 100)) | (1 << (VisualBasic6Parser.OBJECT - 100)) | (1 << (VisualBasic6Parser.ON - 100)) | (1 << (VisualBasic6Parser.OPEN - 100)) | (1 << (VisualBasic6Parser.OPTIONAL - 100)) | (1 << (VisualBasic6Parser.OR - 100)) | (1 << (VisualBasic6Parser.OUTPUT - 100)) | (1 << (VisualBasic6Parser.PARAMARRAY - 100)) | (1 << (VisualBasic6Parser.PRESERVE - 100)) | (1 << (VisualBasic6Parser.PRINT - 100)) | (1 << (VisualBasic6Parser.PRIVATE - 100)) | (1 << (VisualBasic6Parser.PUBLIC - 100)) | (1 << (VisualBasic6Parser.PUT - 100)) | (1 << (VisualBasic6Parser.RANDOM - 100)))) !== 0) || ((((_la - 132)) & ~0x1f) == 0 && ((1 << (_la - 132)) & ((1 << (VisualBasic6Parser.RANDOMIZE - 132)) | (1 << (VisualBasic6Parser.RAISEEVENT - 132)) | (1 << (VisualBasic6Parser.READ - 132)) | (1 << (VisualBasic6Parser.REDIM - 132)) | (1 << (VisualBasic6Parser.REM - 132)) | (1 << (VisualBasic6Parser.RESET - 132)) | (1 << (VisualBasic6Parser.RESUME - 132)) | (1 << (VisualBasic6Parser.RETURN - 132)) | (1 << (VisualBasic6Parser.RMDIR - 132)) | (1 << (VisualBasic6Parser.RSET - 132)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 132)) | (1 << (VisualBasic6Parser.SAVESETTING - 132)) | (1 << (VisualBasic6Parser.SEEK - 132)) | (1 << (VisualBasic6Parser.SELECT - 132)) | (1 << (VisualBasic6Parser.SENDKEYS - 132)) | (1 << (VisualBasic6Parser.SET - 132)) | (1 << (VisualBasic6Parser.SETATTR - 132)) | (1 << (VisualBasic6Parser.SHARED - 132)) | (1 << (VisualBasic6Parser.SINGLE - 132)) | (1 << (VisualBasic6Parser.SPC - 132)) | (1 << (VisualBasic6Parser.STATIC - 132)) | (1 << (VisualBasic6Parser.STEP - 132)) | (1 << (VisualBasic6Parser.STOP - 132)) | (1 << (VisualBasic6Parser.STRING - 132)) | (1 << (VisualBasic6Parser.SUB - 132)) | (1 << (VisualBasic6Parser.TAB - 132)) | (1 << (VisualBasic6Parser.TEXT - 132)) | (1 << (VisualBasic6Parser.THEN - 132)) | (1 << (VisualBasic6Parser.TIME - 132)) | (1 << (VisualBasic6Parser.TO - 132)) | (1 << (VisualBasic6Parser.TRUE - 132)))) !== 0) || ((((_la - 164)) & ~0x1f) == 0 && ((1 << (_la - 164)) & ((1 << (VisualBasic6Parser.TYPE - 164)) | (1 << (VisualBasic6Parser.TYPEOF - 164)) | (1 << (VisualBasic6Parser.UNLOAD - 164)) | (1 << (VisualBasic6Parser.UNLOCK - 164)) | (1 << (VisualBasic6Parser.UNTIL - 164)) | (1 << (VisualBasic6Parser.VARIANT - 164)) | (1 << (VisualBasic6Parser.VERSION - 164)) | (1 << (VisualBasic6Parser.WEND - 164)) | (1 << (VisualBasic6Parser.WHILE - 164)) | (1 << (VisualBasic6Parser.WIDTH - 164)) | (1 << (VisualBasic6Parser.WITH - 164)) | (1 << (VisualBasic6Parser.WITHEVENTS - 164)) | (1 << (VisualBasic6Parser.WRITE - 164)) | (1 << (VisualBasic6Parser.XOR - 164)) | (1 << (VisualBasic6Parser.COMMA - 164)) | (1 << (VisualBasic6Parser.DOT - 164)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 164)) | (1 << (VisualBasic6Parser.LPAREN - 164)))) !== 0) || ((((_la - 196)) & ~0x1f) == 0 && ((1 << (_la - 196)) & ((1 << (VisualBasic6Parser.MINUS - 196)) | (1 << (VisualBasic6Parser.PLUS - 196)) | (1 << (VisualBasic6Parser.SEMICOLON - 196)) | (1 << (VisualBasic6Parser.L_SQUARE_BRACKET - 196)) | (1 << (VisualBasic6Parser.STRINGLITERAL - 196)) | (1 << (VisualBasic6Parser.DATELITERAL - 196)) | (1 << (VisualBasic6Parser.COLORLITERAL - 196)) | (1 << (VisualBasic6Parser.INTEGERLITERAL - 196)) | (1 << (VisualBasic6Parser.DOUBLELITERAL - 196)) | (1 << (VisualBasic6Parser.FILENUMBER - 196)) | (1 << (VisualBasic6Parser.OCTALLITERAL - 196)) | (1 << (VisualBasic6Parser.IDENTIFIER - 196)) | (1 << (VisualBasic6Parser.WS - 196)))) !== 0)) {
                    this.state = 1742;
                    this.argsCall();
                    this.state = 1744;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if (_la === VisualBasic6Parser.WS) {
                        this.state = 1743;
                        this.match(VisualBasic6Parser.WS);
                    }
                }
                this.state = 1748;
                this.match(VisualBasic6Parser.RPAREN);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    randomizeStmt() {
        let localctx = new RandomizeStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 168, VisualBasic6Parser.RULE_randomizeStmt);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1751;
            this.match(VisualBasic6Parser.RANDOMIZE);
            this.state = 1754;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 260, this._ctx);
            if (la_ === 1) {
                this.state = 1752;
                this.match(VisualBasic6Parser.WS);
                this.state = 1753;
                this.valueStmt(0);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    redimStmt() {
        let localctx = new RedimStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 170, VisualBasic6Parser.RULE_redimStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1756;
            this.match(VisualBasic6Parser.REDIM);
            this.state = 1757;
            this.match(VisualBasic6Parser.WS);
            this.state = 1760;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 261, this._ctx);
            if (la_ === 1) {
                this.state = 1758;
                this.match(VisualBasic6Parser.PRESERVE);
                this.state = 1759;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1762;
            this.redimSubStmt();
            this.state = 1773;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input, 264, this._ctx);
            while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER) {
                if (_alt === 1) {
                    this.state = 1764;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if (_la === VisualBasic6Parser.WS) {
                        this.state = 1763;
                        this.match(VisualBasic6Parser.WS);
                    }
                    this.state = 1766;
                    this.match(VisualBasic6Parser.COMMA);
                    this.state = 1768;
                    this._errHandler.sync(this);
                    var la_ = this._interp.adaptivePredict(this._input, 263, this._ctx);
                    if (la_ === 1) {
                        this.state = 1767;
                        this.match(VisualBasic6Parser.WS);
                    }
                    this.state = 1770;
                    this.redimSubStmt();
                }
                this.state = 1775;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input, 264, this._ctx);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    redimSubStmt() {
        let localctx = new RedimSubStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 172, VisualBasic6Parser.RULE_redimSubStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1776;
            this.implicitCallStmt_InStmt();
            this.state = 1778;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 1777;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1780;
            this.match(VisualBasic6Parser.LPAREN);
            this.state = 1782;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 266, this._ctx);
            if (la_ === 1) {
                this.state = 1781;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1784;
            this.subscripts();
            this.state = 1786;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 1785;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1788;
            this.match(VisualBasic6Parser.RPAREN);
            this.state = 1791;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 268, this._ctx);
            if (la_ === 1) {
                this.state = 1789;
                this.match(VisualBasic6Parser.WS);
                this.state = 1790;
                this.asTypeClause();
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    resetStmt() {
        let localctx = new ResetStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 174, VisualBasic6Parser.RULE_resetStmt);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1793;
            this.match(VisualBasic6Parser.RESET);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    resumeStmt() {
        let localctx = new ResumeStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 176, VisualBasic6Parser.RULE_resumeStmt);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1795;
            this.match(VisualBasic6Parser.RESUME);
            this.state = 1801;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 270, this._ctx);
            if (la_ === 1) {
                this.state = 1796;
                this.match(VisualBasic6Parser.WS);
                this.state = 1799;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 269, this._ctx);
                switch (la_) {
                    case 1:
                        this.state = 1797;
                        this.match(VisualBasic6Parser.NEXT);
                        break;
                    case 2:
                        this.state = 1798;
                        this.ambiguousIdentifier();
                        break;
                }
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    returnStmt() {
        let localctx = new ReturnStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 178, VisualBasic6Parser.RULE_returnStmt);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1803;
            this.match(VisualBasic6Parser.RETURN);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    rmdirStmt() {
        let localctx = new RmdirStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 180, VisualBasic6Parser.RULE_rmdirStmt);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1805;
            this.match(VisualBasic6Parser.RMDIR);
            this.state = 1806;
            this.match(VisualBasic6Parser.WS);
            this.state = 1807;
            this.valueStmt(0);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    rsetStmt() {
        let localctx = new RsetStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 182, VisualBasic6Parser.RULE_rsetStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1809;
            this.match(VisualBasic6Parser.RSET);
            this.state = 1810;
            this.match(VisualBasic6Parser.WS);
            this.state = 1811;
            this.implicitCallStmt_InStmt();
            this.state = 1813;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 1812;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1815;
            this.match(VisualBasic6Parser.EQ);
            this.state = 1817;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 272, this._ctx);
            if (la_ === 1) {
                this.state = 1816;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1819;
            this.valueStmt(0);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    savepictureStmt() {
        let localctx = new SavepictureStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 184, VisualBasic6Parser.RULE_savepictureStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1821;
            this.match(VisualBasic6Parser.SAVEPICTURE);
            this.state = 1822;
            this.match(VisualBasic6Parser.WS);
            this.state = 1823;
            this.valueStmt(0);
            this.state = 1825;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 1824;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1827;
            this.match(VisualBasic6Parser.COMMA);
            this.state = 1829;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 274, this._ctx);
            if (la_ === 1) {
                this.state = 1828;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1831;
            this.valueStmt(0);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    saveSettingStmt() {
        let localctx = new SaveSettingStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 186, VisualBasic6Parser.RULE_saveSettingStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1833;
            this.match(VisualBasic6Parser.SAVESETTING);
            this.state = 1834;
            this.match(VisualBasic6Parser.WS);
            this.state = 1835;
            this.valueStmt(0);
            this.state = 1837;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 1836;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1839;
            this.match(VisualBasic6Parser.COMMA);
            this.state = 1841;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 276, this._ctx);
            if (la_ === 1) {
                this.state = 1840;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1843;
            this.valueStmt(0);
            this.state = 1845;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 1844;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1847;
            this.match(VisualBasic6Parser.COMMA);
            this.state = 1849;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 278, this._ctx);
            if (la_ === 1) {
                this.state = 1848;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1851;
            this.valueStmt(0);
            this.state = 1853;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 1852;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1855;
            this.match(VisualBasic6Parser.COMMA);
            this.state = 1857;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 280, this._ctx);
            if (la_ === 1) {
                this.state = 1856;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1859;
            this.valueStmt(0);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    seekStmt() {
        let localctx = new SeekStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 188, VisualBasic6Parser.RULE_seekStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1861;
            this.match(VisualBasic6Parser.SEEK);
            this.state = 1862;
            this.match(VisualBasic6Parser.WS);
            this.state = 1863;
            this.valueStmt(0);
            this.state = 1865;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 1864;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1867;
            this.match(VisualBasic6Parser.COMMA);
            this.state = 1869;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 282, this._ctx);
            if (la_ === 1) {
                this.state = 1868;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1871;
            this.valueStmt(0);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    selectCaseStmt() {
        let localctx = new SelectCaseStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 190, VisualBasic6Parser.RULE_selectCaseStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1873;
            this.match(VisualBasic6Parser.SELECT);
            this.state = 1874;
            this.match(VisualBasic6Parser.WS);
            this.state = 1875;
            this.match(VisualBasic6Parser.CASE);
            this.state = 1876;
            this.match(VisualBasic6Parser.WS);
            this.state = 1877;
            this.valueStmt(0);
            this.state = 1879;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 1878;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 1881;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while (_la === VisualBasic6Parser.NEWLINE);
            this.state = 1886;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while (_la === VisualBasic6Parser.CASE) {
                this.state = 1883;
                this.sC_Case();
                this.state = 1888;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            this.state = 1890;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 1889;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1892;
            this.match(VisualBasic6Parser.END_SELECT);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    sC_Case() {
        let localctx = new SC_CaseContext(this, this._ctx, this.state);
        this.enterRule(localctx, 192, VisualBasic6Parser.RULE_sC_Case);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1894;
            this.match(VisualBasic6Parser.CASE);
            this.state = 1895;
            this.match(VisualBasic6Parser.WS);
            this.state = 1896;
            this.sC_Cond();
            this.state = 1898;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 286, this._ctx);
            if (la_ === 1) {
                this.state = 1897;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1914;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 290, this._ctx);
            switch (la_) {
                case 1:
                    this.state = 1901;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if (_la === VisualBasic6Parser.COLON) {
                        this.state = 1900;
                        this.match(VisualBasic6Parser.COLON);
                    }
                    this.state = 1906;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    while (_la === VisualBasic6Parser.NEWLINE) {
                        this.state = 1903;
                        this.match(VisualBasic6Parser.NEWLINE);
                        this.state = 1908;
                        this._errHandler.sync(this);
                        _la = this._input.LA(1);
                    }
                    break;
                case 2:
                    this.state = 1910;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    do {
                        this.state = 1909;
                        this.match(VisualBasic6Parser.NEWLINE);
                        this.state = 1912;
                        this._errHandler.sync(this);
                        _la = this._input.LA(1);
                    } while (_la === VisualBasic6Parser.NEWLINE);
                    break;
            }
            this.state = 1922;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 292, this._ctx);
            if (la_ === 1) {
                this.state = 1916;
                this.block();
                this.state = 1918;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                do {
                    this.state = 1917;
                    this.match(VisualBasic6Parser.NEWLINE);
                    this.state = 1920;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                } while (_la === VisualBasic6Parser.NEWLINE);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    sC_Cond() {
        let localctx = new SC_CondContext(this, this._ctx, this.state);
        this.enterRule(localctx, 194, VisualBasic6Parser.RULE_sC_Cond);
        var _la = 0;
        try {
            this.state = 1939;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 296, this._ctx);
            switch (la_) {
                case 1:
                    localctx = new CaseCondElseContext(this, localctx);
                    this.enterOuterAlt(localctx, 1);
                    this.state = 1924;
                    this.match(VisualBasic6Parser.ELSE);
                    break;
                case 2:
                    localctx = new CaseCondExprContext(this, localctx);
                    this.enterOuterAlt(localctx, 2);
                    this.state = 1925;
                    this.sC_CondExpr();
                    this.state = 1936;
                    this._errHandler.sync(this);
                    var _alt = this._interp.adaptivePredict(this._input, 295, this._ctx);
                    while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER) {
                        if (_alt === 1) {
                            this.state = 1927;
                            this._errHandler.sync(this);
                            _la = this._input.LA(1);
                            if (_la === VisualBasic6Parser.WS) {
                                this.state = 1926;
                                this.match(VisualBasic6Parser.WS);
                            }
                            this.state = 1929;
                            this.match(VisualBasic6Parser.COMMA);
                            this.state = 1931;
                            this._errHandler.sync(this);
                            var la_ = this._interp.adaptivePredict(this._input, 294, this._ctx);
                            if (la_ === 1) {
                                this.state = 1930;
                                this.match(VisualBasic6Parser.WS);
                            }
                            this.state = 1933;
                            this.sC_CondExpr();
                        }
                        this.state = 1938;
                        this._errHandler.sync(this);
                        _alt = this._interp.adaptivePredict(this._input, 295, this._ctx);
                    }
                    break;
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    sC_CondExpr() {
        let localctx = new SC_CondExprContext(this, this._ctx, this.state);
        this.enterRule(localctx, 196, VisualBasic6Parser.RULE_sC_CondExpr);
        var _la = 0;
        try {
            this.state = 1958;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 299, this._ctx);
            switch (la_) {
                case 1:
                    localctx = new CaseCondExprIsContext(this, localctx);
                    this.enterOuterAlt(localctx, 1);
                    this.state = 1941;
                    this.match(VisualBasic6Parser.IS);
                    this.state = 1943;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if (_la === VisualBasic6Parser.WS) {
                        this.state = 1942;
                        this.match(VisualBasic6Parser.WS);
                    }
                    this.state = 1945;
                    this.comparisonOperator();
                    this.state = 1947;
                    this._errHandler.sync(this);
                    var la_ = this._interp.adaptivePredict(this._input, 298, this._ctx);
                    if (la_ === 1) {
                        this.state = 1946;
                        this.match(VisualBasic6Parser.WS);
                    }
                    this.state = 1949;
                    this.valueStmt(0);
                    break;
                case 2:
                    localctx = new CaseCondExprValueContext(this, localctx);
                    this.enterOuterAlt(localctx, 2);
                    this.state = 1951;
                    this.valueStmt(0);
                    break;
                case 3:
                    localctx = new CaseCondExprToContext(this, localctx);
                    this.enterOuterAlt(localctx, 3);
                    this.state = 1952;
                    this.valueStmt(0);
                    this.state = 1953;
                    this.match(VisualBasic6Parser.WS);
                    this.state = 1954;
                    this.match(VisualBasic6Parser.TO);
                    this.state = 1955;
                    this.match(VisualBasic6Parser.WS);
                    this.state = 1956;
                    this.valueStmt(0);
                    break;
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    sendkeysStmt() {
        let localctx = new SendkeysStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 198, VisualBasic6Parser.RULE_sendkeysStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1960;
            this.match(VisualBasic6Parser.SENDKEYS);
            this.state = 1961;
            this.match(VisualBasic6Parser.WS);
            this.state = 1962;
            this.valueStmt(0);
            this.state = 1971;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 302, this._ctx);
            if (la_ === 1) {
                this.state = 1964;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === VisualBasic6Parser.WS) {
                    this.state = 1963;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 1966;
                this.match(VisualBasic6Parser.COMMA);
                this.state = 1968;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 301, this._ctx);
                if (la_ === 1) {
                    this.state = 1967;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 1970;
                this.valueStmt(0);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    setattrStmt() {
        let localctx = new SetattrStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 200, VisualBasic6Parser.RULE_setattrStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1973;
            this.match(VisualBasic6Parser.SETATTR);
            this.state = 1974;
            this.match(VisualBasic6Parser.WS);
            this.state = 1975;
            this.valueStmt(0);
            this.state = 1977;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 1976;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1979;
            this.match(VisualBasic6Parser.COMMA);
            this.state = 1981;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 304, this._ctx);
            if (la_ === 1) {
                this.state = 1980;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1983;
            this.valueStmt(0);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    setStmt() {
        let localctx = new SetStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 202, VisualBasic6Parser.RULE_setStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1985;
            this.match(VisualBasic6Parser.SET);
            this.state = 1986;
            this.match(VisualBasic6Parser.WS);
            this.state = 1987;
            this.implicitCallStmt_InStmt();
            this.state = 1989;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 1988;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1991;
            this.match(VisualBasic6Parser.EQ);
            this.state = 1993;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 306, this._ctx);
            if (la_ === 1) {
                this.state = 1992;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 1995;
            this.valueStmt(0);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    stopStmt() {
        let localctx = new StopStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 204, VisualBasic6Parser.RULE_stopStmt);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 1997;
            this.match(VisualBasic6Parser.STOP);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    subStmt() {
        let localctx = new SubStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 206, VisualBasic6Parser.RULE_subStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2002;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.FRIEND || _la === VisualBasic6Parser.GLOBAL || _la === VisualBasic6Parser.PRIVATE || _la === VisualBasic6Parser.PUBLIC) {
                this.state = 1999;
                this.visibility();
                this.state = 2000;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 2006;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.STATIC) {
                this.state = 2004;
                this.match(VisualBasic6Parser.STATIC);
                this.state = 2005;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 2008;
            this.match(VisualBasic6Parser.SUB);
            this.state = 2009;
            this.match(VisualBasic6Parser.WS);
            this.state = 2010;
            this.ambiguousIdentifier();
            this.state = 2015;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.LPAREN || _la === VisualBasic6Parser.WS) {
                this.state = 2012;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === VisualBasic6Parser.WS) {
                    this.state = 2011;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 2014;
                this.argList();
            }
            this.state = 2018;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 2017;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 2020;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while (_la === VisualBasic6Parser.NEWLINE);
            this.state = 2028;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFCUR - 32)) | (1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)) | (1 << (VisualBasic6Parser.EXIT_DO - 32)) | (1 << (VisualBasic6Parser.EXIT_FOR - 32)) | (1 << (VisualBasic6Parser.EXIT_FUNCTION - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (VisualBasic6Parser.EXIT_PROPERTY - 64)) | (1 << (VisualBasic6Parser.EXIT_SUB - 64)) | (1 << (VisualBasic6Parser.FALSE - 64)) | (1 << (VisualBasic6Parser.FILECOPY - 64)) | (1 << (VisualBasic6Parser.FRIEND - 64)) | (1 << (VisualBasic6Parser.FOR - 64)) | (1 << (VisualBasic6Parser.FUNCTION - 64)) | (1 << (VisualBasic6Parser.GET - 64)) | (1 << (VisualBasic6Parser.GLOBAL - 64)) | (1 << (VisualBasic6Parser.GOSUB - 64)) | (1 << (VisualBasic6Parser.GOTO - 64)) | (1 << (VisualBasic6Parser.IF - 64)) | (1 << (VisualBasic6Parser.IMP - 64)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 64)) | (1 << (VisualBasic6Parser.IN - 64)) | (1 << (VisualBasic6Parser.INPUT - 64)) | (1 << (VisualBasic6Parser.IS - 64)) | (1 << (VisualBasic6Parser.INTEGER - 64)) | (1 << (VisualBasic6Parser.KILL - 64)) | (1 << (VisualBasic6Parser.LOAD - 64)) | (1 << (VisualBasic6Parser.LOCK - 64)) | (1 << (VisualBasic6Parser.LONG - 64)) | (1 << (VisualBasic6Parser.LOOP - 64)) | (1 << (VisualBasic6Parser.LEN - 64)) | (1 << (VisualBasic6Parser.LET - 64)) | (1 << (VisualBasic6Parser.LIB - 64)) | (1 << (VisualBasic6Parser.LIKE - 64)) | (1 << (VisualBasic6Parser.LINE_INPUT - 64)) | (1 << (VisualBasic6Parser.LSET - 64)))) !== 0) || ((((_la - 96)) & ~0x1f) == 0 && ((1 << (_la - 96)) & ((1 << (VisualBasic6Parser.MACRO_IF - 96)) | (1 << (VisualBasic6Parser.ME - 96)) | (1 << (VisualBasic6Parser.MID - 96)) | (1 << (VisualBasic6Parser.MKDIR - 96)) | (1 << (VisualBasic6Parser.MOD - 96)) | (1 << (VisualBasic6Parser.NAME - 96)) | (1 << (VisualBasic6Parser.NEXT - 96)) | (1 << (VisualBasic6Parser.NEW - 96)) | (1 << (VisualBasic6Parser.NOT - 96)) | (1 << (VisualBasic6Parser.NOTHING - 96)) | (1 << (VisualBasic6Parser.NULL_ - 96)) | (1 << (VisualBasic6Parser.OBJECT - 96)) | (1 << (VisualBasic6Parser.ON - 96)) | (1 << (VisualBasic6Parser.ON_ERROR - 96)) | (1 << (VisualBasic6Parser.ON_LOCAL_ERROR - 96)) | (1 << (VisualBasic6Parser.OPEN - 96)) | (1 << (VisualBasic6Parser.OPTIONAL - 96)) | (1 << (VisualBasic6Parser.OR - 96)) | (1 << (VisualBasic6Parser.OUTPUT - 96)) | (1 << (VisualBasic6Parser.PARAMARRAY - 96)) | (1 << (VisualBasic6Parser.PRESERVE - 96)) | (1 << (VisualBasic6Parser.PRINT - 96)) | (1 << (VisualBasic6Parser.PRIVATE - 96)))) !== 0) || ((((_la - 129)) & ~0x1f) == 0 && ((1 << (_la - 129)) & ((1 << (VisualBasic6Parser.PUBLIC - 129)) | (1 << (VisualBasic6Parser.PUT - 129)) | (1 << (VisualBasic6Parser.RANDOM - 129)) | (1 << (VisualBasic6Parser.RANDOMIZE - 129)) | (1 << (VisualBasic6Parser.RAISEEVENT - 129)) | (1 << (VisualBasic6Parser.READ - 129)) | (1 << (VisualBasic6Parser.REDIM - 129)) | (1 << (VisualBasic6Parser.REM - 129)) | (1 << (VisualBasic6Parser.RESET - 129)) | (1 << (VisualBasic6Parser.RESUME - 129)) | (1 << (VisualBasic6Parser.RETURN - 129)) | (1 << (VisualBasic6Parser.RMDIR - 129)) | (1 << (VisualBasic6Parser.RSET - 129)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 129)) | (1 << (VisualBasic6Parser.SAVESETTING - 129)) | (1 << (VisualBasic6Parser.SEEK - 129)) | (1 << (VisualBasic6Parser.SELECT - 129)) | (1 << (VisualBasic6Parser.SENDKEYS - 129)) | (1 << (VisualBasic6Parser.SET - 129)) | (1 << (VisualBasic6Parser.SETATTR - 129)) | (1 << (VisualBasic6Parser.SHARED - 129)) | (1 << (VisualBasic6Parser.SINGLE - 129)) | (1 << (VisualBasic6Parser.SPC - 129)) | (1 << (VisualBasic6Parser.STATIC - 129)) | (1 << (VisualBasic6Parser.STEP - 129)) | (1 << (VisualBasic6Parser.STOP - 129)) | (1 << (VisualBasic6Parser.STRING - 129)) | (1 << (VisualBasic6Parser.SUB - 129)) | (1 << (VisualBasic6Parser.TAB - 129)) | (1 << (VisualBasic6Parser.TEXT - 129)) | (1 << (VisualBasic6Parser.THEN - 129)))) !== 0) || ((((_la - 161)) & ~0x1f) == 0 && ((1 << (_la - 161)) & ((1 << (VisualBasic6Parser.TIME - 161)) | (1 << (VisualBasic6Parser.TO - 161)) | (1 << (VisualBasic6Parser.TRUE - 161)) | (1 << (VisualBasic6Parser.TYPE - 161)) | (1 << (VisualBasic6Parser.TYPEOF - 161)) | (1 << (VisualBasic6Parser.UNLOAD - 161)) | (1 << (VisualBasic6Parser.UNLOCK - 161)) | (1 << (VisualBasic6Parser.UNTIL - 161)) | (1 << (VisualBasic6Parser.VARIANT - 161)) | (1 << (VisualBasic6Parser.VERSION - 161)) | (1 << (VisualBasic6Parser.WEND - 161)) | (1 << (VisualBasic6Parser.WHILE - 161)) | (1 << (VisualBasic6Parser.WIDTH - 161)) | (1 << (VisualBasic6Parser.WITH - 161)) | (1 << (VisualBasic6Parser.WITHEVENTS - 161)) | (1 << (VisualBasic6Parser.WRITE - 161)) | (1 << (VisualBasic6Parser.XOR - 161)) | (1 << (VisualBasic6Parser.DOT - 161)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 161)))) !== 0) || ((((_la - 207)) & ~0x1f) == 0 && ((1 << (_la - 207)) & ((1 << (VisualBasic6Parser.L_SQUARE_BRACKET - 207)) | (1 << (VisualBasic6Parser.IDENTIFIER - 207)) | (1 << (VisualBasic6Parser.WS - 207)))) !== 0)) {
                this.state = 2022;
                this.block();
                this.state = 2024;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                do {
                    this.state = 2023;
                    this.match(VisualBasic6Parser.NEWLINE);
                    this.state = 2026;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                } while (_la === VisualBasic6Parser.NEWLINE);
            }
            this.state = 2030;
            this.match(VisualBasic6Parser.END_SUB);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    timeStmt() {
        let localctx = new TimeStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 208, VisualBasic6Parser.RULE_timeStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2032;
            this.match(VisualBasic6Parser.TIME);
            this.state = 2034;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 2033;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 2036;
            this.match(VisualBasic6Parser.EQ);
            this.state = 2038;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 315, this._ctx);
            if (la_ === 1) {
                this.state = 2037;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 2040;
            this.valueStmt(0);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    typeStmt() {
        let localctx = new TypeStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 210, VisualBasic6Parser.RULE_typeStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2045;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.FRIEND || _la === VisualBasic6Parser.GLOBAL || _la === VisualBasic6Parser.PRIVATE || _la === VisualBasic6Parser.PUBLIC) {
                this.state = 2042;
                this.visibility();
                this.state = 2043;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 2047;
            this.match(VisualBasic6Parser.TYPE);
            this.state = 2048;
            this.match(VisualBasic6Parser.WS);
            this.state = 2049;
            this.ambiguousIdentifier();
            this.state = 2051;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 2050;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 2053;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while (_la === VisualBasic6Parser.NEWLINE);
            this.state = 2058;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFCUR - 32)) | (1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)))) !== 0) || ((((_la - 66)) & ~0x1f) == 0 && ((1 << (_la - 66)) & ((1 << (VisualBasic6Parser.FALSE - 66)) | (1 << (VisualBasic6Parser.FILECOPY - 66)) | (1 << (VisualBasic6Parser.FRIEND - 66)) | (1 << (VisualBasic6Parser.FOR - 66)) | (1 << (VisualBasic6Parser.FUNCTION - 66)) | (1 << (VisualBasic6Parser.GET - 66)) | (1 << (VisualBasic6Parser.GLOBAL - 66)) | (1 << (VisualBasic6Parser.GOSUB - 66)) | (1 << (VisualBasic6Parser.GOTO - 66)) | (1 << (VisualBasic6Parser.IF - 66)) | (1 << (VisualBasic6Parser.IMP - 66)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 66)) | (1 << (VisualBasic6Parser.IN - 66)) | (1 << (VisualBasic6Parser.INPUT - 66)) | (1 << (VisualBasic6Parser.IS - 66)) | (1 << (VisualBasic6Parser.INTEGER - 66)) | (1 << (VisualBasic6Parser.KILL - 66)) | (1 << (VisualBasic6Parser.LOAD - 66)) | (1 << (VisualBasic6Parser.LOCK - 66)) | (1 << (VisualBasic6Parser.LONG - 66)) | (1 << (VisualBasic6Parser.LOOP - 66)) | (1 << (VisualBasic6Parser.LEN - 66)) | (1 << (VisualBasic6Parser.LET - 66)) | (1 << (VisualBasic6Parser.LIB - 66)) | (1 << (VisualBasic6Parser.LIKE - 66)) | (1 << (VisualBasic6Parser.LSET - 66)))) !== 0) || ((((_la - 100)) & ~0x1f) == 0 && ((1 << (_la - 100)) & ((1 << (VisualBasic6Parser.ME - 100)) | (1 << (VisualBasic6Parser.MID - 100)) | (1 << (VisualBasic6Parser.MKDIR - 100)) | (1 << (VisualBasic6Parser.MOD - 100)) | (1 << (VisualBasic6Parser.NAME - 100)) | (1 << (VisualBasic6Parser.NEXT - 100)) | (1 << (VisualBasic6Parser.NEW - 100)) | (1 << (VisualBasic6Parser.NOT - 100)) | (1 << (VisualBasic6Parser.NOTHING - 100)) | (1 << (VisualBasic6Parser.NULL_ - 100)) | (1 << (VisualBasic6Parser.OBJECT - 100)) | (1 << (VisualBasic6Parser.ON - 100)) | (1 << (VisualBasic6Parser.OPEN - 100)) | (1 << (VisualBasic6Parser.OPTIONAL - 100)) | (1 << (VisualBasic6Parser.OR - 100)) | (1 << (VisualBasic6Parser.OUTPUT - 100)) | (1 << (VisualBasic6Parser.PARAMARRAY - 100)) | (1 << (VisualBasic6Parser.PRESERVE - 100)) | (1 << (VisualBasic6Parser.PRINT - 100)) | (1 << (VisualBasic6Parser.PRIVATE - 100)) | (1 << (VisualBasic6Parser.PUBLIC - 100)) | (1 << (VisualBasic6Parser.PUT - 100)) | (1 << (VisualBasic6Parser.RANDOM - 100)))) !== 0) || ((((_la - 132)) & ~0x1f) == 0 && ((1 << (_la - 132)) & ((1 << (VisualBasic6Parser.RANDOMIZE - 132)) | (1 << (VisualBasic6Parser.RAISEEVENT - 132)) | (1 << (VisualBasic6Parser.READ - 132)) | (1 << (VisualBasic6Parser.REDIM - 132)) | (1 << (VisualBasic6Parser.REM - 132)) | (1 << (VisualBasic6Parser.RESET - 132)) | (1 << (VisualBasic6Parser.RESUME - 132)) | (1 << (VisualBasic6Parser.RETURN - 132)) | (1 << (VisualBasic6Parser.RMDIR - 132)) | (1 << (VisualBasic6Parser.RSET - 132)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 132)) | (1 << (VisualBasic6Parser.SAVESETTING - 132)) | (1 << (VisualBasic6Parser.SEEK - 132)) | (1 << (VisualBasic6Parser.SELECT - 132)) | (1 << (VisualBasic6Parser.SENDKEYS - 132)) | (1 << (VisualBasic6Parser.SET - 132)) | (1 << (VisualBasic6Parser.SETATTR - 132)) | (1 << (VisualBasic6Parser.SHARED - 132)) | (1 << (VisualBasic6Parser.SINGLE - 132)) | (1 << (VisualBasic6Parser.SPC - 132)) | (1 << (VisualBasic6Parser.STATIC - 132)) | (1 << (VisualBasic6Parser.STEP - 132)) | (1 << (VisualBasic6Parser.STOP - 132)) | (1 << (VisualBasic6Parser.STRING - 132)) | (1 << (VisualBasic6Parser.SUB - 132)) | (1 << (VisualBasic6Parser.TAB - 132)) | (1 << (VisualBasic6Parser.TEXT - 132)) | (1 << (VisualBasic6Parser.THEN - 132)) | (1 << (VisualBasic6Parser.TIME - 132)) | (1 << (VisualBasic6Parser.TO - 132)) | (1 << (VisualBasic6Parser.TRUE - 132)))) !== 0) || ((((_la - 164)) & ~0x1f) == 0 && ((1 << (_la - 164)) & ((1 << (VisualBasic6Parser.TYPE - 164)) | (1 << (VisualBasic6Parser.TYPEOF - 164)) | (1 << (VisualBasic6Parser.UNLOAD - 164)) | (1 << (VisualBasic6Parser.UNLOCK - 164)) | (1 << (VisualBasic6Parser.UNTIL - 164)) | (1 << (VisualBasic6Parser.VARIANT - 164)) | (1 << (VisualBasic6Parser.VERSION - 164)) | (1 << (VisualBasic6Parser.WEND - 164)) | (1 << (VisualBasic6Parser.WHILE - 164)) | (1 << (VisualBasic6Parser.WIDTH - 164)) | (1 << (VisualBasic6Parser.WITH - 164)) | (1 << (VisualBasic6Parser.WITHEVENTS - 164)) | (1 << (VisualBasic6Parser.WRITE - 164)) | (1 << (VisualBasic6Parser.XOR - 164)))) !== 0) || _la === VisualBasic6Parser.L_SQUARE_BRACKET || _la === VisualBasic6Parser.IDENTIFIER) {
                this.state = 2055;
                this.typeStmt_Element();
                this.state = 2060;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            this.state = 2061;
            this.match(VisualBasic6Parser.END_TYPE);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    typeStmt_Element() {
        let localctx = new TypeStmt_ElementContext(this, this._ctx, this.state);
        this.enterRule(localctx, 212, VisualBasic6Parser.RULE_typeStmt_Element);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2063;
            this.ambiguousIdentifier();
            this.state = 2078;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 323, this._ctx);
            if (la_ === 1) {
                this.state = 2065;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === VisualBasic6Parser.WS) {
                    this.state = 2064;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 2067;
                this.match(VisualBasic6Parser.LPAREN);
                this.state = 2072;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 321, this._ctx);
                if (la_ === 1) {
                    this.state = 2069;
                    this._errHandler.sync(this);
                    var la_ = this._interp.adaptivePredict(this._input, 320, this._ctx);
                    if (la_ === 1) {
                        this.state = 2068;
                        this.match(VisualBasic6Parser.WS);
                    }
                    this.state = 2071;
                    this.subscripts();
                }
                this.state = 2075;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === VisualBasic6Parser.WS) {
                    this.state = 2074;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 2077;
                this.match(VisualBasic6Parser.RPAREN);
            }
            this.state = 2082;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 2080;
                this.match(VisualBasic6Parser.WS);
                this.state = 2081;
                this.asTypeClause();
            }
            this.state = 2085;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 2084;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 2087;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while (_la === VisualBasic6Parser.NEWLINE);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    typeOfStmt() {
        let localctx = new TypeOfStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 214, VisualBasic6Parser.RULE_typeOfStmt);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2089;
            this.match(VisualBasic6Parser.TYPEOF);
            this.state = 2090;
            this.match(VisualBasic6Parser.WS);
            this.state = 2091;
            this.valueStmt(0);
            this.state = 2096;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 326, this._ctx);
            if (la_ === 1) {
                this.state = 2092;
                this.match(VisualBasic6Parser.WS);
                this.state = 2093;
                this.match(VisualBasic6Parser.IS);
                this.state = 2094;
                this.match(VisualBasic6Parser.WS);
                this.state = 2095;
                this.type_();
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    unloadStmt() {
        let localctx = new UnloadStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 216, VisualBasic6Parser.RULE_unloadStmt);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2098;
            this.match(VisualBasic6Parser.UNLOAD);
            this.state = 2099;
            this.match(VisualBasic6Parser.WS);
            this.state = 2100;
            this.valueStmt(0);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    unlockStmt() {
        let localctx = new UnlockStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 218, VisualBasic6Parser.RULE_unlockStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2102;
            this.match(VisualBasic6Parser.UNLOCK);
            this.state = 2103;
            this.match(VisualBasic6Parser.WS);
            this.state = 2104;
            this.valueStmt(0);
            this.state = 2119;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 330, this._ctx);
            if (la_ === 1) {
                this.state = 2106;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === VisualBasic6Parser.WS) {
                    this.state = 2105;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 2108;
                this.match(VisualBasic6Parser.COMMA);
                this.state = 2110;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 328, this._ctx);
                if (la_ === 1) {
                    this.state = 2109;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 2112;
                this.valueStmt(0);
                this.state = 2117;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 329, this._ctx);
                if (la_ === 1) {
                    this.state = 2113;
                    this.match(VisualBasic6Parser.WS);
                    this.state = 2114;
                    this.match(VisualBasic6Parser.TO);
                    this.state = 2115;
                    this.match(VisualBasic6Parser.WS);
                    this.state = 2116;
                    this.valueStmt(0);
                }
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    valueStmt(_p) {
        if (_p === undefined) {
            _p = 0;
        }
        const _parentctx = this._ctx;
        const _parentState = this.state;
        let localctx = new ValueStmtContext(this, this._ctx, _parentState);
        let _prevctx = localctx;
        const _startState = 220;
        this.enterRecursionRule(localctx, 220, VisualBasic6Parser.RULE_valueStmt, _p);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2185;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 342, this._ctx);
            switch (la_) {
                case 1:
                    localctx = new VsLiteralContext(this, localctx);
                    this._ctx = localctx;
                    _prevctx = localctx;
                    this.state = 2122;
                    this.literal();
                    break;
                case 2:
                    localctx = new VsStructContext(this, localctx);
                    this._ctx = localctx;
                    _prevctx = localctx;
                    this.state = 2123;
                    this.match(VisualBasic6Parser.LPAREN);
                    this.state = 2125;
                    this._errHandler.sync(this);
                    var la_ = this._interp.adaptivePredict(this._input, 331, this._ctx);
                    if (la_ === 1) {
                        this.state = 2124;
                        this.match(VisualBasic6Parser.WS);
                    }
                    this.state = 2127;
                    this.valueStmt(0);
                    this.state = 2138;
                    this._errHandler.sync(this);
                    var _alt = this._interp.adaptivePredict(this._input, 334, this._ctx);
                    while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER) {
                        if (_alt === 1) {
                            this.state = 2129;
                            this._errHandler.sync(this);
                            _la = this._input.LA(1);
                            if (_la === VisualBasic6Parser.WS) {
                                this.state = 2128;
                                this.match(VisualBasic6Parser.WS);
                            }
                            this.state = 2131;
                            this.match(VisualBasic6Parser.COMMA);
                            this.state = 2133;
                            this._errHandler.sync(this);
                            var la_ = this._interp.adaptivePredict(this._input, 333, this._ctx);
                            if (la_ === 1) {
                                this.state = 2132;
                                this.match(VisualBasic6Parser.WS);
                            }
                            this.state = 2135;
                            this.valueStmt(0);
                        }
                        this.state = 2140;
                        this._errHandler.sync(this);
                        _alt = this._interp.adaptivePredict(this._input, 334, this._ctx);
                    }
                    this.state = 2142;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if (_la === VisualBasic6Parser.WS) {
                        this.state = 2141;
                        this.match(VisualBasic6Parser.WS);
                    }
                    this.state = 2144;
                    this.match(VisualBasic6Parser.RPAREN);
                    break;
                case 3:
                    localctx = new VsNewContext(this, localctx);
                    this._ctx = localctx;
                    _prevctx = localctx;
                    this.state = 2146;
                    this.match(VisualBasic6Parser.NEW);
                    this.state = 2147;
                    this.match(VisualBasic6Parser.WS);
                    this.state = 2148;
                    this.valueStmt(20);
                    break;
                case 4:
                    localctx = new VsTypeOfContext(this, localctx);
                    this._ctx = localctx;
                    _prevctx = localctx;
                    this.state = 2149;
                    this.typeOfStmt();
                    break;
                case 5:
                    localctx = new VsAddressOfContext(this, localctx);
                    this._ctx = localctx;
                    _prevctx = localctx;
                    this.state = 2150;
                    this.match(VisualBasic6Parser.ADDRESSOF);
                    this.state = 2151;
                    this.match(VisualBasic6Parser.WS);
                    this.state = 2152;
                    this.valueStmt(18);
                    break;
                case 6:
                    localctx = new VsAssignContext(this, localctx);
                    this._ctx = localctx;
                    _prevctx = localctx;
                    this.state = 2153;
                    this.implicitCallStmt_InStmt();
                    this.state = 2155;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if (_la === VisualBasic6Parser.WS) {
                        this.state = 2154;
                        this.match(VisualBasic6Parser.WS);
                    }
                    this.state = 2157;
                    this.match(VisualBasic6Parser.ASSIGN);
                    this.state = 2159;
                    this._errHandler.sync(this);
                    var la_ = this._interp.adaptivePredict(this._input, 337, this._ctx);
                    if (la_ === 1) {
                        this.state = 2158;
                        this.match(VisualBasic6Parser.WS);
                    }
                    this.state = 2161;
                    this.valueStmt(17);
                    break;
                case 7:
                    localctx = new VsPlusMinusContext(this, localctx);
                    this._ctx = localctx;
                    _prevctx = localctx;
                    this.state = 2163;
                    _la = this._input.LA(1);
                    if (!(_la === VisualBasic6Parser.MINUS || _la === VisualBasic6Parser.PLUS)) {
                        this._errHandler.recoverInline(this);
                    }
                    else {
                        this._errHandler.reportMatch(this);
                        this.consume();
                    }
                    this.state = 2165;
                    this._errHandler.sync(this);
                    var la_ = this._interp.adaptivePredict(this._input, 338, this._ctx);
                    if (la_ === 1) {
                        this.state = 2164;
                        this.match(VisualBasic6Parser.WS);
                    }
                    this.state = 2167;
                    this.valueStmt(15);
                    break;
                case 8:
                    localctx = new VsNotContext(this, localctx);
                    this._ctx = localctx;
                    _prevctx = localctx;
                    this.state = 2168;
                    this.match(VisualBasic6Parser.NOT);
                    this.state = 2181;
                    this._errHandler.sync(this);
                    switch (this._input.LA(1)) {
                        case VisualBasic6Parser.WS:
                            this.state = 2169;
                            this.match(VisualBasic6Parser.WS);
                            this.state = 2170;
                            this.valueStmt(0);
                            break;
                        case VisualBasic6Parser.LPAREN:
                            this.state = 2171;
                            this.match(VisualBasic6Parser.LPAREN);
                            this.state = 2173;
                            this._errHandler.sync(this);
                            var la_ = this._interp.adaptivePredict(this._input, 339, this._ctx);
                            if (la_ === 1) {
                                this.state = 2172;
                                this.match(VisualBasic6Parser.WS);
                            }
                            this.state = 2175;
                            this.valueStmt(0);
                            this.state = 2177;
                            this._errHandler.sync(this);
                            _la = this._input.LA(1);
                            if (_la === VisualBasic6Parser.WS) {
                                this.state = 2176;
                                this.match(VisualBasic6Parser.WS);
                            }
                            this.state = 2179;
                            this.match(VisualBasic6Parser.RPAREN);
                            break;
                        default:
                            throw new antlr4_1.default.error.NoViableAltException(this);
                    }
                    break;
                case 9:
                    localctx = new VsICSContext(this, localctx);
                    this._ctx = localctx;
                    _prevctx = localctx;
                    this.state = 2183;
                    this.implicitCallStmt_InStmt();
                    break;
                case 10:
                    localctx = new VsMidContext(this, localctx);
                    this._ctx = localctx;
                    _prevctx = localctx;
                    this.state = 2184;
                    this.midStmt();
                    break;
            }
            this._ctx.stop = this._input.LT(-1);
            this.state = 2297;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input, 368, this._ctx);
            while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER) {
                if (_alt === 1) {
                    if (this._parseListeners !== null) {
                        this.triggerExitRuleEvent();
                    }
                    _prevctx = localctx;
                    this.state = 2295;
                    this._errHandler.sync(this);
                    var la_ = this._interp.adaptivePredict(this._input, 367, this._ctx);
                    switch (la_) {
                        case 1:
                            localctx = new VsPowContext(this, new ValueStmtContext(this, _parentctx, _parentState));
                            this.pushNewRecursionContext(localctx, _startState, VisualBasic6Parser.RULE_valueStmt);
                            this.state = 2187;
                            if (!(this.precpred(this._ctx, 16))) {
                                throw new antlr4_1.default.error.FailedPredicateException(this, "this.precpred(this._ctx, 16)");
                            }
                            this.state = 2189;
                            this._errHandler.sync(this);
                            _la = this._input.LA(1);
                            if (_la === VisualBasic6Parser.WS) {
                                this.state = 2188;
                                this.match(VisualBasic6Parser.WS);
                            }
                            this.state = 2191;
                            this.match(VisualBasic6Parser.POW);
                            this.state = 2193;
                            this._errHandler.sync(this);
                            var la_ = this._interp.adaptivePredict(this._input, 344, this._ctx);
                            if (la_ === 1) {
                                this.state = 2192;
                                this.match(VisualBasic6Parser.WS);
                            }
                            this.state = 2195;
                            this.valueStmt(17);
                            break;
                        case 2:
                            localctx = new VsMultDivContext(this, new ValueStmtContext(this, _parentctx, _parentState));
                            this.pushNewRecursionContext(localctx, _startState, VisualBasic6Parser.RULE_valueStmt);
                            this.state = 2196;
                            if (!(this.precpred(this._ctx, 14))) {
                                throw new antlr4_1.default.error.FailedPredicateException(this, "this.precpred(this._ctx, 14)");
                            }
                            this.state = 2198;
                            this._errHandler.sync(this);
                            _la = this._input.LA(1);
                            if (_la === VisualBasic6Parser.WS) {
                                this.state = 2197;
                                this.match(VisualBasic6Parser.WS);
                            }
                            this.state = 2200;
                            _la = this._input.LA(1);
                            if (!(_la === VisualBasic6Parser.DIV || _la === VisualBasic6Parser.MULT)) {
                                this._errHandler.recoverInline(this);
                            }
                            else {
                                this._errHandler.reportMatch(this);
                                this.consume();
                            }
                            this.state = 2202;
                            this._errHandler.sync(this);
                            var la_ = this._interp.adaptivePredict(this._input, 346, this._ctx);
                            if (la_ === 1) {
                                this.state = 2201;
                                this.match(VisualBasic6Parser.WS);
                            }
                            this.state = 2204;
                            this.valueStmt(15);
                            break;
                        case 3:
                            localctx = new VsIDivContext(this, new ValueStmtContext(this, _parentctx, _parentState));
                            this.pushNewRecursionContext(localctx, _startState, VisualBasic6Parser.RULE_valueStmt);
                            this.state = 2205;
                            if (!(this.precpred(this._ctx, 13))) {
                                throw new antlr4_1.default.error.FailedPredicateException(this, "this.precpred(this._ctx, 13)");
                            }
                            this.state = 2207;
                            this._errHandler.sync(this);
                            _la = this._input.LA(1);
                            if (_la === VisualBasic6Parser.WS) {
                                this.state = 2206;
                                this.match(VisualBasic6Parser.WS);
                            }
                            this.state = 2209;
                            this.match(VisualBasic6Parser.IDIV);
                            this.state = 2211;
                            this._errHandler.sync(this);
                            var la_ = this._interp.adaptivePredict(this._input, 348, this._ctx);
                            if (la_ === 1) {
                                this.state = 2210;
                                this.match(VisualBasic6Parser.WS);
                            }
                            this.state = 2213;
                            this.valueStmt(14);
                            break;
                        case 4:
                            localctx = new VsModContext(this, new ValueStmtContext(this, _parentctx, _parentState));
                            this.pushNewRecursionContext(localctx, _startState, VisualBasic6Parser.RULE_valueStmt);
                            this.state = 2214;
                            if (!(this.precpred(this._ctx, 12))) {
                                throw new antlr4_1.default.error.FailedPredicateException(this, "this.precpred(this._ctx, 12)");
                            }
                            this.state = 2216;
                            this._errHandler.sync(this);
                            _la = this._input.LA(1);
                            if (_la === VisualBasic6Parser.WS) {
                                this.state = 2215;
                                this.match(VisualBasic6Parser.WS);
                            }
                            this.state = 2218;
                            this.match(VisualBasic6Parser.MOD);
                            this.state = 2220;
                            this._errHandler.sync(this);
                            var la_ = this._interp.adaptivePredict(this._input, 350, this._ctx);
                            if (la_ === 1) {
                                this.state = 2219;
                                this.match(VisualBasic6Parser.WS);
                            }
                            this.state = 2222;
                            this.valueStmt(13);
                            break;
                        case 5:
                            localctx = new VsAddSubContext(this, new ValueStmtContext(this, _parentctx, _parentState));
                            this.pushNewRecursionContext(localctx, _startState, VisualBasic6Parser.RULE_valueStmt);
                            this.state = 2223;
                            if (!(this.precpred(this._ctx, 11))) {
                                throw new antlr4_1.default.error.FailedPredicateException(this, "this.precpred(this._ctx, 11)");
                            }
                            this.state = 2225;
                            this._errHandler.sync(this);
                            _la = this._input.LA(1);
                            if (_la === VisualBasic6Parser.WS) {
                                this.state = 2224;
                                this.match(VisualBasic6Parser.WS);
                            }
                            this.state = 2227;
                            _la = this._input.LA(1);
                            if (!(_la === VisualBasic6Parser.MINUS || _la === VisualBasic6Parser.PLUS)) {
                                this._errHandler.recoverInline(this);
                            }
                            else {
                                this._errHandler.reportMatch(this);
                                this.consume();
                            }
                            this.state = 2229;
                            this._errHandler.sync(this);
                            var la_ = this._interp.adaptivePredict(this._input, 352, this._ctx);
                            if (la_ === 1) {
                                this.state = 2228;
                                this.match(VisualBasic6Parser.WS);
                            }
                            this.state = 2231;
                            this.valueStmt(12);
                            break;
                        case 6:
                            localctx = new VsAmpContext(this, new ValueStmtContext(this, _parentctx, _parentState));
                            this.pushNewRecursionContext(localctx, _startState, VisualBasic6Parser.RULE_valueStmt);
                            this.state = 2232;
                            if (!(this.precpred(this._ctx, 10))) {
                                throw new antlr4_1.default.error.FailedPredicateException(this, "this.precpred(this._ctx, 10)");
                            }
                            this.state = 2234;
                            this._errHandler.sync(this);
                            _la = this._input.LA(1);
                            if (_la === VisualBasic6Parser.WS) {
                                this.state = 2233;
                                this.match(VisualBasic6Parser.WS);
                            }
                            this.state = 2236;
                            this.match(VisualBasic6Parser.AMPERSAND);
                            this.state = 2238;
                            this._errHandler.sync(this);
                            var la_ = this._interp.adaptivePredict(this._input, 354, this._ctx);
                            if (la_ === 1) {
                                this.state = 2237;
                                this.match(VisualBasic6Parser.WS);
                            }
                            this.state = 2240;
                            this.valueStmt(11);
                            break;
                        case 7:
                            localctx = new VsCompContext(this, new ValueStmtContext(this, _parentctx, _parentState));
                            this.pushNewRecursionContext(localctx, _startState, VisualBasic6Parser.RULE_valueStmt);
                            this.state = 2241;
                            if (!(this.precpred(this._ctx, 9))) {
                                throw new antlr4_1.default.error.FailedPredicateException(this, "this.precpred(this._ctx, 9)");
                            }
                            this.state = 2243;
                            this._errHandler.sync(this);
                            _la = this._input.LA(1);
                            if (_la === VisualBasic6Parser.WS) {
                                this.state = 2242;
                                this.match(VisualBasic6Parser.WS);
                            }
                            this.state = 2245;
                            _la = this._input.LA(1);
                            if (!(_la === VisualBasic6Parser.IS || _la === VisualBasic6Parser.LIKE || ((((_la - 187)) & ~0x1f) == 0 && ((1 << (_la - 187)) & ((1 << (VisualBasic6Parser.EQ - 187)) | (1 << (VisualBasic6Parser.GEQ - 187)) | (1 << (VisualBasic6Parser.GT - 187)) | (1 << (VisualBasic6Parser.LEQ - 187)) | (1 << (VisualBasic6Parser.LT - 187)) | (1 << (VisualBasic6Parser.NEQ - 187)))) !== 0))) {
                                this._errHandler.recoverInline(this);
                            }
                            else {
                                this._errHandler.reportMatch(this);
                                this.consume();
                            }
                            this.state = 2247;
                            this._errHandler.sync(this);
                            var la_ = this._interp.adaptivePredict(this._input, 356, this._ctx);
                            if (la_ === 1) {
                                this.state = 2246;
                                this.match(VisualBasic6Parser.WS);
                            }
                            this.state = 2249;
                            this.valueStmt(10);
                            break;
                        case 8:
                            localctx = new VsAndContext(this, new ValueStmtContext(this, _parentctx, _parentState));
                            this.pushNewRecursionContext(localctx, _startState, VisualBasic6Parser.RULE_valueStmt);
                            this.state = 2250;
                            if (!(this.precpred(this._ctx, 7))) {
                                throw new antlr4_1.default.error.FailedPredicateException(this, "this.precpred(this._ctx, 7)");
                            }
                            this.state = 2252;
                            this._errHandler.sync(this);
                            _la = this._input.LA(1);
                            if (_la === VisualBasic6Parser.WS) {
                                this.state = 2251;
                                this.match(VisualBasic6Parser.WS);
                            }
                            this.state = 2254;
                            this.match(VisualBasic6Parser.AND);
                            this.state = 2256;
                            this._errHandler.sync(this);
                            var la_ = this._interp.adaptivePredict(this._input, 358, this._ctx);
                            if (la_ === 1) {
                                this.state = 2255;
                                this.match(VisualBasic6Parser.WS);
                            }
                            this.state = 2258;
                            this.valueStmt(8);
                            break;
                        case 9:
                            localctx = new VsOrContext(this, new ValueStmtContext(this, _parentctx, _parentState));
                            this.pushNewRecursionContext(localctx, _startState, VisualBasic6Parser.RULE_valueStmt);
                            this.state = 2259;
                            if (!(this.precpred(this._ctx, 6))) {
                                throw new antlr4_1.default.error.FailedPredicateException(this, "this.precpred(this._ctx, 6)");
                            }
                            this.state = 2261;
                            this._errHandler.sync(this);
                            _la = this._input.LA(1);
                            if (_la === VisualBasic6Parser.WS) {
                                this.state = 2260;
                                this.match(VisualBasic6Parser.WS);
                            }
                            this.state = 2263;
                            this.match(VisualBasic6Parser.OR);
                            this.state = 2265;
                            this._errHandler.sync(this);
                            var la_ = this._interp.adaptivePredict(this._input, 360, this._ctx);
                            if (la_ === 1) {
                                this.state = 2264;
                                this.match(VisualBasic6Parser.WS);
                            }
                            this.state = 2267;
                            this.valueStmt(7);
                            break;
                        case 10:
                            localctx = new VsXorContext(this, new ValueStmtContext(this, _parentctx, _parentState));
                            this.pushNewRecursionContext(localctx, _startState, VisualBasic6Parser.RULE_valueStmt);
                            this.state = 2268;
                            if (!(this.precpred(this._ctx, 5))) {
                                throw new antlr4_1.default.error.FailedPredicateException(this, "this.precpred(this._ctx, 5)");
                            }
                            this.state = 2270;
                            this._errHandler.sync(this);
                            _la = this._input.LA(1);
                            if (_la === VisualBasic6Parser.WS) {
                                this.state = 2269;
                                this.match(VisualBasic6Parser.WS);
                            }
                            this.state = 2272;
                            this.match(VisualBasic6Parser.XOR);
                            this.state = 2274;
                            this._errHandler.sync(this);
                            var la_ = this._interp.adaptivePredict(this._input, 362, this._ctx);
                            if (la_ === 1) {
                                this.state = 2273;
                                this.match(VisualBasic6Parser.WS);
                            }
                            this.state = 2276;
                            this.valueStmt(6);
                            break;
                        case 11:
                            localctx = new VsEqvContext(this, new ValueStmtContext(this, _parentctx, _parentState));
                            this.pushNewRecursionContext(localctx, _startState, VisualBasic6Parser.RULE_valueStmt);
                            this.state = 2277;
                            if (!(this.precpred(this._ctx, 4))) {
                                throw new antlr4_1.default.error.FailedPredicateException(this, "this.precpred(this._ctx, 4)");
                            }
                            this.state = 2279;
                            this._errHandler.sync(this);
                            _la = this._input.LA(1);
                            if (_la === VisualBasic6Parser.WS) {
                                this.state = 2278;
                                this.match(VisualBasic6Parser.WS);
                            }
                            this.state = 2281;
                            this.match(VisualBasic6Parser.EQV);
                            this.state = 2283;
                            this._errHandler.sync(this);
                            var la_ = this._interp.adaptivePredict(this._input, 364, this._ctx);
                            if (la_ === 1) {
                                this.state = 2282;
                                this.match(VisualBasic6Parser.WS);
                            }
                            this.state = 2285;
                            this.valueStmt(5);
                            break;
                        case 12:
                            localctx = new VsImpContext(this, new ValueStmtContext(this, _parentctx, _parentState));
                            this.pushNewRecursionContext(localctx, _startState, VisualBasic6Parser.RULE_valueStmt);
                            this.state = 2286;
                            if (!(this.precpred(this._ctx, 3))) {
                                throw new antlr4_1.default.error.FailedPredicateException(this, "this.precpred(this._ctx, 3)");
                            }
                            this.state = 2288;
                            this._errHandler.sync(this);
                            _la = this._input.LA(1);
                            if (_la === VisualBasic6Parser.WS) {
                                this.state = 2287;
                                this.match(VisualBasic6Parser.WS);
                            }
                            this.state = 2290;
                            this.match(VisualBasic6Parser.IMP);
                            this.state = 2292;
                            this._errHandler.sync(this);
                            var la_ = this._interp.adaptivePredict(this._input, 366, this._ctx);
                            if (la_ === 1) {
                                this.state = 2291;
                                this.match(VisualBasic6Parser.WS);
                            }
                            this.state = 2294;
                            this.valueStmt(4);
                            break;
                    }
                }
                this.state = 2299;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input, 368, this._ctx);
            }
        }
        catch (error) {
            if (error instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = error;
                this._errHandler.reportError(this, error);
                this._errHandler.recover(this, error);
            }
            else {
                throw error;
            }
        }
        finally {
            this.unrollRecursionContexts(_parentctx);
        }
        return localctx;
    }
    variableStmt() {
        let localctx = new VariableStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 222, VisualBasic6Parser.RULE_variableStmt);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2303;
            this._errHandler.sync(this);
            switch (this._input.LA(1)) {
                case VisualBasic6Parser.DIM:
                    this.state = 2300;
                    this.match(VisualBasic6Parser.DIM);
                    break;
                case VisualBasic6Parser.STATIC:
                    this.state = 2301;
                    this.match(VisualBasic6Parser.STATIC);
                    break;
                case VisualBasic6Parser.FRIEND:
                case VisualBasic6Parser.GLOBAL:
                case VisualBasic6Parser.PRIVATE:
                case VisualBasic6Parser.PUBLIC:
                    this.state = 2302;
                    this.visibility();
                    break;
                default:
                    throw new antlr4_1.default.error.NoViableAltException(this);
            }
            this.state = 2305;
            this.match(VisualBasic6Parser.WS);
            this.state = 2308;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 370, this._ctx);
            if (la_ === 1) {
                this.state = 2306;
                this.match(VisualBasic6Parser.WITHEVENTS);
                this.state = 2307;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 2310;
            this.variableListStmt();
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    variableListStmt() {
        let localctx = new VariableListStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 224, VisualBasic6Parser.RULE_variableListStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2312;
            this.variableSubStmt();
            this.state = 2323;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input, 373, this._ctx);
            while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER) {
                if (_alt === 1) {
                    this.state = 2314;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if (_la === VisualBasic6Parser.WS) {
                        this.state = 2313;
                        this.match(VisualBasic6Parser.WS);
                    }
                    this.state = 2316;
                    this.match(VisualBasic6Parser.COMMA);
                    this.state = 2318;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if (_la === VisualBasic6Parser.WS) {
                        this.state = 2317;
                        this.match(VisualBasic6Parser.WS);
                    }
                    this.state = 2320;
                    this.variableSubStmt();
                }
                this.state = 2325;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input, 373, this._ctx);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    variableSubStmt() {
        let localctx = new VariableSubStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 226, VisualBasic6Parser.RULE_variableSubStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2326;
            this.ambiguousIdentifier();
            this.state = 2328;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 374, this._ctx);
            if (la_ === 1) {
                this.state = 2327;
                this.typeHint();
            }
            this.state = 2347;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 380, this._ctx);
            if (la_ === 1) {
                this.state = 2331;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === VisualBasic6Parser.WS) {
                    this.state = 2330;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 2333;
                this.match(VisualBasic6Parser.LPAREN);
                this.state = 2335;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 376, this._ctx);
                if (la_ === 1) {
                    this.state = 2334;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 2341;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFCUR - 32)) | (1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)))) !== 0) || ((((_la - 66)) & ~0x1f) == 0 && ((1 << (_la - 66)) & ((1 << (VisualBasic6Parser.FALSE - 66)) | (1 << (VisualBasic6Parser.FILECOPY - 66)) | (1 << (VisualBasic6Parser.FRIEND - 66)) | (1 << (VisualBasic6Parser.FOR - 66)) | (1 << (VisualBasic6Parser.FUNCTION - 66)) | (1 << (VisualBasic6Parser.GET - 66)) | (1 << (VisualBasic6Parser.GLOBAL - 66)) | (1 << (VisualBasic6Parser.GOSUB - 66)) | (1 << (VisualBasic6Parser.GOTO - 66)) | (1 << (VisualBasic6Parser.IF - 66)) | (1 << (VisualBasic6Parser.IMP - 66)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 66)) | (1 << (VisualBasic6Parser.IN - 66)) | (1 << (VisualBasic6Parser.INPUT - 66)) | (1 << (VisualBasic6Parser.IS - 66)) | (1 << (VisualBasic6Parser.INTEGER - 66)) | (1 << (VisualBasic6Parser.KILL - 66)) | (1 << (VisualBasic6Parser.LOAD - 66)) | (1 << (VisualBasic6Parser.LOCK - 66)) | (1 << (VisualBasic6Parser.LONG - 66)) | (1 << (VisualBasic6Parser.LOOP - 66)) | (1 << (VisualBasic6Parser.LEN - 66)) | (1 << (VisualBasic6Parser.LET - 66)) | (1 << (VisualBasic6Parser.LIB - 66)) | (1 << (VisualBasic6Parser.LIKE - 66)) | (1 << (VisualBasic6Parser.LSET - 66)))) !== 0) || ((((_la - 100)) & ~0x1f) == 0 && ((1 << (_la - 100)) & ((1 << (VisualBasic6Parser.ME - 100)) | (1 << (VisualBasic6Parser.MID - 100)) | (1 << (VisualBasic6Parser.MKDIR - 100)) | (1 << (VisualBasic6Parser.MOD - 100)) | (1 << (VisualBasic6Parser.NAME - 100)) | (1 << (VisualBasic6Parser.NEXT - 100)) | (1 << (VisualBasic6Parser.NEW - 100)) | (1 << (VisualBasic6Parser.NOT - 100)) | (1 << (VisualBasic6Parser.NOTHING - 100)) | (1 << (VisualBasic6Parser.NULL_ - 100)) | (1 << (VisualBasic6Parser.OBJECT - 100)) | (1 << (VisualBasic6Parser.ON - 100)) | (1 << (VisualBasic6Parser.OPEN - 100)) | (1 << (VisualBasic6Parser.OPTIONAL - 100)) | (1 << (VisualBasic6Parser.OR - 100)) | (1 << (VisualBasic6Parser.OUTPUT - 100)) | (1 << (VisualBasic6Parser.PARAMARRAY - 100)) | (1 << (VisualBasic6Parser.PRESERVE - 100)) | (1 << (VisualBasic6Parser.PRINT - 100)) | (1 << (VisualBasic6Parser.PRIVATE - 100)) | (1 << (VisualBasic6Parser.PUBLIC - 100)) | (1 << (VisualBasic6Parser.PUT - 100)) | (1 << (VisualBasic6Parser.RANDOM - 100)))) !== 0) || ((((_la - 132)) & ~0x1f) == 0 && ((1 << (_la - 132)) & ((1 << (VisualBasic6Parser.RANDOMIZE - 132)) | (1 << (VisualBasic6Parser.RAISEEVENT - 132)) | (1 << (VisualBasic6Parser.READ - 132)) | (1 << (VisualBasic6Parser.REDIM - 132)) | (1 << (VisualBasic6Parser.REM - 132)) | (1 << (VisualBasic6Parser.RESET - 132)) | (1 << (VisualBasic6Parser.RESUME - 132)) | (1 << (VisualBasic6Parser.RETURN - 132)) | (1 << (VisualBasic6Parser.RMDIR - 132)) | (1 << (VisualBasic6Parser.RSET - 132)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 132)) | (1 << (VisualBasic6Parser.SAVESETTING - 132)) | (1 << (VisualBasic6Parser.SEEK - 132)) | (1 << (VisualBasic6Parser.SELECT - 132)) | (1 << (VisualBasic6Parser.SENDKEYS - 132)) | (1 << (VisualBasic6Parser.SET - 132)) | (1 << (VisualBasic6Parser.SETATTR - 132)) | (1 << (VisualBasic6Parser.SHARED - 132)) | (1 << (VisualBasic6Parser.SINGLE - 132)) | (1 << (VisualBasic6Parser.SPC - 132)) | (1 << (VisualBasic6Parser.STATIC - 132)) | (1 << (VisualBasic6Parser.STEP - 132)) | (1 << (VisualBasic6Parser.STOP - 132)) | (1 << (VisualBasic6Parser.STRING - 132)) | (1 << (VisualBasic6Parser.SUB - 132)) | (1 << (VisualBasic6Parser.TAB - 132)) | (1 << (VisualBasic6Parser.TEXT - 132)) | (1 << (VisualBasic6Parser.THEN - 132)) | (1 << (VisualBasic6Parser.TIME - 132)) | (1 << (VisualBasic6Parser.TO - 132)) | (1 << (VisualBasic6Parser.TRUE - 132)))) !== 0) || ((((_la - 164)) & ~0x1f) == 0 && ((1 << (_la - 164)) & ((1 << (VisualBasic6Parser.TYPE - 164)) | (1 << (VisualBasic6Parser.TYPEOF - 164)) | (1 << (VisualBasic6Parser.UNLOAD - 164)) | (1 << (VisualBasic6Parser.UNLOCK - 164)) | (1 << (VisualBasic6Parser.UNTIL - 164)) | (1 << (VisualBasic6Parser.VARIANT - 164)) | (1 << (VisualBasic6Parser.VERSION - 164)) | (1 << (VisualBasic6Parser.WEND - 164)) | (1 << (VisualBasic6Parser.WHILE - 164)) | (1 << (VisualBasic6Parser.WIDTH - 164)) | (1 << (VisualBasic6Parser.WITH - 164)) | (1 << (VisualBasic6Parser.WITHEVENTS - 164)) | (1 << (VisualBasic6Parser.WRITE - 164)) | (1 << (VisualBasic6Parser.XOR - 164)) | (1 << (VisualBasic6Parser.DOT - 164)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 164)) | (1 << (VisualBasic6Parser.LPAREN - 164)))) !== 0) || ((((_la - 196)) & ~0x1f) == 0 && ((1 << (_la - 196)) & ((1 << (VisualBasic6Parser.MINUS - 196)) | (1 << (VisualBasic6Parser.PLUS - 196)) | (1 << (VisualBasic6Parser.L_SQUARE_BRACKET - 196)) | (1 << (VisualBasic6Parser.STRINGLITERAL - 196)) | (1 << (VisualBasic6Parser.DATELITERAL - 196)) | (1 << (VisualBasic6Parser.COLORLITERAL - 196)) | (1 << (VisualBasic6Parser.INTEGERLITERAL - 196)) | (1 << (VisualBasic6Parser.DOUBLELITERAL - 196)) | (1 << (VisualBasic6Parser.FILENUMBER - 196)) | (1 << (VisualBasic6Parser.OCTALLITERAL - 196)) | (1 << (VisualBasic6Parser.IDENTIFIER - 196)) | (1 << (VisualBasic6Parser.WS - 196)))) !== 0)) {
                    this.state = 2337;
                    this.subscripts();
                    this.state = 2339;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if (_la === VisualBasic6Parser.WS) {
                        this.state = 2338;
                        this.match(VisualBasic6Parser.WS);
                    }
                }
                this.state = 2343;
                this.match(VisualBasic6Parser.RPAREN);
                this.state = 2345;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 379, this._ctx);
                if (la_ === 1) {
                    this.state = 2344;
                    this.match(VisualBasic6Parser.WS);
                }
            }
            this.state = 2351;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 381, this._ctx);
            if (la_ === 1) {
                this.state = 2349;
                this.match(VisualBasic6Parser.WS);
                this.state = 2350;
                this.asTypeClause();
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    whileWendStmt() {
        let localctx = new WhileWendStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 228, VisualBasic6Parser.RULE_whileWendStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2353;
            this.match(VisualBasic6Parser.WHILE);
            this.state = 2354;
            this.match(VisualBasic6Parser.WS);
            this.state = 2355;
            this.valueStmt(0);
            this.state = 2357;
            this._errHandler.sync(this);
            var _alt = 1;
            do {
                switch (_alt) {
                    case 1:
                        this.state = 2356;
                        this.match(VisualBasic6Parser.NEWLINE);
                        break;
                    default:
                        throw new antlr4_1.default.error.NoViableAltException(this);
                }
                this.state = 2359;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input, 382, this._ctx);
            } while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER);
            this.state = 2364;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input, 383, this._ctx);
            while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER) {
                if (_alt === 1) {
                    this.state = 2361;
                    this.block();
                }
                this.state = 2366;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input, 383, this._ctx);
            }
            this.state = 2370;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while (_la === VisualBasic6Parser.NEWLINE) {
                this.state = 2367;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 2372;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            this.state = 2373;
            this.match(VisualBasic6Parser.WEND);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    widthStmt() {
        let localctx = new WidthStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 230, VisualBasic6Parser.RULE_widthStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2375;
            this.match(VisualBasic6Parser.WIDTH);
            this.state = 2376;
            this.match(VisualBasic6Parser.WS);
            this.state = 2377;
            this.valueStmt(0);
            this.state = 2379;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 2378;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 2381;
            this.match(VisualBasic6Parser.COMMA);
            this.state = 2383;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 386, this._ctx);
            if (la_ === 1) {
                this.state = 2382;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 2385;
            this.valueStmt(0);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    withStmt() {
        let localctx = new WithStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 232, VisualBasic6Parser.RULE_withStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2387;
            this.match(VisualBasic6Parser.WITH);
            this.state = 2388;
            this.match(VisualBasic6Parser.WS);
            this.state = 2391;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 387, this._ctx);
            if (la_ === 1) {
                this.state = 2389;
                this.match(VisualBasic6Parser.NEW);
                this.state = 2390;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 2393;
            this.implicitCallStmt_InStmt();
            this.state = 2395;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 2394;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 2397;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while (_la === VisualBasic6Parser.NEWLINE);
            this.state = 2405;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFCUR - 32)) | (1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)) | (1 << (VisualBasic6Parser.EXIT_DO - 32)) | (1 << (VisualBasic6Parser.EXIT_FOR - 32)) | (1 << (VisualBasic6Parser.EXIT_FUNCTION - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (VisualBasic6Parser.EXIT_PROPERTY - 64)) | (1 << (VisualBasic6Parser.EXIT_SUB - 64)) | (1 << (VisualBasic6Parser.FALSE - 64)) | (1 << (VisualBasic6Parser.FILECOPY - 64)) | (1 << (VisualBasic6Parser.FRIEND - 64)) | (1 << (VisualBasic6Parser.FOR - 64)) | (1 << (VisualBasic6Parser.FUNCTION - 64)) | (1 << (VisualBasic6Parser.GET - 64)) | (1 << (VisualBasic6Parser.GLOBAL - 64)) | (1 << (VisualBasic6Parser.GOSUB - 64)) | (1 << (VisualBasic6Parser.GOTO - 64)) | (1 << (VisualBasic6Parser.IF - 64)) | (1 << (VisualBasic6Parser.IMP - 64)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 64)) | (1 << (VisualBasic6Parser.IN - 64)) | (1 << (VisualBasic6Parser.INPUT - 64)) | (1 << (VisualBasic6Parser.IS - 64)) | (1 << (VisualBasic6Parser.INTEGER - 64)) | (1 << (VisualBasic6Parser.KILL - 64)) | (1 << (VisualBasic6Parser.LOAD - 64)) | (1 << (VisualBasic6Parser.LOCK - 64)) | (1 << (VisualBasic6Parser.LONG - 64)) | (1 << (VisualBasic6Parser.LOOP - 64)) | (1 << (VisualBasic6Parser.LEN - 64)) | (1 << (VisualBasic6Parser.LET - 64)) | (1 << (VisualBasic6Parser.LIB - 64)) | (1 << (VisualBasic6Parser.LIKE - 64)) | (1 << (VisualBasic6Parser.LINE_INPUT - 64)) | (1 << (VisualBasic6Parser.LSET - 64)))) !== 0) || ((((_la - 96)) & ~0x1f) == 0 && ((1 << (_la - 96)) & ((1 << (VisualBasic6Parser.MACRO_IF - 96)) | (1 << (VisualBasic6Parser.ME - 96)) | (1 << (VisualBasic6Parser.MID - 96)) | (1 << (VisualBasic6Parser.MKDIR - 96)) | (1 << (VisualBasic6Parser.MOD - 96)) | (1 << (VisualBasic6Parser.NAME - 96)) | (1 << (VisualBasic6Parser.NEXT - 96)) | (1 << (VisualBasic6Parser.NEW - 96)) | (1 << (VisualBasic6Parser.NOT - 96)) | (1 << (VisualBasic6Parser.NOTHING - 96)) | (1 << (VisualBasic6Parser.NULL_ - 96)) | (1 << (VisualBasic6Parser.OBJECT - 96)) | (1 << (VisualBasic6Parser.ON - 96)) | (1 << (VisualBasic6Parser.ON_ERROR - 96)) | (1 << (VisualBasic6Parser.ON_LOCAL_ERROR - 96)) | (1 << (VisualBasic6Parser.OPEN - 96)) | (1 << (VisualBasic6Parser.OPTIONAL - 96)) | (1 << (VisualBasic6Parser.OR - 96)) | (1 << (VisualBasic6Parser.OUTPUT - 96)) | (1 << (VisualBasic6Parser.PARAMARRAY - 96)) | (1 << (VisualBasic6Parser.PRESERVE - 96)) | (1 << (VisualBasic6Parser.PRINT - 96)) | (1 << (VisualBasic6Parser.PRIVATE - 96)))) !== 0) || ((((_la - 129)) & ~0x1f) == 0 && ((1 << (_la - 129)) & ((1 << (VisualBasic6Parser.PUBLIC - 129)) | (1 << (VisualBasic6Parser.PUT - 129)) | (1 << (VisualBasic6Parser.RANDOM - 129)) | (1 << (VisualBasic6Parser.RANDOMIZE - 129)) | (1 << (VisualBasic6Parser.RAISEEVENT - 129)) | (1 << (VisualBasic6Parser.READ - 129)) | (1 << (VisualBasic6Parser.REDIM - 129)) | (1 << (VisualBasic6Parser.REM - 129)) | (1 << (VisualBasic6Parser.RESET - 129)) | (1 << (VisualBasic6Parser.RESUME - 129)) | (1 << (VisualBasic6Parser.RETURN - 129)) | (1 << (VisualBasic6Parser.RMDIR - 129)) | (1 << (VisualBasic6Parser.RSET - 129)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 129)) | (1 << (VisualBasic6Parser.SAVESETTING - 129)) | (1 << (VisualBasic6Parser.SEEK - 129)) | (1 << (VisualBasic6Parser.SELECT - 129)) | (1 << (VisualBasic6Parser.SENDKEYS - 129)) | (1 << (VisualBasic6Parser.SET - 129)) | (1 << (VisualBasic6Parser.SETATTR - 129)) | (1 << (VisualBasic6Parser.SHARED - 129)) | (1 << (VisualBasic6Parser.SINGLE - 129)) | (1 << (VisualBasic6Parser.SPC - 129)) | (1 << (VisualBasic6Parser.STATIC - 129)) | (1 << (VisualBasic6Parser.STEP - 129)) | (1 << (VisualBasic6Parser.STOP - 129)) | (1 << (VisualBasic6Parser.STRING - 129)) | (1 << (VisualBasic6Parser.SUB - 129)) | (1 << (VisualBasic6Parser.TAB - 129)) | (1 << (VisualBasic6Parser.TEXT - 129)) | (1 << (VisualBasic6Parser.THEN - 129)))) !== 0) || ((((_la - 161)) & ~0x1f) == 0 && ((1 << (_la - 161)) & ((1 << (VisualBasic6Parser.TIME - 161)) | (1 << (VisualBasic6Parser.TO - 161)) | (1 << (VisualBasic6Parser.TRUE - 161)) | (1 << (VisualBasic6Parser.TYPE - 161)) | (1 << (VisualBasic6Parser.TYPEOF - 161)) | (1 << (VisualBasic6Parser.UNLOAD - 161)) | (1 << (VisualBasic6Parser.UNLOCK - 161)) | (1 << (VisualBasic6Parser.UNTIL - 161)) | (1 << (VisualBasic6Parser.VARIANT - 161)) | (1 << (VisualBasic6Parser.VERSION - 161)) | (1 << (VisualBasic6Parser.WEND - 161)) | (1 << (VisualBasic6Parser.WHILE - 161)) | (1 << (VisualBasic6Parser.WIDTH - 161)) | (1 << (VisualBasic6Parser.WITH - 161)) | (1 << (VisualBasic6Parser.WITHEVENTS - 161)) | (1 << (VisualBasic6Parser.WRITE - 161)) | (1 << (VisualBasic6Parser.XOR - 161)) | (1 << (VisualBasic6Parser.DOT - 161)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 161)))) !== 0) || ((((_la - 207)) & ~0x1f) == 0 && ((1 << (_la - 207)) & ((1 << (VisualBasic6Parser.L_SQUARE_BRACKET - 207)) | (1 << (VisualBasic6Parser.IDENTIFIER - 207)) | (1 << (VisualBasic6Parser.WS - 207)))) !== 0)) {
                this.state = 2399;
                this.block();
                this.state = 2401;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                do {
                    this.state = 2400;
                    this.match(VisualBasic6Parser.NEWLINE);
                    this.state = 2403;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                } while (_la === VisualBasic6Parser.NEWLINE);
            }
            this.state = 2407;
            this.match(VisualBasic6Parser.END_WITH);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    writeStmt() {
        let localctx = new WriteStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 234, VisualBasic6Parser.RULE_writeStmt);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2409;
            this.match(VisualBasic6Parser.WRITE);
            this.state = 2410;
            this.match(VisualBasic6Parser.WS);
            this.state = 2411;
            this.valueStmt(0);
            this.state = 2413;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 2412;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 2415;
            this.match(VisualBasic6Parser.COMMA);
            this.state = 2420;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 393, this._ctx);
            if (la_ === 1) {
                this.state = 2417;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 392, this._ctx);
                if (la_ === 1) {
                    this.state = 2416;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 2419;
                this.outputList();
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    explicitCallStmt() {
        let localctx = new ExplicitCallStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 236, VisualBasic6Parser.RULE_explicitCallStmt);
        try {
            this.state = 2424;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 394, this._ctx);
            switch (la_) {
                case 1:
                    this.enterOuterAlt(localctx, 1);
                    this.state = 2422;
                    this.eCS_ProcedureCall();
                    break;
                case 2:
                    this.enterOuterAlt(localctx, 2);
                    this.state = 2423;
                    this.eCS_MemberProcedureCall();
                    break;
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    eCS_ProcedureCall() {
        let localctx = new ECS_ProcedureCallContext(this, this._ctx, this.state);
        this.enterRule(localctx, 238, VisualBasic6Parser.RULE_eCS_ProcedureCall);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2426;
            this.match(VisualBasic6Parser.CALL);
            this.state = 2427;
            this.match(VisualBasic6Parser.WS);
            this.state = 2428;
            this.ambiguousIdentifier();
            this.state = 2430;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 395, this._ctx);
            if (la_ === 1) {
                this.state = 2429;
                this.typeHint();
            }
            this.state = 2445;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 399, this._ctx);
            if (la_ === 1) {
                this.state = 2433;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === VisualBasic6Parser.WS) {
                    this.state = 2432;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 2435;
                this.match(VisualBasic6Parser.LPAREN);
                this.state = 2437;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 397, this._ctx);
                if (la_ === 1) {
                    this.state = 2436;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 2439;
                this.argsCall();
                this.state = 2441;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === VisualBasic6Parser.WS) {
                    this.state = 2440;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 2443;
                this.match(VisualBasic6Parser.RPAREN);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    eCS_MemberProcedureCall() {
        let localctx = new ECS_MemberProcedureCallContext(this, this._ctx, this.state);
        this.enterRule(localctx, 240, VisualBasic6Parser.RULE_eCS_MemberProcedureCall);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2447;
            this.match(VisualBasic6Parser.CALL);
            this.state = 2448;
            this.match(VisualBasic6Parser.WS);
            this.state = 2450;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 400, this._ctx);
            if (la_ === 1) {
                this.state = 2449;
                this.implicitCallStmt_InStmt();
            }
            this.state = 2452;
            this.match(VisualBasic6Parser.DOT);
            this.state = 2454;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 2453;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 2456;
            this.ambiguousIdentifier();
            this.state = 2458;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 402, this._ctx);
            if (la_ === 1) {
                this.state = 2457;
                this.typeHint();
            }
            this.state = 2473;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 406, this._ctx);
            if (la_ === 1) {
                this.state = 2461;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === VisualBasic6Parser.WS) {
                    this.state = 2460;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 2463;
                this.match(VisualBasic6Parser.LPAREN);
                this.state = 2465;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input, 404, this._ctx);
                if (la_ === 1) {
                    this.state = 2464;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 2467;
                this.argsCall();
                this.state = 2469;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === VisualBasic6Parser.WS) {
                    this.state = 2468;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 2471;
                this.match(VisualBasic6Parser.RPAREN);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    implicitCallStmt_InBlock() {
        let localctx = new ImplicitCallStmt_InBlockContext(this, this._ctx, this.state);
        this.enterRule(localctx, 242, VisualBasic6Parser.RULE_implicitCallStmt_InBlock);
        try {
            this.state = 2477;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 407, this._ctx);
            switch (la_) {
                case 1:
                    this.enterOuterAlt(localctx, 1);
                    this.state = 2475;
                    this.iCS_B_ProcedureCall();
                    break;
                case 2:
                    this.enterOuterAlt(localctx, 2);
                    this.state = 2476;
                    this.iCS_B_MemberProcedureCall();
                    break;
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    iCS_B_ProcedureCall() {
        let localctx = new ICS_B_ProcedureCallContext(this, this._ctx, this.state);
        this.enterRule(localctx, 244, VisualBasic6Parser.RULE_iCS_B_ProcedureCall);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2479;
            this.certainIdentifier();
            this.state = 2482;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 408, this._ctx);
            if (la_ === 1) {
                this.state = 2480;
                this.match(VisualBasic6Parser.WS);
                this.state = 2481;
                this.argsCall();
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    iCS_B_MemberProcedureCall() {
        let localctx = new ICS_B_MemberProcedureCallContext(this, this._ctx, this.state);
        this.enterRule(localctx, 246, VisualBasic6Parser.RULE_iCS_B_MemberProcedureCall);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2485;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 409, this._ctx);
            if (la_ === 1) {
                this.state = 2484;
                this.implicitCallStmt_InStmt();
            }
            this.state = 2487;
            this.match(VisualBasic6Parser.DOT);
            this.state = 2488;
            this.ambiguousIdentifier();
            this.state = 2490;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 410, this._ctx);
            if (la_ === 1) {
                this.state = 2489;
                this.typeHint();
            }
            this.state = 2494;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 411, this._ctx);
            if (la_ === 1) {
                this.state = 2492;
                this.match(VisualBasic6Parser.WS);
                this.state = 2493;
                this.argsCall();
            }
            this.state = 2497;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 412, this._ctx);
            if (la_ === 1) {
                this.state = 2496;
                this.dictionaryCallStmt();
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    implicitCallStmt_InStmt() {
        let localctx = new ImplicitCallStmt_InStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 248, VisualBasic6Parser.RULE_implicitCallStmt_InStmt);
        try {
            this.state = 2503;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 413, this._ctx);
            switch (la_) {
                case 1:
                    this.enterOuterAlt(localctx, 1);
                    this.state = 2499;
                    this.iCS_S_MembersCall();
                    break;
                case 2:
                    this.enterOuterAlt(localctx, 2);
                    this.state = 2500;
                    this.iCS_S_VariableOrProcedureCall();
                    break;
                case 3:
                    this.enterOuterAlt(localctx, 3);
                    this.state = 2501;
                    this.iCS_S_ProcedureOrArrayCall();
                    break;
                case 4:
                    this.enterOuterAlt(localctx, 4);
                    this.state = 2502;
                    this.iCS_S_DictionaryCall();
                    break;
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    iCS_S_VariableOrProcedureCall() {
        let localctx = new ICS_S_VariableOrProcedureCallContext(this, this._ctx, this.state);
        this.enterRule(localctx, 250, VisualBasic6Parser.RULE_iCS_S_VariableOrProcedureCall);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2505;
            this.ambiguousIdentifier();
            this.state = 2507;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 414, this._ctx);
            if (la_ === 1) {
                this.state = 2506;
                this.typeHint();
            }
            this.state = 2510;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 415, this._ctx);
            if (la_ === 1) {
                this.state = 2509;
                this.dictionaryCallStmt();
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    iCS_S_ProcedureOrArrayCall() {
        let localctx = new ICS_S_ProcedureOrArrayCallContext(this, this._ctx, this.state);
        this.enterRule(localctx, 252, VisualBasic6Parser.RULE_iCS_S_ProcedureOrArrayCall);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2515;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 416, this._ctx);
            switch (la_) {
                case 1:
                    this.state = 2512;
                    this.ambiguousIdentifier();
                    break;
                case 2:
                    this.state = 2513;
                    this.baseType();
                    break;
                case 3:
                    this.state = 2514;
                    this.iCS_S_NestedProcedureCall();
                    break;
            }
            this.state = 2518;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (((((_la - 178)) & ~0x1f) == 0 && ((1 << (_la - 178)) & ((1 << (VisualBasic6Parser.AMPERSAND - 178)) | (1 << (VisualBasic6Parser.AT - 178)) | (1 << (VisualBasic6Parser.DOLLAR - 178)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 178)) | (1 << (VisualBasic6Parser.HASH - 178)) | (1 << (VisualBasic6Parser.PERCENT - 178)))) !== 0)) {
                this.state = 2517;
                this.typeHint();
            }
            this.state = 2521;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 2520;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 2534;
            this._errHandler.sync(this);
            var _alt = 1;
            do {
                switch (_alt) {
                    case 1:
                        this.state = 2523;
                        this.match(VisualBasic6Parser.LPAREN);
                        this.state = 2525;
                        this._errHandler.sync(this);
                        var la_ = this._interp.adaptivePredict(this._input, 419, this._ctx);
                        if (la_ === 1) {
                            this.state = 2524;
                            this.match(VisualBasic6Parser.WS);
                        }
                        this.state = 2531;
                        this._errHandler.sync(this);
                        _la = this._input.LA(1);
                        if ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFCUR - 32)) | (1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)))) !== 0) || ((((_la - 66)) & ~0x1f) == 0 && ((1 << (_la - 66)) & ((1 << (VisualBasic6Parser.FALSE - 66)) | (1 << (VisualBasic6Parser.FILECOPY - 66)) | (1 << (VisualBasic6Parser.FRIEND - 66)) | (1 << (VisualBasic6Parser.FOR - 66)) | (1 << (VisualBasic6Parser.FUNCTION - 66)) | (1 << (VisualBasic6Parser.GET - 66)) | (1 << (VisualBasic6Parser.GLOBAL - 66)) | (1 << (VisualBasic6Parser.GOSUB - 66)) | (1 << (VisualBasic6Parser.GOTO - 66)) | (1 << (VisualBasic6Parser.IF - 66)) | (1 << (VisualBasic6Parser.IMP - 66)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 66)) | (1 << (VisualBasic6Parser.IN - 66)) | (1 << (VisualBasic6Parser.INPUT - 66)) | (1 << (VisualBasic6Parser.IS - 66)) | (1 << (VisualBasic6Parser.INTEGER - 66)) | (1 << (VisualBasic6Parser.KILL - 66)) | (1 << (VisualBasic6Parser.LOAD - 66)) | (1 << (VisualBasic6Parser.LOCK - 66)) | (1 << (VisualBasic6Parser.LONG - 66)) | (1 << (VisualBasic6Parser.LOOP - 66)) | (1 << (VisualBasic6Parser.LEN - 66)) | (1 << (VisualBasic6Parser.LET - 66)) | (1 << (VisualBasic6Parser.LIB - 66)) | (1 << (VisualBasic6Parser.LIKE - 66)) | (1 << (VisualBasic6Parser.LSET - 66)))) !== 0) || ((((_la - 100)) & ~0x1f) == 0 && ((1 << (_la - 100)) & ((1 << (VisualBasic6Parser.ME - 100)) | (1 << (VisualBasic6Parser.MID - 100)) | (1 << (VisualBasic6Parser.MKDIR - 100)) | (1 << (VisualBasic6Parser.MOD - 100)) | (1 << (VisualBasic6Parser.NAME - 100)) | (1 << (VisualBasic6Parser.NEXT - 100)) | (1 << (VisualBasic6Parser.NEW - 100)) | (1 << (VisualBasic6Parser.NOT - 100)) | (1 << (VisualBasic6Parser.NOTHING - 100)) | (1 << (VisualBasic6Parser.NULL_ - 100)) | (1 << (VisualBasic6Parser.OBJECT - 100)) | (1 << (VisualBasic6Parser.ON - 100)) | (1 << (VisualBasic6Parser.OPEN - 100)) | (1 << (VisualBasic6Parser.OPTIONAL - 100)) | (1 << (VisualBasic6Parser.OR - 100)) | (1 << (VisualBasic6Parser.OUTPUT - 100)) | (1 << (VisualBasic6Parser.PARAMARRAY - 100)) | (1 << (VisualBasic6Parser.PRESERVE - 100)) | (1 << (VisualBasic6Parser.PRINT - 100)) | (1 << (VisualBasic6Parser.PRIVATE - 100)) | (1 << (VisualBasic6Parser.PUBLIC - 100)) | (1 << (VisualBasic6Parser.PUT - 100)) | (1 << (VisualBasic6Parser.RANDOM - 100)))) !== 0) || ((((_la - 132)) & ~0x1f) == 0 && ((1 << (_la - 132)) & ((1 << (VisualBasic6Parser.RANDOMIZE - 132)) | (1 << (VisualBasic6Parser.RAISEEVENT - 132)) | (1 << (VisualBasic6Parser.READ - 132)) | (1 << (VisualBasic6Parser.REDIM - 132)) | (1 << (VisualBasic6Parser.REM - 132)) | (1 << (VisualBasic6Parser.RESET - 132)) | (1 << (VisualBasic6Parser.RESUME - 132)) | (1 << (VisualBasic6Parser.RETURN - 132)) | (1 << (VisualBasic6Parser.RMDIR - 132)) | (1 << (VisualBasic6Parser.RSET - 132)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 132)) | (1 << (VisualBasic6Parser.SAVESETTING - 132)) | (1 << (VisualBasic6Parser.SEEK - 132)) | (1 << (VisualBasic6Parser.SELECT - 132)) | (1 << (VisualBasic6Parser.SENDKEYS - 132)) | (1 << (VisualBasic6Parser.SET - 132)) | (1 << (VisualBasic6Parser.SETATTR - 132)) | (1 << (VisualBasic6Parser.SHARED - 132)) | (1 << (VisualBasic6Parser.SINGLE - 132)) | (1 << (VisualBasic6Parser.SPC - 132)) | (1 << (VisualBasic6Parser.STATIC - 132)) | (1 << (VisualBasic6Parser.STEP - 132)) | (1 << (VisualBasic6Parser.STOP - 132)) | (1 << (VisualBasic6Parser.STRING - 132)) | (1 << (VisualBasic6Parser.SUB - 132)) | (1 << (VisualBasic6Parser.TAB - 132)) | (1 << (VisualBasic6Parser.TEXT - 132)) | (1 << (VisualBasic6Parser.THEN - 132)) | (1 << (VisualBasic6Parser.TIME - 132)) | (1 << (VisualBasic6Parser.TO - 132)) | (1 << (VisualBasic6Parser.TRUE - 132)))) !== 0) || ((((_la - 164)) & ~0x1f) == 0 && ((1 << (_la - 164)) & ((1 << (VisualBasic6Parser.TYPE - 164)) | (1 << (VisualBasic6Parser.TYPEOF - 164)) | (1 << (VisualBasic6Parser.UNLOAD - 164)) | (1 << (VisualBasic6Parser.UNLOCK - 164)) | (1 << (VisualBasic6Parser.UNTIL - 164)) | (1 << (VisualBasic6Parser.VARIANT - 164)) | (1 << (VisualBasic6Parser.VERSION - 164)) | (1 << (VisualBasic6Parser.WEND - 164)) | (1 << (VisualBasic6Parser.WHILE - 164)) | (1 << (VisualBasic6Parser.WIDTH - 164)) | (1 << (VisualBasic6Parser.WITH - 164)) | (1 << (VisualBasic6Parser.WITHEVENTS - 164)) | (1 << (VisualBasic6Parser.WRITE - 164)) | (1 << (VisualBasic6Parser.XOR - 164)) | (1 << (VisualBasic6Parser.COMMA - 164)) | (1 << (VisualBasic6Parser.DOT - 164)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 164)) | (1 << (VisualBasic6Parser.LPAREN - 164)))) !== 0) || ((((_la - 196)) & ~0x1f) == 0 && ((1 << (_la - 196)) & ((1 << (VisualBasic6Parser.MINUS - 196)) | (1 << (VisualBasic6Parser.PLUS - 196)) | (1 << (VisualBasic6Parser.SEMICOLON - 196)) | (1 << (VisualBasic6Parser.L_SQUARE_BRACKET - 196)) | (1 << (VisualBasic6Parser.STRINGLITERAL - 196)) | (1 << (VisualBasic6Parser.DATELITERAL - 196)) | (1 << (VisualBasic6Parser.COLORLITERAL - 196)) | (1 << (VisualBasic6Parser.INTEGERLITERAL - 196)) | (1 << (VisualBasic6Parser.DOUBLELITERAL - 196)) | (1 << (VisualBasic6Parser.FILENUMBER - 196)) | (1 << (VisualBasic6Parser.OCTALLITERAL - 196)) | (1 << (VisualBasic6Parser.IDENTIFIER - 196)) | (1 << (VisualBasic6Parser.WS - 196)))) !== 0)) {
                            this.state = 2527;
                            this.argsCall();
                            this.state = 2529;
                            this._errHandler.sync(this);
                            _la = this._input.LA(1);
                            if (_la === VisualBasic6Parser.WS) {
                                this.state = 2528;
                                this.match(VisualBasic6Parser.WS);
                            }
                        }
                        this.state = 2533;
                        this.match(VisualBasic6Parser.RPAREN);
                        break;
                    default:
                        throw new antlr4_1.default.error.NoViableAltException(this);
                }
                this.state = 2536;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input, 422, this._ctx);
            } while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER);
            this.state = 2539;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 423, this._ctx);
            if (la_ === 1) {
                this.state = 2538;
                this.dictionaryCallStmt();
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    iCS_S_NestedProcedureCall() {
        let localctx = new ICS_S_NestedProcedureCallContext(this, this._ctx, this.state);
        this.enterRule(localctx, 254, VisualBasic6Parser.RULE_iCS_S_NestedProcedureCall);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2541;
            this.ambiguousIdentifier();
            this.state = 2543;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (((((_la - 178)) & ~0x1f) == 0 && ((1 << (_la - 178)) & ((1 << (VisualBasic6Parser.AMPERSAND - 178)) | (1 << (VisualBasic6Parser.AT - 178)) | (1 << (VisualBasic6Parser.DOLLAR - 178)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 178)) | (1 << (VisualBasic6Parser.HASH - 178)) | (1 << (VisualBasic6Parser.PERCENT - 178)))) !== 0)) {
                this.state = 2542;
                this.typeHint();
            }
            this.state = 2546;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 2545;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 2548;
            this.match(VisualBasic6Parser.LPAREN);
            this.state = 2550;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 426, this._ctx);
            if (la_ === 1) {
                this.state = 2549;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 2556;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFCUR - 32)) | (1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)))) !== 0) || ((((_la - 66)) & ~0x1f) == 0 && ((1 << (_la - 66)) & ((1 << (VisualBasic6Parser.FALSE - 66)) | (1 << (VisualBasic6Parser.FILECOPY - 66)) | (1 << (VisualBasic6Parser.FRIEND - 66)) | (1 << (VisualBasic6Parser.FOR - 66)) | (1 << (VisualBasic6Parser.FUNCTION - 66)) | (1 << (VisualBasic6Parser.GET - 66)) | (1 << (VisualBasic6Parser.GLOBAL - 66)) | (1 << (VisualBasic6Parser.GOSUB - 66)) | (1 << (VisualBasic6Parser.GOTO - 66)) | (1 << (VisualBasic6Parser.IF - 66)) | (1 << (VisualBasic6Parser.IMP - 66)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 66)) | (1 << (VisualBasic6Parser.IN - 66)) | (1 << (VisualBasic6Parser.INPUT - 66)) | (1 << (VisualBasic6Parser.IS - 66)) | (1 << (VisualBasic6Parser.INTEGER - 66)) | (1 << (VisualBasic6Parser.KILL - 66)) | (1 << (VisualBasic6Parser.LOAD - 66)) | (1 << (VisualBasic6Parser.LOCK - 66)) | (1 << (VisualBasic6Parser.LONG - 66)) | (1 << (VisualBasic6Parser.LOOP - 66)) | (1 << (VisualBasic6Parser.LEN - 66)) | (1 << (VisualBasic6Parser.LET - 66)) | (1 << (VisualBasic6Parser.LIB - 66)) | (1 << (VisualBasic6Parser.LIKE - 66)) | (1 << (VisualBasic6Parser.LSET - 66)))) !== 0) || ((((_la - 100)) & ~0x1f) == 0 && ((1 << (_la - 100)) & ((1 << (VisualBasic6Parser.ME - 100)) | (1 << (VisualBasic6Parser.MID - 100)) | (1 << (VisualBasic6Parser.MKDIR - 100)) | (1 << (VisualBasic6Parser.MOD - 100)) | (1 << (VisualBasic6Parser.NAME - 100)) | (1 << (VisualBasic6Parser.NEXT - 100)) | (1 << (VisualBasic6Parser.NEW - 100)) | (1 << (VisualBasic6Parser.NOT - 100)) | (1 << (VisualBasic6Parser.NOTHING - 100)) | (1 << (VisualBasic6Parser.NULL_ - 100)) | (1 << (VisualBasic6Parser.OBJECT - 100)) | (1 << (VisualBasic6Parser.ON - 100)) | (1 << (VisualBasic6Parser.OPEN - 100)) | (1 << (VisualBasic6Parser.OPTIONAL - 100)) | (1 << (VisualBasic6Parser.OR - 100)) | (1 << (VisualBasic6Parser.OUTPUT - 100)) | (1 << (VisualBasic6Parser.PARAMARRAY - 100)) | (1 << (VisualBasic6Parser.PRESERVE - 100)) | (1 << (VisualBasic6Parser.PRINT - 100)) | (1 << (VisualBasic6Parser.PRIVATE - 100)) | (1 << (VisualBasic6Parser.PUBLIC - 100)) | (1 << (VisualBasic6Parser.PUT - 100)) | (1 << (VisualBasic6Parser.RANDOM - 100)))) !== 0) || ((((_la - 132)) & ~0x1f) == 0 && ((1 << (_la - 132)) & ((1 << (VisualBasic6Parser.RANDOMIZE - 132)) | (1 << (VisualBasic6Parser.RAISEEVENT - 132)) | (1 << (VisualBasic6Parser.READ - 132)) | (1 << (VisualBasic6Parser.REDIM - 132)) | (1 << (VisualBasic6Parser.REM - 132)) | (1 << (VisualBasic6Parser.RESET - 132)) | (1 << (VisualBasic6Parser.RESUME - 132)) | (1 << (VisualBasic6Parser.RETURN - 132)) | (1 << (VisualBasic6Parser.RMDIR - 132)) | (1 << (VisualBasic6Parser.RSET - 132)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 132)) | (1 << (VisualBasic6Parser.SAVESETTING - 132)) | (1 << (VisualBasic6Parser.SEEK - 132)) | (1 << (VisualBasic6Parser.SELECT - 132)) | (1 << (VisualBasic6Parser.SENDKEYS - 132)) | (1 << (VisualBasic6Parser.SET - 132)) | (1 << (VisualBasic6Parser.SETATTR - 132)) | (1 << (VisualBasic6Parser.SHARED - 132)) | (1 << (VisualBasic6Parser.SINGLE - 132)) | (1 << (VisualBasic6Parser.SPC - 132)) | (1 << (VisualBasic6Parser.STATIC - 132)) | (1 << (VisualBasic6Parser.STEP - 132)) | (1 << (VisualBasic6Parser.STOP - 132)) | (1 << (VisualBasic6Parser.STRING - 132)) | (1 << (VisualBasic6Parser.SUB - 132)) | (1 << (VisualBasic6Parser.TAB - 132)) | (1 << (VisualBasic6Parser.TEXT - 132)) | (1 << (VisualBasic6Parser.THEN - 132)) | (1 << (VisualBasic6Parser.TIME - 132)) | (1 << (VisualBasic6Parser.TO - 132)) | (1 << (VisualBasic6Parser.TRUE - 132)))) !== 0) || ((((_la - 164)) & ~0x1f) == 0 && ((1 << (_la - 164)) & ((1 << (VisualBasic6Parser.TYPE - 164)) | (1 << (VisualBasic6Parser.TYPEOF - 164)) | (1 << (VisualBasic6Parser.UNLOAD - 164)) | (1 << (VisualBasic6Parser.UNLOCK - 164)) | (1 << (VisualBasic6Parser.UNTIL - 164)) | (1 << (VisualBasic6Parser.VARIANT - 164)) | (1 << (VisualBasic6Parser.VERSION - 164)) | (1 << (VisualBasic6Parser.WEND - 164)) | (1 << (VisualBasic6Parser.WHILE - 164)) | (1 << (VisualBasic6Parser.WIDTH - 164)) | (1 << (VisualBasic6Parser.WITH - 164)) | (1 << (VisualBasic6Parser.WITHEVENTS - 164)) | (1 << (VisualBasic6Parser.WRITE - 164)) | (1 << (VisualBasic6Parser.XOR - 164)) | (1 << (VisualBasic6Parser.COMMA - 164)) | (1 << (VisualBasic6Parser.DOT - 164)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 164)) | (1 << (VisualBasic6Parser.LPAREN - 164)))) !== 0) || ((((_la - 196)) & ~0x1f) == 0 && ((1 << (_la - 196)) & ((1 << (VisualBasic6Parser.MINUS - 196)) | (1 << (VisualBasic6Parser.PLUS - 196)) | (1 << (VisualBasic6Parser.SEMICOLON - 196)) | (1 << (VisualBasic6Parser.L_SQUARE_BRACKET - 196)) | (1 << (VisualBasic6Parser.STRINGLITERAL - 196)) | (1 << (VisualBasic6Parser.DATELITERAL - 196)) | (1 << (VisualBasic6Parser.COLORLITERAL - 196)) | (1 << (VisualBasic6Parser.INTEGERLITERAL - 196)) | (1 << (VisualBasic6Parser.DOUBLELITERAL - 196)) | (1 << (VisualBasic6Parser.FILENUMBER - 196)) | (1 << (VisualBasic6Parser.OCTALLITERAL - 196)) | (1 << (VisualBasic6Parser.IDENTIFIER - 196)) | (1 << (VisualBasic6Parser.WS - 196)))) !== 0)) {
                this.state = 2552;
                this.argsCall();
                this.state = 2554;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === VisualBasic6Parser.WS) {
                    this.state = 2553;
                    this.match(VisualBasic6Parser.WS);
                }
            }
            this.state = 2558;
            this.match(VisualBasic6Parser.RPAREN);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    iCS_S_MembersCall() {
        let localctx = new ICS_S_MembersCallContext(this, this._ctx, this.state);
        this.enterRule(localctx, 256, VisualBasic6Parser.RULE_iCS_S_MembersCall);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2562;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 429, this._ctx);
            if (la_ === 1) {
                this.state = 2560;
                this.iCS_S_VariableOrProcedureCall();
            }
            else if (la_ === 2) {
                this.state = 2561;
                this.iCS_S_ProcedureOrArrayCall();
            }
            this.state = 2565;
            this._errHandler.sync(this);
            var _alt = 1;
            do {
                switch (_alt) {
                    case 1:
                        this.state = 2564;
                        this.iCS_S_MemberCall();
                        break;
                    default:
                        throw new antlr4_1.default.error.NoViableAltException(this);
                }
                this.state = 2567;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input, 430, this._ctx);
            } while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER);
            this.state = 2570;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 431, this._ctx);
            if (la_ === 1) {
                this.state = 2569;
                this.dictionaryCallStmt();
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    iCS_S_MemberCall() {
        let localctx = new ICS_S_MemberCallContext(this, this._ctx, this.state);
        this.enterRule(localctx, 258, VisualBasic6Parser.RULE_iCS_S_MemberCall);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2573;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 2572;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 2575;
            this.match(VisualBasic6Parser.DOT);
            this.state = 2578;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 433, this._ctx);
            switch (la_) {
                case 1:
                    this.state = 2576;
                    this.iCS_S_VariableOrProcedureCall();
                    break;
                case 2:
                    this.state = 2577;
                    this.iCS_S_ProcedureOrArrayCall();
                    break;
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    iCS_S_DictionaryCall() {
        let localctx = new ICS_S_DictionaryCallContext(this, this._ctx, this.state);
        this.enterRule(localctx, 260, VisualBasic6Parser.RULE_iCS_S_DictionaryCall);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2580;
            this.dictionaryCallStmt();
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    argsCall() {
        let localctx = new ArgsCallContext(this, this._ctx, this.state);
        this.enterRule(localctx, 262, VisualBasic6Parser.RULE_argsCall);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2594;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input, 437, this._ctx);
            while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER) {
                if (_alt === 1) {
                    this.state = 2583;
                    this._errHandler.sync(this);
                    var la_ = this._interp.adaptivePredict(this._input, 434, this._ctx);
                    if (la_ === 1) {
                        this.state = 2582;
                        this.argCall();
                    }
                    this.state = 2586;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if (_la === VisualBasic6Parser.WS) {
                        this.state = 2585;
                        this.match(VisualBasic6Parser.WS);
                    }
                    this.state = 2588;
                    _la = this._input.LA(1);
                    if (!(_la === VisualBasic6Parser.COMMA || _la === VisualBasic6Parser.SEMICOLON)) {
                        this._errHandler.recoverInline(this);
                    }
                    else {
                        this._errHandler.reportMatch(this);
                        this.consume();
                    }
                    this.state = 2590;
                    this._errHandler.sync(this);
                    var la_ = this._interp.adaptivePredict(this._input, 436, this._ctx);
                    if (la_ === 1) {
                        this.state = 2589;
                        this.match(VisualBasic6Parser.WS);
                    }
                }
                this.state = 2596;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input, 437, this._ctx);
            }
            this.state = 2597;
            this.argCall();
            this.state = 2610;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input, 441, this._ctx);
            while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER) {
                if (_alt === 1) {
                    this.state = 2599;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if (_la === VisualBasic6Parser.WS) {
                        this.state = 2598;
                        this.match(VisualBasic6Parser.WS);
                    }
                    this.state = 2601;
                    _la = this._input.LA(1);
                    if (!(_la === VisualBasic6Parser.COMMA || _la === VisualBasic6Parser.SEMICOLON)) {
                        this._errHandler.recoverInline(this);
                    }
                    else {
                        this._errHandler.reportMatch(this);
                        this.consume();
                    }
                    this.state = 2603;
                    this._errHandler.sync(this);
                    var la_ = this._interp.adaptivePredict(this._input, 439, this._ctx);
                    if (la_ === 1) {
                        this.state = 2602;
                        this.match(VisualBasic6Parser.WS);
                    }
                    this.state = 2606;
                    this._errHandler.sync(this);
                    var la_ = this._interp.adaptivePredict(this._input, 440, this._ctx);
                    if (la_ === 1) {
                        this.state = 2605;
                        this.argCall();
                    }
                }
                this.state = 2612;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input, 441, this._ctx);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    argCall() {
        let localctx = new ArgCallContext(this, this._ctx, this.state);
        this.enterRule(localctx, 264, VisualBasic6Parser.RULE_argCall);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2615;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 442, this._ctx);
            if (la_ === 1) {
                this.state = 2613;
                _la = this._input.LA(1);
                if (!(_la === VisualBasic6Parser.BYVAL || _la === VisualBasic6Parser.BYREF || _la === VisualBasic6Parser.PARAMARRAY)) {
                    this._errHandler.recoverInline(this);
                }
                else {
                    this._errHandler.reportMatch(this);
                    this.consume();
                }
                this.state = 2614;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 2617;
            this.valueStmt(0);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    dictionaryCallStmt() {
        let localctx = new DictionaryCallStmtContext(this, this._ctx, this.state);
        this.enterRule(localctx, 266, VisualBasic6Parser.RULE_dictionaryCallStmt);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2619;
            this.match(VisualBasic6Parser.EXCLAMATIONMARK);
            this.state = 2620;
            this.ambiguousIdentifier();
            this.state = 2622;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 443, this._ctx);
            if (la_ === 1) {
                this.state = 2621;
                this.typeHint();
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    argList() {
        let localctx = new ArgListContext(this, this._ctx, this.state);
        this.enterRule(localctx, 268, VisualBasic6Parser.RULE_argList);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2624;
            this.match(VisualBasic6Parser.LPAREN);
            this.state = 2642;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 448, this._ctx);
            if (la_ === 1) {
                this.state = 2626;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === VisualBasic6Parser.WS) {
                    this.state = 2625;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 2628;
                this.arg();
                this.state = 2639;
                this._errHandler.sync(this);
                var _alt = this._interp.adaptivePredict(this._input, 447, this._ctx);
                while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER) {
                    if (_alt === 1) {
                        this.state = 2630;
                        this._errHandler.sync(this);
                        _la = this._input.LA(1);
                        if (_la === VisualBasic6Parser.WS) {
                            this.state = 2629;
                            this.match(VisualBasic6Parser.WS);
                        }
                        this.state = 2632;
                        this.match(VisualBasic6Parser.COMMA);
                        this.state = 2634;
                        this._errHandler.sync(this);
                        _la = this._input.LA(1);
                        if (_la === VisualBasic6Parser.WS) {
                            this.state = 2633;
                            this.match(VisualBasic6Parser.WS);
                        }
                        this.state = 2636;
                        this.arg();
                    }
                    this.state = 2641;
                    this._errHandler.sync(this);
                    _alt = this._interp.adaptivePredict(this._input, 447, this._ctx);
                }
            }
            this.state = 2645;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 2644;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 2647;
            this.match(VisualBasic6Parser.RPAREN);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    arg() {
        let localctx = new ArgContext(this, this._ctx, this.state);
        this.enterRule(localctx, 270, VisualBasic6Parser.RULE_arg);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2651;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 450, this._ctx);
            if (la_ === 1) {
                this.state = 2649;
                this.match(VisualBasic6Parser.OPTIONAL);
                this.state = 2650;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 2655;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 451, this._ctx);
            if (la_ === 1) {
                this.state = 2653;
                _la = this._input.LA(1);
                if (!(_la === VisualBasic6Parser.BYVAL || _la === VisualBasic6Parser.BYREF)) {
                    this._errHandler.recoverInline(this);
                }
                else {
                    this._errHandler.reportMatch(this);
                    this.consume();
                }
                this.state = 2654;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 2659;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 452, this._ctx);
            if (la_ === 1) {
                this.state = 2657;
                this.match(VisualBasic6Parser.PARAMARRAY);
                this.state = 2658;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 2661;
            this.ambiguousIdentifier();
            this.state = 2663;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (((((_la - 178)) & ~0x1f) == 0 && ((1 << (_la - 178)) & ((1 << (VisualBasic6Parser.AMPERSAND - 178)) | (1 << (VisualBasic6Parser.AT - 178)) | (1 << (VisualBasic6Parser.DOLLAR - 178)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 178)) | (1 << (VisualBasic6Parser.HASH - 178)) | (1 << (VisualBasic6Parser.PERCENT - 178)))) !== 0)) {
                this.state = 2662;
                this.typeHint();
            }
            this.state = 2673;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 456, this._ctx);
            if (la_ === 1) {
                this.state = 2666;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === VisualBasic6Parser.WS) {
                    this.state = 2665;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 2668;
                this.match(VisualBasic6Parser.LPAREN);
                this.state = 2670;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === VisualBasic6Parser.WS) {
                    this.state = 2669;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 2672;
                this.match(VisualBasic6Parser.RPAREN);
            }
            this.state = 2677;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 457, this._ctx);
            if (la_ === 1) {
                this.state = 2675;
                this.match(VisualBasic6Parser.WS);
                this.state = 2676;
                this.asTypeClause();
            }
            this.state = 2683;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 459, this._ctx);
            if (la_ === 1) {
                this.state = 2680;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === VisualBasic6Parser.WS) {
                    this.state = 2679;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 2682;
                this.argDefaultValue();
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    argDefaultValue() {
        let localctx = new ArgDefaultValueContext(this, this._ctx, this.state);
        this.enterRule(localctx, 272, VisualBasic6Parser.RULE_argDefaultValue);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2685;
            this.match(VisualBasic6Parser.EQ);
            this.state = 2687;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 460, this._ctx);
            if (la_ === 1) {
                this.state = 2686;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 2689;
            this.valueStmt(0);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    subscripts() {
        let localctx = new SubscriptsContext(this, this._ctx, this.state);
        this.enterRule(localctx, 274, VisualBasic6Parser.RULE_subscripts);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2691;
            this.subscript_();
            this.state = 2702;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input, 463, this._ctx);
            while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER) {
                if (_alt === 1) {
                    this.state = 2693;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if (_la === VisualBasic6Parser.WS) {
                        this.state = 2692;
                        this.match(VisualBasic6Parser.WS);
                    }
                    this.state = 2695;
                    this.match(VisualBasic6Parser.COMMA);
                    this.state = 2697;
                    this._errHandler.sync(this);
                    var la_ = this._interp.adaptivePredict(this._input, 462, this._ctx);
                    if (la_ === 1) {
                        this.state = 2696;
                        this.match(VisualBasic6Parser.WS);
                    }
                    this.state = 2699;
                    this.subscript_();
                }
                this.state = 2704;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input, 463, this._ctx);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    subscript_() {
        let localctx = new Subscript_Context(this, this._ctx, this.state);
        this.enterRule(localctx, 276, VisualBasic6Parser.RULE_subscript_);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2710;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 464, this._ctx);
            if (la_ === 1) {
                this.state = 2705;
                this.valueStmt(0);
                this.state = 2706;
                this.match(VisualBasic6Parser.WS);
                this.state = 2707;
                this.match(VisualBasic6Parser.TO);
                this.state = 2708;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 2712;
            this.valueStmt(0);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    ambiguousIdentifier() {
        let localctx = new AmbiguousIdentifierContext(this, this._ctx, this.state);
        this.enterRule(localctx, 278, VisualBasic6Parser.RULE_ambiguousIdentifier);
        var _la = 0;
        try {
            this.state = 2728;
            this._errHandler.sync(this);
            switch (this._input.LA(1)) {
                case VisualBasic6Parser.ACCESS:
                case VisualBasic6Parser.ADDRESSOF:
                case VisualBasic6Parser.ALIAS:
                case VisualBasic6Parser.AND:
                case VisualBasic6Parser.ATTRIBUTE:
                case VisualBasic6Parser.APPACTIVATE:
                case VisualBasic6Parser.APPEND:
                case VisualBasic6Parser.AS:
                case VisualBasic6Parser.BEEP:
                case VisualBasic6Parser.BEGIN:
                case VisualBasic6Parser.BINARY:
                case VisualBasic6Parser.BOOLEAN:
                case VisualBasic6Parser.BYVAL:
                case VisualBasic6Parser.BYREF:
                case VisualBasic6Parser.BYTE:
                case VisualBasic6Parser.CALL:
                case VisualBasic6Parser.CASE:
                case VisualBasic6Parser.CHDIR:
                case VisualBasic6Parser.CHDRIVE:
                case VisualBasic6Parser.CLASS:
                case VisualBasic6Parser.CLOSE:
                case VisualBasic6Parser.COLLECTION:
                case VisualBasic6Parser.CONST:
                case VisualBasic6Parser.DATE:
                case VisualBasic6Parser.DECLARE:
                case VisualBasic6Parser.DEFBOOL:
                case VisualBasic6Parser.DEFBYTE:
                case VisualBasic6Parser.DEFDATE:
                case VisualBasic6Parser.DEFDBL:
                case VisualBasic6Parser.DEFDEC:
                case VisualBasic6Parser.DEFCUR:
                case VisualBasic6Parser.DEFINT:
                case VisualBasic6Parser.DEFLNG:
                case VisualBasic6Parser.DEFOBJ:
                case VisualBasic6Parser.DEFSNG:
                case VisualBasic6Parser.DEFSTR:
                case VisualBasic6Parser.DEFVAR:
                case VisualBasic6Parser.DELETESETTING:
                case VisualBasic6Parser.DIM:
                case VisualBasic6Parser.DO:
                case VisualBasic6Parser.DOUBLE:
                case VisualBasic6Parser.EACH:
                case VisualBasic6Parser.ELSE:
                case VisualBasic6Parser.ELSEIF:
                case VisualBasic6Parser.END:
                case VisualBasic6Parser.ENUM:
                case VisualBasic6Parser.EQV:
                case VisualBasic6Parser.ERASE:
                case VisualBasic6Parser.ERROR:
                case VisualBasic6Parser.EVENT:
                case VisualBasic6Parser.FALSE:
                case VisualBasic6Parser.FILECOPY:
                case VisualBasic6Parser.FRIEND:
                case VisualBasic6Parser.FOR:
                case VisualBasic6Parser.FUNCTION:
                case VisualBasic6Parser.GET:
                case VisualBasic6Parser.GLOBAL:
                case VisualBasic6Parser.GOSUB:
                case VisualBasic6Parser.GOTO:
                case VisualBasic6Parser.IF:
                case VisualBasic6Parser.IMP:
                case VisualBasic6Parser.IMPLEMENTS:
                case VisualBasic6Parser.IN:
                case VisualBasic6Parser.INPUT:
                case VisualBasic6Parser.IS:
                case VisualBasic6Parser.INTEGER:
                case VisualBasic6Parser.KILL:
                case VisualBasic6Parser.LOAD:
                case VisualBasic6Parser.LOCK:
                case VisualBasic6Parser.LONG:
                case VisualBasic6Parser.LOOP:
                case VisualBasic6Parser.LEN:
                case VisualBasic6Parser.LET:
                case VisualBasic6Parser.LIB:
                case VisualBasic6Parser.LIKE:
                case VisualBasic6Parser.LSET:
                case VisualBasic6Parser.ME:
                case VisualBasic6Parser.MID:
                case VisualBasic6Parser.MKDIR:
                case VisualBasic6Parser.MOD:
                case VisualBasic6Parser.NAME:
                case VisualBasic6Parser.NEXT:
                case VisualBasic6Parser.NEW:
                case VisualBasic6Parser.NOT:
                case VisualBasic6Parser.NOTHING:
                case VisualBasic6Parser.NULL_:
                case VisualBasic6Parser.OBJECT:
                case VisualBasic6Parser.ON:
                case VisualBasic6Parser.OPEN:
                case VisualBasic6Parser.OPTIONAL:
                case VisualBasic6Parser.OR:
                case VisualBasic6Parser.OUTPUT:
                case VisualBasic6Parser.PARAMARRAY:
                case VisualBasic6Parser.PRESERVE:
                case VisualBasic6Parser.PRINT:
                case VisualBasic6Parser.PRIVATE:
                case VisualBasic6Parser.PUBLIC:
                case VisualBasic6Parser.PUT:
                case VisualBasic6Parser.RANDOM:
                case VisualBasic6Parser.RANDOMIZE:
                case VisualBasic6Parser.RAISEEVENT:
                case VisualBasic6Parser.READ:
                case VisualBasic6Parser.REDIM:
                case VisualBasic6Parser.REM:
                case VisualBasic6Parser.RESET:
                case VisualBasic6Parser.RESUME:
                case VisualBasic6Parser.RETURN:
                case VisualBasic6Parser.RMDIR:
                case VisualBasic6Parser.RSET:
                case VisualBasic6Parser.SAVEPICTURE:
                case VisualBasic6Parser.SAVESETTING:
                case VisualBasic6Parser.SEEK:
                case VisualBasic6Parser.SELECT:
                case VisualBasic6Parser.SENDKEYS:
                case VisualBasic6Parser.SET:
                case VisualBasic6Parser.SETATTR:
                case VisualBasic6Parser.SHARED:
                case VisualBasic6Parser.SINGLE:
                case VisualBasic6Parser.SPC:
                case VisualBasic6Parser.STATIC:
                case VisualBasic6Parser.STEP:
                case VisualBasic6Parser.STOP:
                case VisualBasic6Parser.STRING:
                case VisualBasic6Parser.SUB:
                case VisualBasic6Parser.TAB:
                case VisualBasic6Parser.TEXT:
                case VisualBasic6Parser.THEN:
                case VisualBasic6Parser.TIME:
                case VisualBasic6Parser.TO:
                case VisualBasic6Parser.TRUE:
                case VisualBasic6Parser.TYPE:
                case VisualBasic6Parser.TYPEOF:
                case VisualBasic6Parser.UNLOAD:
                case VisualBasic6Parser.UNLOCK:
                case VisualBasic6Parser.UNTIL:
                case VisualBasic6Parser.VARIANT:
                case VisualBasic6Parser.VERSION:
                case VisualBasic6Parser.WEND:
                case VisualBasic6Parser.WHILE:
                case VisualBasic6Parser.WIDTH:
                case VisualBasic6Parser.WITH:
                case VisualBasic6Parser.WITHEVENTS:
                case VisualBasic6Parser.WRITE:
                case VisualBasic6Parser.XOR:
                case VisualBasic6Parser.IDENTIFIER:
                    this.enterOuterAlt(localctx, 1);
                    this.state = 2716;
                    this._errHandler.sync(this);
                    var _alt = 1;
                    do {
                        switch (_alt) {
                            case 1:
                                this.state = 2716;
                                this._errHandler.sync(this);
                                switch (this._input.LA(1)) {
                                    case VisualBasic6Parser.IDENTIFIER:
                                        this.state = 2714;
                                        this.match(VisualBasic6Parser.IDENTIFIER);
                                        break;
                                    case VisualBasic6Parser.ACCESS:
                                    case VisualBasic6Parser.ADDRESSOF:
                                    case VisualBasic6Parser.ALIAS:
                                    case VisualBasic6Parser.AND:
                                    case VisualBasic6Parser.ATTRIBUTE:
                                    case VisualBasic6Parser.APPACTIVATE:
                                    case VisualBasic6Parser.APPEND:
                                    case VisualBasic6Parser.AS:
                                    case VisualBasic6Parser.BEEP:
                                    case VisualBasic6Parser.BEGIN:
                                    case VisualBasic6Parser.BINARY:
                                    case VisualBasic6Parser.BOOLEAN:
                                    case VisualBasic6Parser.BYVAL:
                                    case VisualBasic6Parser.BYREF:
                                    case VisualBasic6Parser.BYTE:
                                    case VisualBasic6Parser.CALL:
                                    case VisualBasic6Parser.CASE:
                                    case VisualBasic6Parser.CHDIR:
                                    case VisualBasic6Parser.CHDRIVE:
                                    case VisualBasic6Parser.CLASS:
                                    case VisualBasic6Parser.CLOSE:
                                    case VisualBasic6Parser.COLLECTION:
                                    case VisualBasic6Parser.CONST:
                                    case VisualBasic6Parser.DATE:
                                    case VisualBasic6Parser.DECLARE:
                                    case VisualBasic6Parser.DEFBOOL:
                                    case VisualBasic6Parser.DEFBYTE:
                                    case VisualBasic6Parser.DEFDATE:
                                    case VisualBasic6Parser.DEFDBL:
                                    case VisualBasic6Parser.DEFDEC:
                                    case VisualBasic6Parser.DEFCUR:
                                    case VisualBasic6Parser.DEFINT:
                                    case VisualBasic6Parser.DEFLNG:
                                    case VisualBasic6Parser.DEFOBJ:
                                    case VisualBasic6Parser.DEFSNG:
                                    case VisualBasic6Parser.DEFSTR:
                                    case VisualBasic6Parser.DEFVAR:
                                    case VisualBasic6Parser.DELETESETTING:
                                    case VisualBasic6Parser.DIM:
                                    case VisualBasic6Parser.DO:
                                    case VisualBasic6Parser.DOUBLE:
                                    case VisualBasic6Parser.EACH:
                                    case VisualBasic6Parser.ELSE:
                                    case VisualBasic6Parser.ELSEIF:
                                    case VisualBasic6Parser.END:
                                    case VisualBasic6Parser.ENUM:
                                    case VisualBasic6Parser.EQV:
                                    case VisualBasic6Parser.ERASE:
                                    case VisualBasic6Parser.ERROR:
                                    case VisualBasic6Parser.EVENT:
                                    case VisualBasic6Parser.FALSE:
                                    case VisualBasic6Parser.FILECOPY:
                                    case VisualBasic6Parser.FRIEND:
                                    case VisualBasic6Parser.FOR:
                                    case VisualBasic6Parser.FUNCTION:
                                    case VisualBasic6Parser.GET:
                                    case VisualBasic6Parser.GLOBAL:
                                    case VisualBasic6Parser.GOSUB:
                                    case VisualBasic6Parser.GOTO:
                                    case VisualBasic6Parser.IF:
                                    case VisualBasic6Parser.IMP:
                                    case VisualBasic6Parser.IMPLEMENTS:
                                    case VisualBasic6Parser.IN:
                                    case VisualBasic6Parser.INPUT:
                                    case VisualBasic6Parser.IS:
                                    case VisualBasic6Parser.INTEGER:
                                    case VisualBasic6Parser.KILL:
                                    case VisualBasic6Parser.LOAD:
                                    case VisualBasic6Parser.LOCK:
                                    case VisualBasic6Parser.LONG:
                                    case VisualBasic6Parser.LOOP:
                                    case VisualBasic6Parser.LEN:
                                    case VisualBasic6Parser.LET:
                                    case VisualBasic6Parser.LIB:
                                    case VisualBasic6Parser.LIKE:
                                    case VisualBasic6Parser.LSET:
                                    case VisualBasic6Parser.ME:
                                    case VisualBasic6Parser.MID:
                                    case VisualBasic6Parser.MKDIR:
                                    case VisualBasic6Parser.MOD:
                                    case VisualBasic6Parser.NAME:
                                    case VisualBasic6Parser.NEXT:
                                    case VisualBasic6Parser.NEW:
                                    case VisualBasic6Parser.NOT:
                                    case VisualBasic6Parser.NOTHING:
                                    case VisualBasic6Parser.NULL_:
                                    case VisualBasic6Parser.OBJECT:
                                    case VisualBasic6Parser.ON:
                                    case VisualBasic6Parser.OPEN:
                                    case VisualBasic6Parser.OPTIONAL:
                                    case VisualBasic6Parser.OR:
                                    case VisualBasic6Parser.OUTPUT:
                                    case VisualBasic6Parser.PARAMARRAY:
                                    case VisualBasic6Parser.PRESERVE:
                                    case VisualBasic6Parser.PRINT:
                                    case VisualBasic6Parser.PRIVATE:
                                    case VisualBasic6Parser.PUBLIC:
                                    case VisualBasic6Parser.PUT:
                                    case VisualBasic6Parser.RANDOM:
                                    case VisualBasic6Parser.RANDOMIZE:
                                    case VisualBasic6Parser.RAISEEVENT:
                                    case VisualBasic6Parser.READ:
                                    case VisualBasic6Parser.REDIM:
                                    case VisualBasic6Parser.REM:
                                    case VisualBasic6Parser.RESET:
                                    case VisualBasic6Parser.RESUME:
                                    case VisualBasic6Parser.RETURN:
                                    case VisualBasic6Parser.RMDIR:
                                    case VisualBasic6Parser.RSET:
                                    case VisualBasic6Parser.SAVEPICTURE:
                                    case VisualBasic6Parser.SAVESETTING:
                                    case VisualBasic6Parser.SEEK:
                                    case VisualBasic6Parser.SELECT:
                                    case VisualBasic6Parser.SENDKEYS:
                                    case VisualBasic6Parser.SET:
                                    case VisualBasic6Parser.SETATTR:
                                    case VisualBasic6Parser.SHARED:
                                    case VisualBasic6Parser.SINGLE:
                                    case VisualBasic6Parser.SPC:
                                    case VisualBasic6Parser.STATIC:
                                    case VisualBasic6Parser.STEP:
                                    case VisualBasic6Parser.STOP:
                                    case VisualBasic6Parser.STRING:
                                    case VisualBasic6Parser.SUB:
                                    case VisualBasic6Parser.TAB:
                                    case VisualBasic6Parser.TEXT:
                                    case VisualBasic6Parser.THEN:
                                    case VisualBasic6Parser.TIME:
                                    case VisualBasic6Parser.TO:
                                    case VisualBasic6Parser.TRUE:
                                    case VisualBasic6Parser.TYPE:
                                    case VisualBasic6Parser.TYPEOF:
                                    case VisualBasic6Parser.UNLOAD:
                                    case VisualBasic6Parser.UNLOCK:
                                    case VisualBasic6Parser.UNTIL:
                                    case VisualBasic6Parser.VARIANT:
                                    case VisualBasic6Parser.VERSION:
                                    case VisualBasic6Parser.WEND:
                                    case VisualBasic6Parser.WHILE:
                                    case VisualBasic6Parser.WIDTH:
                                    case VisualBasic6Parser.WITH:
                                    case VisualBasic6Parser.WITHEVENTS:
                                    case VisualBasic6Parser.WRITE:
                                    case VisualBasic6Parser.XOR:
                                        this.state = 2715;
                                        this.ambiguousKeyword();
                                        break;
                                    default:
                                        throw new antlr4_1.default.error.NoViableAltException(this);
                                }
                                break;
                            default:
                                throw new antlr4_1.default.error.NoViableAltException(this);
                        }
                        this.state = 2718;
                        this._errHandler.sync(this);
                        _alt = this._interp.adaptivePredict(this._input, 466, this._ctx);
                    } while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER);
                    break;
                case VisualBasic6Parser.L_SQUARE_BRACKET:
                    this.enterOuterAlt(localctx, 2);
                    this.state = 2720;
                    this.match(VisualBasic6Parser.L_SQUARE_BRACKET);
                    this.state = 2723;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    do {
                        this.state = 2723;
                        this._errHandler.sync(this);
                        switch (this._input.LA(1)) {
                            case VisualBasic6Parser.IDENTIFIER:
                                this.state = 2721;
                                this.match(VisualBasic6Parser.IDENTIFIER);
                                break;
                            case VisualBasic6Parser.ACCESS:
                            case VisualBasic6Parser.ADDRESSOF:
                            case VisualBasic6Parser.ALIAS:
                            case VisualBasic6Parser.AND:
                            case VisualBasic6Parser.ATTRIBUTE:
                            case VisualBasic6Parser.APPACTIVATE:
                            case VisualBasic6Parser.APPEND:
                            case VisualBasic6Parser.AS:
                            case VisualBasic6Parser.BEEP:
                            case VisualBasic6Parser.BEGIN:
                            case VisualBasic6Parser.BINARY:
                            case VisualBasic6Parser.BOOLEAN:
                            case VisualBasic6Parser.BYVAL:
                            case VisualBasic6Parser.BYREF:
                            case VisualBasic6Parser.BYTE:
                            case VisualBasic6Parser.CALL:
                            case VisualBasic6Parser.CASE:
                            case VisualBasic6Parser.CHDIR:
                            case VisualBasic6Parser.CHDRIVE:
                            case VisualBasic6Parser.CLASS:
                            case VisualBasic6Parser.CLOSE:
                            case VisualBasic6Parser.COLLECTION:
                            case VisualBasic6Parser.CONST:
                            case VisualBasic6Parser.DATE:
                            case VisualBasic6Parser.DECLARE:
                            case VisualBasic6Parser.DEFBOOL:
                            case VisualBasic6Parser.DEFBYTE:
                            case VisualBasic6Parser.DEFDATE:
                            case VisualBasic6Parser.DEFDBL:
                            case VisualBasic6Parser.DEFDEC:
                            case VisualBasic6Parser.DEFCUR:
                            case VisualBasic6Parser.DEFINT:
                            case VisualBasic6Parser.DEFLNG:
                            case VisualBasic6Parser.DEFOBJ:
                            case VisualBasic6Parser.DEFSNG:
                            case VisualBasic6Parser.DEFSTR:
                            case VisualBasic6Parser.DEFVAR:
                            case VisualBasic6Parser.DELETESETTING:
                            case VisualBasic6Parser.DIM:
                            case VisualBasic6Parser.DO:
                            case VisualBasic6Parser.DOUBLE:
                            case VisualBasic6Parser.EACH:
                            case VisualBasic6Parser.ELSE:
                            case VisualBasic6Parser.ELSEIF:
                            case VisualBasic6Parser.END:
                            case VisualBasic6Parser.ENUM:
                            case VisualBasic6Parser.EQV:
                            case VisualBasic6Parser.ERASE:
                            case VisualBasic6Parser.ERROR:
                            case VisualBasic6Parser.EVENT:
                            case VisualBasic6Parser.FALSE:
                            case VisualBasic6Parser.FILECOPY:
                            case VisualBasic6Parser.FRIEND:
                            case VisualBasic6Parser.FOR:
                            case VisualBasic6Parser.FUNCTION:
                            case VisualBasic6Parser.GET:
                            case VisualBasic6Parser.GLOBAL:
                            case VisualBasic6Parser.GOSUB:
                            case VisualBasic6Parser.GOTO:
                            case VisualBasic6Parser.IF:
                            case VisualBasic6Parser.IMP:
                            case VisualBasic6Parser.IMPLEMENTS:
                            case VisualBasic6Parser.IN:
                            case VisualBasic6Parser.INPUT:
                            case VisualBasic6Parser.IS:
                            case VisualBasic6Parser.INTEGER:
                            case VisualBasic6Parser.KILL:
                            case VisualBasic6Parser.LOAD:
                            case VisualBasic6Parser.LOCK:
                            case VisualBasic6Parser.LONG:
                            case VisualBasic6Parser.LOOP:
                            case VisualBasic6Parser.LEN:
                            case VisualBasic6Parser.LET:
                            case VisualBasic6Parser.LIB:
                            case VisualBasic6Parser.LIKE:
                            case VisualBasic6Parser.LSET:
                            case VisualBasic6Parser.ME:
                            case VisualBasic6Parser.MID:
                            case VisualBasic6Parser.MKDIR:
                            case VisualBasic6Parser.MOD:
                            case VisualBasic6Parser.NAME:
                            case VisualBasic6Parser.NEXT:
                            case VisualBasic6Parser.NEW:
                            case VisualBasic6Parser.NOT:
                            case VisualBasic6Parser.NOTHING:
                            case VisualBasic6Parser.NULL_:
                            case VisualBasic6Parser.OBJECT:
                            case VisualBasic6Parser.ON:
                            case VisualBasic6Parser.OPEN:
                            case VisualBasic6Parser.OPTIONAL:
                            case VisualBasic6Parser.OR:
                            case VisualBasic6Parser.OUTPUT:
                            case VisualBasic6Parser.PARAMARRAY:
                            case VisualBasic6Parser.PRESERVE:
                            case VisualBasic6Parser.PRINT:
                            case VisualBasic6Parser.PRIVATE:
                            case VisualBasic6Parser.PUBLIC:
                            case VisualBasic6Parser.PUT:
                            case VisualBasic6Parser.RANDOM:
                            case VisualBasic6Parser.RANDOMIZE:
                            case VisualBasic6Parser.RAISEEVENT:
                            case VisualBasic6Parser.READ:
                            case VisualBasic6Parser.REDIM:
                            case VisualBasic6Parser.REM:
                            case VisualBasic6Parser.RESET:
                            case VisualBasic6Parser.RESUME:
                            case VisualBasic6Parser.RETURN:
                            case VisualBasic6Parser.RMDIR:
                            case VisualBasic6Parser.RSET:
                            case VisualBasic6Parser.SAVEPICTURE:
                            case VisualBasic6Parser.SAVESETTING:
                            case VisualBasic6Parser.SEEK:
                            case VisualBasic6Parser.SELECT:
                            case VisualBasic6Parser.SENDKEYS:
                            case VisualBasic6Parser.SET:
                            case VisualBasic6Parser.SETATTR:
                            case VisualBasic6Parser.SHARED:
                            case VisualBasic6Parser.SINGLE:
                            case VisualBasic6Parser.SPC:
                            case VisualBasic6Parser.STATIC:
                            case VisualBasic6Parser.STEP:
                            case VisualBasic6Parser.STOP:
                            case VisualBasic6Parser.STRING:
                            case VisualBasic6Parser.SUB:
                            case VisualBasic6Parser.TAB:
                            case VisualBasic6Parser.TEXT:
                            case VisualBasic6Parser.THEN:
                            case VisualBasic6Parser.TIME:
                            case VisualBasic6Parser.TO:
                            case VisualBasic6Parser.TRUE:
                            case VisualBasic6Parser.TYPE:
                            case VisualBasic6Parser.TYPEOF:
                            case VisualBasic6Parser.UNLOAD:
                            case VisualBasic6Parser.UNLOCK:
                            case VisualBasic6Parser.UNTIL:
                            case VisualBasic6Parser.VARIANT:
                            case VisualBasic6Parser.VERSION:
                            case VisualBasic6Parser.WEND:
                            case VisualBasic6Parser.WHILE:
                            case VisualBasic6Parser.WIDTH:
                            case VisualBasic6Parser.WITH:
                            case VisualBasic6Parser.WITHEVENTS:
                            case VisualBasic6Parser.WRITE:
                            case VisualBasic6Parser.XOR:
                                this.state = 2722;
                                this.ambiguousKeyword();
                                break;
                            default:
                                throw new antlr4_1.default.error.NoViableAltException(this);
                        }
                        this.state = 2725;
                        this._errHandler.sync(this);
                        _la = this._input.LA(1);
                    } while ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFCUR - 32)) | (1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)))) !== 0) || ((((_la - 66)) & ~0x1f) == 0 && ((1 << (_la - 66)) & ((1 << (VisualBasic6Parser.FALSE - 66)) | (1 << (VisualBasic6Parser.FILECOPY - 66)) | (1 << (VisualBasic6Parser.FRIEND - 66)) | (1 << (VisualBasic6Parser.FOR - 66)) | (1 << (VisualBasic6Parser.FUNCTION - 66)) | (1 << (VisualBasic6Parser.GET - 66)) | (1 << (VisualBasic6Parser.GLOBAL - 66)) | (1 << (VisualBasic6Parser.GOSUB - 66)) | (1 << (VisualBasic6Parser.GOTO - 66)) | (1 << (VisualBasic6Parser.IF - 66)) | (1 << (VisualBasic6Parser.IMP - 66)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 66)) | (1 << (VisualBasic6Parser.IN - 66)) | (1 << (VisualBasic6Parser.INPUT - 66)) | (1 << (VisualBasic6Parser.IS - 66)) | (1 << (VisualBasic6Parser.INTEGER - 66)) | (1 << (VisualBasic6Parser.KILL - 66)) | (1 << (VisualBasic6Parser.LOAD - 66)) | (1 << (VisualBasic6Parser.LOCK - 66)) | (1 << (VisualBasic6Parser.LONG - 66)) | (1 << (VisualBasic6Parser.LOOP - 66)) | (1 << (VisualBasic6Parser.LEN - 66)) | (1 << (VisualBasic6Parser.LET - 66)) | (1 << (VisualBasic6Parser.LIB - 66)) | (1 << (VisualBasic6Parser.LIKE - 66)) | (1 << (VisualBasic6Parser.LSET - 66)))) !== 0) || ((((_la - 100)) & ~0x1f) == 0 && ((1 << (_la - 100)) & ((1 << (VisualBasic6Parser.ME - 100)) | (1 << (VisualBasic6Parser.MID - 100)) | (1 << (VisualBasic6Parser.MKDIR - 100)) | (1 << (VisualBasic6Parser.MOD - 100)) | (1 << (VisualBasic6Parser.NAME - 100)) | (1 << (VisualBasic6Parser.NEXT - 100)) | (1 << (VisualBasic6Parser.NEW - 100)) | (1 << (VisualBasic6Parser.NOT - 100)) | (1 << (VisualBasic6Parser.NOTHING - 100)) | (1 << (VisualBasic6Parser.NULL_ - 100)) | (1 << (VisualBasic6Parser.OBJECT - 100)) | (1 << (VisualBasic6Parser.ON - 100)) | (1 << (VisualBasic6Parser.OPEN - 100)) | (1 << (VisualBasic6Parser.OPTIONAL - 100)) | (1 << (VisualBasic6Parser.OR - 100)) | (1 << (VisualBasic6Parser.OUTPUT - 100)) | (1 << (VisualBasic6Parser.PARAMARRAY - 100)) | (1 << (VisualBasic6Parser.PRESERVE - 100)) | (1 << (VisualBasic6Parser.PRINT - 100)) | (1 << (VisualBasic6Parser.PRIVATE - 100)) | (1 << (VisualBasic6Parser.PUBLIC - 100)) | (1 << (VisualBasic6Parser.PUT - 100)) | (1 << (VisualBasic6Parser.RANDOM - 100)))) !== 0) || ((((_la - 132)) & ~0x1f) == 0 && ((1 << (_la - 132)) & ((1 << (VisualBasic6Parser.RANDOMIZE - 132)) | (1 << (VisualBasic6Parser.RAISEEVENT - 132)) | (1 << (VisualBasic6Parser.READ - 132)) | (1 << (VisualBasic6Parser.REDIM - 132)) | (1 << (VisualBasic6Parser.REM - 132)) | (1 << (VisualBasic6Parser.RESET - 132)) | (1 << (VisualBasic6Parser.RESUME - 132)) | (1 << (VisualBasic6Parser.RETURN - 132)) | (1 << (VisualBasic6Parser.RMDIR - 132)) | (1 << (VisualBasic6Parser.RSET - 132)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 132)) | (1 << (VisualBasic6Parser.SAVESETTING - 132)) | (1 << (VisualBasic6Parser.SEEK - 132)) | (1 << (VisualBasic6Parser.SELECT - 132)) | (1 << (VisualBasic6Parser.SENDKEYS - 132)) | (1 << (VisualBasic6Parser.SET - 132)) | (1 << (VisualBasic6Parser.SETATTR - 132)) | (1 << (VisualBasic6Parser.SHARED - 132)) | (1 << (VisualBasic6Parser.SINGLE - 132)) | (1 << (VisualBasic6Parser.SPC - 132)) | (1 << (VisualBasic6Parser.STATIC - 132)) | (1 << (VisualBasic6Parser.STEP - 132)) | (1 << (VisualBasic6Parser.STOP - 132)) | (1 << (VisualBasic6Parser.STRING - 132)) | (1 << (VisualBasic6Parser.SUB - 132)) | (1 << (VisualBasic6Parser.TAB - 132)) | (1 << (VisualBasic6Parser.TEXT - 132)) | (1 << (VisualBasic6Parser.THEN - 132)) | (1 << (VisualBasic6Parser.TIME - 132)) | (1 << (VisualBasic6Parser.TO - 132)) | (1 << (VisualBasic6Parser.TRUE - 132)))) !== 0) || ((((_la - 164)) & ~0x1f) == 0 && ((1 << (_la - 164)) & ((1 << (VisualBasic6Parser.TYPE - 164)) | (1 << (VisualBasic6Parser.TYPEOF - 164)) | (1 << (VisualBasic6Parser.UNLOAD - 164)) | (1 << (VisualBasic6Parser.UNLOCK - 164)) | (1 << (VisualBasic6Parser.UNTIL - 164)) | (1 << (VisualBasic6Parser.VARIANT - 164)) | (1 << (VisualBasic6Parser.VERSION - 164)) | (1 << (VisualBasic6Parser.WEND - 164)) | (1 << (VisualBasic6Parser.WHILE - 164)) | (1 << (VisualBasic6Parser.WIDTH - 164)) | (1 << (VisualBasic6Parser.WITH - 164)) | (1 << (VisualBasic6Parser.WITHEVENTS - 164)) | (1 << (VisualBasic6Parser.WRITE - 164)) | (1 << (VisualBasic6Parser.XOR - 164)))) !== 0) || _la === VisualBasic6Parser.IDENTIFIER);
                    this.state = 2727;
                    this.match(VisualBasic6Parser.R_SQUARE_BRACKET);
                    break;
                default:
                    throw new antlr4_1.default.error.NoViableAltException(this);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    asTypeClause() {
        let localctx = new AsTypeClauseContext(this, this._ctx, this.state);
        this.enterRule(localctx, 280, VisualBasic6Parser.RULE_asTypeClause);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2730;
            this.match(VisualBasic6Parser.AS);
            this.state = 2731;
            this.match(VisualBasic6Parser.WS);
            this.state = 2734;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 470, this._ctx);
            if (la_ === 1) {
                this.state = 2732;
                this.match(VisualBasic6Parser.NEW);
                this.state = 2733;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 2736;
            this.type_();
            this.state = 2739;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 471, this._ctx);
            if (la_ === 1) {
                this.state = 2737;
                this.match(VisualBasic6Parser.WS);
                this.state = 2738;
                this.fieldLength();
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    baseType() {
        let localctx = new BaseTypeContext(this, this._ctx, this.state);
        this.enterRule(localctx, 282, VisualBasic6Parser.RULE_baseType);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2741;
            _la = this._input.LA(1);
            if (!(((((_la - 13)) & ~0x1f) == 0 && ((1 << (_la - 13)) & ((1 << (VisualBasic6Parser.BOOLEAN - 13)) | (1 << (VisualBasic6Parser.BYTE - 13)) | (1 << (VisualBasic6Parser.COLLECTION - 13)) | (1 << (VisualBasic6Parser.DATE - 13)) | (1 << (VisualBasic6Parser.DOUBLE - 13)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (VisualBasic6Parser.INTEGER - 81)) | (1 << (VisualBasic6Parser.LONG - 81)) | (1 << (VisualBasic6Parser.OBJECT - 81)))) !== 0) || ((((_la - 151)) & ~0x1f) == 0 && ((1 << (_la - 151)) & ((1 << (VisualBasic6Parser.SINGLE - 151)) | (1 << (VisualBasic6Parser.STRING - 151)) | (1 << (VisualBasic6Parser.VARIANT - 151)))) !== 0))) {
                this._errHandler.recoverInline(this);
            }
            else {
                this._errHandler.reportMatch(this);
                this.consume();
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    certainIdentifier() {
        let localctx = new CertainIdentifierContext(this, this._ctx, this.state);
        this.enterRule(localctx, 284, VisualBasic6Parser.RULE_certainIdentifier);
        try {
            this.state = 2758;
            this._errHandler.sync(this);
            switch (this._input.LA(1)) {
                case VisualBasic6Parser.IDENTIFIER:
                    this.enterOuterAlt(localctx, 1);
                    this.state = 2743;
                    this.match(VisualBasic6Parser.IDENTIFIER);
                    this.state = 2748;
                    this._errHandler.sync(this);
                    var _alt = this._interp.adaptivePredict(this._input, 473, this._ctx);
                    while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER) {
                        if (_alt === 1) {
                            this.state = 2746;
                            this._errHandler.sync(this);
                            switch (this._input.LA(1)) {
                                case VisualBasic6Parser.ACCESS:
                                case VisualBasic6Parser.ADDRESSOF:
                                case VisualBasic6Parser.ALIAS:
                                case VisualBasic6Parser.AND:
                                case VisualBasic6Parser.ATTRIBUTE:
                                case VisualBasic6Parser.APPACTIVATE:
                                case VisualBasic6Parser.APPEND:
                                case VisualBasic6Parser.AS:
                                case VisualBasic6Parser.BEEP:
                                case VisualBasic6Parser.BEGIN:
                                case VisualBasic6Parser.BINARY:
                                case VisualBasic6Parser.BOOLEAN:
                                case VisualBasic6Parser.BYVAL:
                                case VisualBasic6Parser.BYREF:
                                case VisualBasic6Parser.BYTE:
                                case VisualBasic6Parser.CALL:
                                case VisualBasic6Parser.CASE:
                                case VisualBasic6Parser.CHDIR:
                                case VisualBasic6Parser.CHDRIVE:
                                case VisualBasic6Parser.CLASS:
                                case VisualBasic6Parser.CLOSE:
                                case VisualBasic6Parser.COLLECTION:
                                case VisualBasic6Parser.CONST:
                                case VisualBasic6Parser.DATE:
                                case VisualBasic6Parser.DECLARE:
                                case VisualBasic6Parser.DEFBOOL:
                                case VisualBasic6Parser.DEFBYTE:
                                case VisualBasic6Parser.DEFDATE:
                                case VisualBasic6Parser.DEFDBL:
                                case VisualBasic6Parser.DEFDEC:
                                case VisualBasic6Parser.DEFCUR:
                                case VisualBasic6Parser.DEFINT:
                                case VisualBasic6Parser.DEFLNG:
                                case VisualBasic6Parser.DEFOBJ:
                                case VisualBasic6Parser.DEFSNG:
                                case VisualBasic6Parser.DEFSTR:
                                case VisualBasic6Parser.DEFVAR:
                                case VisualBasic6Parser.DELETESETTING:
                                case VisualBasic6Parser.DIM:
                                case VisualBasic6Parser.DO:
                                case VisualBasic6Parser.DOUBLE:
                                case VisualBasic6Parser.EACH:
                                case VisualBasic6Parser.ELSE:
                                case VisualBasic6Parser.ELSEIF:
                                case VisualBasic6Parser.END:
                                case VisualBasic6Parser.ENUM:
                                case VisualBasic6Parser.EQV:
                                case VisualBasic6Parser.ERASE:
                                case VisualBasic6Parser.ERROR:
                                case VisualBasic6Parser.EVENT:
                                case VisualBasic6Parser.FALSE:
                                case VisualBasic6Parser.FILECOPY:
                                case VisualBasic6Parser.FRIEND:
                                case VisualBasic6Parser.FOR:
                                case VisualBasic6Parser.FUNCTION:
                                case VisualBasic6Parser.GET:
                                case VisualBasic6Parser.GLOBAL:
                                case VisualBasic6Parser.GOSUB:
                                case VisualBasic6Parser.GOTO:
                                case VisualBasic6Parser.IF:
                                case VisualBasic6Parser.IMP:
                                case VisualBasic6Parser.IMPLEMENTS:
                                case VisualBasic6Parser.IN:
                                case VisualBasic6Parser.INPUT:
                                case VisualBasic6Parser.IS:
                                case VisualBasic6Parser.INTEGER:
                                case VisualBasic6Parser.KILL:
                                case VisualBasic6Parser.LOAD:
                                case VisualBasic6Parser.LOCK:
                                case VisualBasic6Parser.LONG:
                                case VisualBasic6Parser.LOOP:
                                case VisualBasic6Parser.LEN:
                                case VisualBasic6Parser.LET:
                                case VisualBasic6Parser.LIB:
                                case VisualBasic6Parser.LIKE:
                                case VisualBasic6Parser.LSET:
                                case VisualBasic6Parser.ME:
                                case VisualBasic6Parser.MID:
                                case VisualBasic6Parser.MKDIR:
                                case VisualBasic6Parser.MOD:
                                case VisualBasic6Parser.NAME:
                                case VisualBasic6Parser.NEXT:
                                case VisualBasic6Parser.NEW:
                                case VisualBasic6Parser.NOT:
                                case VisualBasic6Parser.NOTHING:
                                case VisualBasic6Parser.NULL_:
                                case VisualBasic6Parser.OBJECT:
                                case VisualBasic6Parser.ON:
                                case VisualBasic6Parser.OPEN:
                                case VisualBasic6Parser.OPTIONAL:
                                case VisualBasic6Parser.OR:
                                case VisualBasic6Parser.OUTPUT:
                                case VisualBasic6Parser.PARAMARRAY:
                                case VisualBasic6Parser.PRESERVE:
                                case VisualBasic6Parser.PRINT:
                                case VisualBasic6Parser.PRIVATE:
                                case VisualBasic6Parser.PUBLIC:
                                case VisualBasic6Parser.PUT:
                                case VisualBasic6Parser.RANDOM:
                                case VisualBasic6Parser.RANDOMIZE:
                                case VisualBasic6Parser.RAISEEVENT:
                                case VisualBasic6Parser.READ:
                                case VisualBasic6Parser.REDIM:
                                case VisualBasic6Parser.REM:
                                case VisualBasic6Parser.RESET:
                                case VisualBasic6Parser.RESUME:
                                case VisualBasic6Parser.RETURN:
                                case VisualBasic6Parser.RMDIR:
                                case VisualBasic6Parser.RSET:
                                case VisualBasic6Parser.SAVEPICTURE:
                                case VisualBasic6Parser.SAVESETTING:
                                case VisualBasic6Parser.SEEK:
                                case VisualBasic6Parser.SELECT:
                                case VisualBasic6Parser.SENDKEYS:
                                case VisualBasic6Parser.SET:
                                case VisualBasic6Parser.SETATTR:
                                case VisualBasic6Parser.SHARED:
                                case VisualBasic6Parser.SINGLE:
                                case VisualBasic6Parser.SPC:
                                case VisualBasic6Parser.STATIC:
                                case VisualBasic6Parser.STEP:
                                case VisualBasic6Parser.STOP:
                                case VisualBasic6Parser.STRING:
                                case VisualBasic6Parser.SUB:
                                case VisualBasic6Parser.TAB:
                                case VisualBasic6Parser.TEXT:
                                case VisualBasic6Parser.THEN:
                                case VisualBasic6Parser.TIME:
                                case VisualBasic6Parser.TO:
                                case VisualBasic6Parser.TRUE:
                                case VisualBasic6Parser.TYPE:
                                case VisualBasic6Parser.TYPEOF:
                                case VisualBasic6Parser.UNLOAD:
                                case VisualBasic6Parser.UNLOCK:
                                case VisualBasic6Parser.UNTIL:
                                case VisualBasic6Parser.VARIANT:
                                case VisualBasic6Parser.VERSION:
                                case VisualBasic6Parser.WEND:
                                case VisualBasic6Parser.WHILE:
                                case VisualBasic6Parser.WIDTH:
                                case VisualBasic6Parser.WITH:
                                case VisualBasic6Parser.WITHEVENTS:
                                case VisualBasic6Parser.WRITE:
                                case VisualBasic6Parser.XOR:
                                    this.state = 2744;
                                    this.ambiguousKeyword();
                                    break;
                                case VisualBasic6Parser.IDENTIFIER:
                                    this.state = 2745;
                                    this.match(VisualBasic6Parser.IDENTIFIER);
                                    break;
                                default:
                                    throw new antlr4_1.default.error.NoViableAltException(this);
                            }
                        }
                        this.state = 2750;
                        this._errHandler.sync(this);
                        _alt = this._interp.adaptivePredict(this._input, 473, this._ctx);
                    }
                    break;
                case VisualBasic6Parser.ACCESS:
                case VisualBasic6Parser.ADDRESSOF:
                case VisualBasic6Parser.ALIAS:
                case VisualBasic6Parser.AND:
                case VisualBasic6Parser.ATTRIBUTE:
                case VisualBasic6Parser.APPACTIVATE:
                case VisualBasic6Parser.APPEND:
                case VisualBasic6Parser.AS:
                case VisualBasic6Parser.BEEP:
                case VisualBasic6Parser.BEGIN:
                case VisualBasic6Parser.BINARY:
                case VisualBasic6Parser.BOOLEAN:
                case VisualBasic6Parser.BYVAL:
                case VisualBasic6Parser.BYREF:
                case VisualBasic6Parser.BYTE:
                case VisualBasic6Parser.CALL:
                case VisualBasic6Parser.CASE:
                case VisualBasic6Parser.CHDIR:
                case VisualBasic6Parser.CHDRIVE:
                case VisualBasic6Parser.CLASS:
                case VisualBasic6Parser.CLOSE:
                case VisualBasic6Parser.COLLECTION:
                case VisualBasic6Parser.CONST:
                case VisualBasic6Parser.DATE:
                case VisualBasic6Parser.DECLARE:
                case VisualBasic6Parser.DEFBOOL:
                case VisualBasic6Parser.DEFBYTE:
                case VisualBasic6Parser.DEFDATE:
                case VisualBasic6Parser.DEFDBL:
                case VisualBasic6Parser.DEFDEC:
                case VisualBasic6Parser.DEFCUR:
                case VisualBasic6Parser.DEFINT:
                case VisualBasic6Parser.DEFLNG:
                case VisualBasic6Parser.DEFOBJ:
                case VisualBasic6Parser.DEFSNG:
                case VisualBasic6Parser.DEFSTR:
                case VisualBasic6Parser.DEFVAR:
                case VisualBasic6Parser.DELETESETTING:
                case VisualBasic6Parser.DIM:
                case VisualBasic6Parser.DO:
                case VisualBasic6Parser.DOUBLE:
                case VisualBasic6Parser.EACH:
                case VisualBasic6Parser.ELSE:
                case VisualBasic6Parser.ELSEIF:
                case VisualBasic6Parser.END:
                case VisualBasic6Parser.ENUM:
                case VisualBasic6Parser.EQV:
                case VisualBasic6Parser.ERASE:
                case VisualBasic6Parser.ERROR:
                case VisualBasic6Parser.EVENT:
                case VisualBasic6Parser.FALSE:
                case VisualBasic6Parser.FILECOPY:
                case VisualBasic6Parser.FRIEND:
                case VisualBasic6Parser.FOR:
                case VisualBasic6Parser.FUNCTION:
                case VisualBasic6Parser.GET:
                case VisualBasic6Parser.GLOBAL:
                case VisualBasic6Parser.GOSUB:
                case VisualBasic6Parser.GOTO:
                case VisualBasic6Parser.IF:
                case VisualBasic6Parser.IMP:
                case VisualBasic6Parser.IMPLEMENTS:
                case VisualBasic6Parser.IN:
                case VisualBasic6Parser.INPUT:
                case VisualBasic6Parser.IS:
                case VisualBasic6Parser.INTEGER:
                case VisualBasic6Parser.KILL:
                case VisualBasic6Parser.LOAD:
                case VisualBasic6Parser.LOCK:
                case VisualBasic6Parser.LONG:
                case VisualBasic6Parser.LOOP:
                case VisualBasic6Parser.LEN:
                case VisualBasic6Parser.LET:
                case VisualBasic6Parser.LIB:
                case VisualBasic6Parser.LIKE:
                case VisualBasic6Parser.LSET:
                case VisualBasic6Parser.ME:
                case VisualBasic6Parser.MID:
                case VisualBasic6Parser.MKDIR:
                case VisualBasic6Parser.MOD:
                case VisualBasic6Parser.NAME:
                case VisualBasic6Parser.NEXT:
                case VisualBasic6Parser.NEW:
                case VisualBasic6Parser.NOT:
                case VisualBasic6Parser.NOTHING:
                case VisualBasic6Parser.NULL_:
                case VisualBasic6Parser.OBJECT:
                case VisualBasic6Parser.ON:
                case VisualBasic6Parser.OPEN:
                case VisualBasic6Parser.OPTIONAL:
                case VisualBasic6Parser.OR:
                case VisualBasic6Parser.OUTPUT:
                case VisualBasic6Parser.PARAMARRAY:
                case VisualBasic6Parser.PRESERVE:
                case VisualBasic6Parser.PRINT:
                case VisualBasic6Parser.PRIVATE:
                case VisualBasic6Parser.PUBLIC:
                case VisualBasic6Parser.PUT:
                case VisualBasic6Parser.RANDOM:
                case VisualBasic6Parser.RANDOMIZE:
                case VisualBasic6Parser.RAISEEVENT:
                case VisualBasic6Parser.READ:
                case VisualBasic6Parser.REDIM:
                case VisualBasic6Parser.REM:
                case VisualBasic6Parser.RESET:
                case VisualBasic6Parser.RESUME:
                case VisualBasic6Parser.RETURN:
                case VisualBasic6Parser.RMDIR:
                case VisualBasic6Parser.RSET:
                case VisualBasic6Parser.SAVEPICTURE:
                case VisualBasic6Parser.SAVESETTING:
                case VisualBasic6Parser.SEEK:
                case VisualBasic6Parser.SELECT:
                case VisualBasic6Parser.SENDKEYS:
                case VisualBasic6Parser.SET:
                case VisualBasic6Parser.SETATTR:
                case VisualBasic6Parser.SHARED:
                case VisualBasic6Parser.SINGLE:
                case VisualBasic6Parser.SPC:
                case VisualBasic6Parser.STATIC:
                case VisualBasic6Parser.STEP:
                case VisualBasic6Parser.STOP:
                case VisualBasic6Parser.STRING:
                case VisualBasic6Parser.SUB:
                case VisualBasic6Parser.TAB:
                case VisualBasic6Parser.TEXT:
                case VisualBasic6Parser.THEN:
                case VisualBasic6Parser.TIME:
                case VisualBasic6Parser.TO:
                case VisualBasic6Parser.TRUE:
                case VisualBasic6Parser.TYPE:
                case VisualBasic6Parser.TYPEOF:
                case VisualBasic6Parser.UNLOAD:
                case VisualBasic6Parser.UNLOCK:
                case VisualBasic6Parser.UNTIL:
                case VisualBasic6Parser.VARIANT:
                case VisualBasic6Parser.VERSION:
                case VisualBasic6Parser.WEND:
                case VisualBasic6Parser.WHILE:
                case VisualBasic6Parser.WIDTH:
                case VisualBasic6Parser.WITH:
                case VisualBasic6Parser.WITHEVENTS:
                case VisualBasic6Parser.WRITE:
                case VisualBasic6Parser.XOR:
                    this.enterOuterAlt(localctx, 2);
                    this.state = 2751;
                    this.ambiguousKeyword();
                    this.state = 2754;
                    this._errHandler.sync(this);
                    var _alt = 1;
                    do {
                        switch (_alt) {
                            case 1:
                                this.state = 2754;
                                this._errHandler.sync(this);
                                switch (this._input.LA(1)) {
                                    case VisualBasic6Parser.ACCESS:
                                    case VisualBasic6Parser.ADDRESSOF:
                                    case VisualBasic6Parser.ALIAS:
                                    case VisualBasic6Parser.AND:
                                    case VisualBasic6Parser.ATTRIBUTE:
                                    case VisualBasic6Parser.APPACTIVATE:
                                    case VisualBasic6Parser.APPEND:
                                    case VisualBasic6Parser.AS:
                                    case VisualBasic6Parser.BEEP:
                                    case VisualBasic6Parser.BEGIN:
                                    case VisualBasic6Parser.BINARY:
                                    case VisualBasic6Parser.BOOLEAN:
                                    case VisualBasic6Parser.BYVAL:
                                    case VisualBasic6Parser.BYREF:
                                    case VisualBasic6Parser.BYTE:
                                    case VisualBasic6Parser.CALL:
                                    case VisualBasic6Parser.CASE:
                                    case VisualBasic6Parser.CHDIR:
                                    case VisualBasic6Parser.CHDRIVE:
                                    case VisualBasic6Parser.CLASS:
                                    case VisualBasic6Parser.CLOSE:
                                    case VisualBasic6Parser.COLLECTION:
                                    case VisualBasic6Parser.CONST:
                                    case VisualBasic6Parser.DATE:
                                    case VisualBasic6Parser.DECLARE:
                                    case VisualBasic6Parser.DEFBOOL:
                                    case VisualBasic6Parser.DEFBYTE:
                                    case VisualBasic6Parser.DEFDATE:
                                    case VisualBasic6Parser.DEFDBL:
                                    case VisualBasic6Parser.DEFDEC:
                                    case VisualBasic6Parser.DEFCUR:
                                    case VisualBasic6Parser.DEFINT:
                                    case VisualBasic6Parser.DEFLNG:
                                    case VisualBasic6Parser.DEFOBJ:
                                    case VisualBasic6Parser.DEFSNG:
                                    case VisualBasic6Parser.DEFSTR:
                                    case VisualBasic6Parser.DEFVAR:
                                    case VisualBasic6Parser.DELETESETTING:
                                    case VisualBasic6Parser.DIM:
                                    case VisualBasic6Parser.DO:
                                    case VisualBasic6Parser.DOUBLE:
                                    case VisualBasic6Parser.EACH:
                                    case VisualBasic6Parser.ELSE:
                                    case VisualBasic6Parser.ELSEIF:
                                    case VisualBasic6Parser.END:
                                    case VisualBasic6Parser.ENUM:
                                    case VisualBasic6Parser.EQV:
                                    case VisualBasic6Parser.ERASE:
                                    case VisualBasic6Parser.ERROR:
                                    case VisualBasic6Parser.EVENT:
                                    case VisualBasic6Parser.FALSE:
                                    case VisualBasic6Parser.FILECOPY:
                                    case VisualBasic6Parser.FRIEND:
                                    case VisualBasic6Parser.FOR:
                                    case VisualBasic6Parser.FUNCTION:
                                    case VisualBasic6Parser.GET:
                                    case VisualBasic6Parser.GLOBAL:
                                    case VisualBasic6Parser.GOSUB:
                                    case VisualBasic6Parser.GOTO:
                                    case VisualBasic6Parser.IF:
                                    case VisualBasic6Parser.IMP:
                                    case VisualBasic6Parser.IMPLEMENTS:
                                    case VisualBasic6Parser.IN:
                                    case VisualBasic6Parser.INPUT:
                                    case VisualBasic6Parser.IS:
                                    case VisualBasic6Parser.INTEGER:
                                    case VisualBasic6Parser.KILL:
                                    case VisualBasic6Parser.LOAD:
                                    case VisualBasic6Parser.LOCK:
                                    case VisualBasic6Parser.LONG:
                                    case VisualBasic6Parser.LOOP:
                                    case VisualBasic6Parser.LEN:
                                    case VisualBasic6Parser.LET:
                                    case VisualBasic6Parser.LIB:
                                    case VisualBasic6Parser.LIKE:
                                    case VisualBasic6Parser.LSET:
                                    case VisualBasic6Parser.ME:
                                    case VisualBasic6Parser.MID:
                                    case VisualBasic6Parser.MKDIR:
                                    case VisualBasic6Parser.MOD:
                                    case VisualBasic6Parser.NAME:
                                    case VisualBasic6Parser.NEXT:
                                    case VisualBasic6Parser.NEW:
                                    case VisualBasic6Parser.NOT:
                                    case VisualBasic6Parser.NOTHING:
                                    case VisualBasic6Parser.NULL_:
                                    case VisualBasic6Parser.OBJECT:
                                    case VisualBasic6Parser.ON:
                                    case VisualBasic6Parser.OPEN:
                                    case VisualBasic6Parser.OPTIONAL:
                                    case VisualBasic6Parser.OR:
                                    case VisualBasic6Parser.OUTPUT:
                                    case VisualBasic6Parser.PARAMARRAY:
                                    case VisualBasic6Parser.PRESERVE:
                                    case VisualBasic6Parser.PRINT:
                                    case VisualBasic6Parser.PRIVATE:
                                    case VisualBasic6Parser.PUBLIC:
                                    case VisualBasic6Parser.PUT:
                                    case VisualBasic6Parser.RANDOM:
                                    case VisualBasic6Parser.RANDOMIZE:
                                    case VisualBasic6Parser.RAISEEVENT:
                                    case VisualBasic6Parser.READ:
                                    case VisualBasic6Parser.REDIM:
                                    case VisualBasic6Parser.REM:
                                    case VisualBasic6Parser.RESET:
                                    case VisualBasic6Parser.RESUME:
                                    case VisualBasic6Parser.RETURN:
                                    case VisualBasic6Parser.RMDIR:
                                    case VisualBasic6Parser.RSET:
                                    case VisualBasic6Parser.SAVEPICTURE:
                                    case VisualBasic6Parser.SAVESETTING:
                                    case VisualBasic6Parser.SEEK:
                                    case VisualBasic6Parser.SELECT:
                                    case VisualBasic6Parser.SENDKEYS:
                                    case VisualBasic6Parser.SET:
                                    case VisualBasic6Parser.SETATTR:
                                    case VisualBasic6Parser.SHARED:
                                    case VisualBasic6Parser.SINGLE:
                                    case VisualBasic6Parser.SPC:
                                    case VisualBasic6Parser.STATIC:
                                    case VisualBasic6Parser.STEP:
                                    case VisualBasic6Parser.STOP:
                                    case VisualBasic6Parser.STRING:
                                    case VisualBasic6Parser.SUB:
                                    case VisualBasic6Parser.TAB:
                                    case VisualBasic6Parser.TEXT:
                                    case VisualBasic6Parser.THEN:
                                    case VisualBasic6Parser.TIME:
                                    case VisualBasic6Parser.TO:
                                    case VisualBasic6Parser.TRUE:
                                    case VisualBasic6Parser.TYPE:
                                    case VisualBasic6Parser.TYPEOF:
                                    case VisualBasic6Parser.UNLOAD:
                                    case VisualBasic6Parser.UNLOCK:
                                    case VisualBasic6Parser.UNTIL:
                                    case VisualBasic6Parser.VARIANT:
                                    case VisualBasic6Parser.VERSION:
                                    case VisualBasic6Parser.WEND:
                                    case VisualBasic6Parser.WHILE:
                                    case VisualBasic6Parser.WIDTH:
                                    case VisualBasic6Parser.WITH:
                                    case VisualBasic6Parser.WITHEVENTS:
                                    case VisualBasic6Parser.WRITE:
                                    case VisualBasic6Parser.XOR:
                                        this.state = 2752;
                                        this.ambiguousKeyword();
                                        break;
                                    case VisualBasic6Parser.IDENTIFIER:
                                        this.state = 2753;
                                        this.match(VisualBasic6Parser.IDENTIFIER);
                                        break;
                                    default:
                                        throw new antlr4_1.default.error.NoViableAltException(this);
                                }
                                break;
                            default:
                                throw new antlr4_1.default.error.NoViableAltException(this);
                        }
                        this.state = 2756;
                        this._errHandler.sync(this);
                        _alt = this._interp.adaptivePredict(this._input, 475, this._ctx);
                    } while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER);
                    break;
                default:
                    throw new antlr4_1.default.error.NoViableAltException(this);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    comparisonOperator() {
        let localctx = new ComparisonOperatorContext(this, this._ctx, this.state);
        this.enterRule(localctx, 286, VisualBasic6Parser.RULE_comparisonOperator);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2760;
            _la = this._input.LA(1);
            if (!(_la === VisualBasic6Parser.IS || _la === VisualBasic6Parser.LIKE || ((((_la - 187)) & ~0x1f) == 0 && ((1 << (_la - 187)) & ((1 << (VisualBasic6Parser.EQ - 187)) | (1 << (VisualBasic6Parser.GEQ - 187)) | (1 << (VisualBasic6Parser.GT - 187)) | (1 << (VisualBasic6Parser.LEQ - 187)) | (1 << (VisualBasic6Parser.LT - 187)) | (1 << (VisualBasic6Parser.NEQ - 187)))) !== 0))) {
                this._errHandler.recoverInline(this);
            }
            else {
                this._errHandler.reportMatch(this);
                this.consume();
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    complexType() {
        let localctx = new ComplexTypeContext(this, this._ctx, this.state);
        this.enterRule(localctx, 288, VisualBasic6Parser.RULE_complexType);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2762;
            this.ambiguousIdentifier();
            this.state = 2767;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input, 477, this._ctx);
            while (_alt != 2 && _alt != antlr4_1.default.atn.ATN.INVALID_ALT_NUMBER) {
                if (_alt === 1) {
                    this.state = 2763;
                    this.match(VisualBasic6Parser.DOT);
                    this.state = 2764;
                    this.ambiguousIdentifier();
                }
                this.state = 2769;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input, 477, this._ctx);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    fieldLength() {
        let localctx = new FieldLengthContext(this, this._ctx, this.state);
        this.enterRule(localctx, 290, VisualBasic6Parser.RULE_fieldLength);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2770;
            this.match(VisualBasic6Parser.MULT);
            this.state = 2772;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if (_la === VisualBasic6Parser.WS) {
                this.state = 2771;
                this.match(VisualBasic6Parser.WS);
            }
            this.state = 2776;
            this._errHandler.sync(this);
            switch (this._input.LA(1)) {
                case VisualBasic6Parser.INTEGERLITERAL:
                    this.state = 2774;
                    this.match(VisualBasic6Parser.INTEGERLITERAL);
                    break;
                case VisualBasic6Parser.ACCESS:
                case VisualBasic6Parser.ADDRESSOF:
                case VisualBasic6Parser.ALIAS:
                case VisualBasic6Parser.AND:
                case VisualBasic6Parser.ATTRIBUTE:
                case VisualBasic6Parser.APPACTIVATE:
                case VisualBasic6Parser.APPEND:
                case VisualBasic6Parser.AS:
                case VisualBasic6Parser.BEEP:
                case VisualBasic6Parser.BEGIN:
                case VisualBasic6Parser.BINARY:
                case VisualBasic6Parser.BOOLEAN:
                case VisualBasic6Parser.BYVAL:
                case VisualBasic6Parser.BYREF:
                case VisualBasic6Parser.BYTE:
                case VisualBasic6Parser.CALL:
                case VisualBasic6Parser.CASE:
                case VisualBasic6Parser.CHDIR:
                case VisualBasic6Parser.CHDRIVE:
                case VisualBasic6Parser.CLASS:
                case VisualBasic6Parser.CLOSE:
                case VisualBasic6Parser.COLLECTION:
                case VisualBasic6Parser.CONST:
                case VisualBasic6Parser.DATE:
                case VisualBasic6Parser.DECLARE:
                case VisualBasic6Parser.DEFBOOL:
                case VisualBasic6Parser.DEFBYTE:
                case VisualBasic6Parser.DEFDATE:
                case VisualBasic6Parser.DEFDBL:
                case VisualBasic6Parser.DEFDEC:
                case VisualBasic6Parser.DEFCUR:
                case VisualBasic6Parser.DEFINT:
                case VisualBasic6Parser.DEFLNG:
                case VisualBasic6Parser.DEFOBJ:
                case VisualBasic6Parser.DEFSNG:
                case VisualBasic6Parser.DEFSTR:
                case VisualBasic6Parser.DEFVAR:
                case VisualBasic6Parser.DELETESETTING:
                case VisualBasic6Parser.DIM:
                case VisualBasic6Parser.DO:
                case VisualBasic6Parser.DOUBLE:
                case VisualBasic6Parser.EACH:
                case VisualBasic6Parser.ELSE:
                case VisualBasic6Parser.ELSEIF:
                case VisualBasic6Parser.END:
                case VisualBasic6Parser.ENUM:
                case VisualBasic6Parser.EQV:
                case VisualBasic6Parser.ERASE:
                case VisualBasic6Parser.ERROR:
                case VisualBasic6Parser.EVENT:
                case VisualBasic6Parser.FALSE:
                case VisualBasic6Parser.FILECOPY:
                case VisualBasic6Parser.FRIEND:
                case VisualBasic6Parser.FOR:
                case VisualBasic6Parser.FUNCTION:
                case VisualBasic6Parser.GET:
                case VisualBasic6Parser.GLOBAL:
                case VisualBasic6Parser.GOSUB:
                case VisualBasic6Parser.GOTO:
                case VisualBasic6Parser.IF:
                case VisualBasic6Parser.IMP:
                case VisualBasic6Parser.IMPLEMENTS:
                case VisualBasic6Parser.IN:
                case VisualBasic6Parser.INPUT:
                case VisualBasic6Parser.IS:
                case VisualBasic6Parser.INTEGER:
                case VisualBasic6Parser.KILL:
                case VisualBasic6Parser.LOAD:
                case VisualBasic6Parser.LOCK:
                case VisualBasic6Parser.LONG:
                case VisualBasic6Parser.LOOP:
                case VisualBasic6Parser.LEN:
                case VisualBasic6Parser.LET:
                case VisualBasic6Parser.LIB:
                case VisualBasic6Parser.LIKE:
                case VisualBasic6Parser.LSET:
                case VisualBasic6Parser.ME:
                case VisualBasic6Parser.MID:
                case VisualBasic6Parser.MKDIR:
                case VisualBasic6Parser.MOD:
                case VisualBasic6Parser.NAME:
                case VisualBasic6Parser.NEXT:
                case VisualBasic6Parser.NEW:
                case VisualBasic6Parser.NOT:
                case VisualBasic6Parser.NOTHING:
                case VisualBasic6Parser.NULL_:
                case VisualBasic6Parser.OBJECT:
                case VisualBasic6Parser.ON:
                case VisualBasic6Parser.OPEN:
                case VisualBasic6Parser.OPTIONAL:
                case VisualBasic6Parser.OR:
                case VisualBasic6Parser.OUTPUT:
                case VisualBasic6Parser.PARAMARRAY:
                case VisualBasic6Parser.PRESERVE:
                case VisualBasic6Parser.PRINT:
                case VisualBasic6Parser.PRIVATE:
                case VisualBasic6Parser.PUBLIC:
                case VisualBasic6Parser.PUT:
                case VisualBasic6Parser.RANDOM:
                case VisualBasic6Parser.RANDOMIZE:
                case VisualBasic6Parser.RAISEEVENT:
                case VisualBasic6Parser.READ:
                case VisualBasic6Parser.REDIM:
                case VisualBasic6Parser.REM:
                case VisualBasic6Parser.RESET:
                case VisualBasic6Parser.RESUME:
                case VisualBasic6Parser.RETURN:
                case VisualBasic6Parser.RMDIR:
                case VisualBasic6Parser.RSET:
                case VisualBasic6Parser.SAVEPICTURE:
                case VisualBasic6Parser.SAVESETTING:
                case VisualBasic6Parser.SEEK:
                case VisualBasic6Parser.SELECT:
                case VisualBasic6Parser.SENDKEYS:
                case VisualBasic6Parser.SET:
                case VisualBasic6Parser.SETATTR:
                case VisualBasic6Parser.SHARED:
                case VisualBasic6Parser.SINGLE:
                case VisualBasic6Parser.SPC:
                case VisualBasic6Parser.STATIC:
                case VisualBasic6Parser.STEP:
                case VisualBasic6Parser.STOP:
                case VisualBasic6Parser.STRING:
                case VisualBasic6Parser.SUB:
                case VisualBasic6Parser.TAB:
                case VisualBasic6Parser.TEXT:
                case VisualBasic6Parser.THEN:
                case VisualBasic6Parser.TIME:
                case VisualBasic6Parser.TO:
                case VisualBasic6Parser.TRUE:
                case VisualBasic6Parser.TYPE:
                case VisualBasic6Parser.TYPEOF:
                case VisualBasic6Parser.UNLOAD:
                case VisualBasic6Parser.UNLOCK:
                case VisualBasic6Parser.UNTIL:
                case VisualBasic6Parser.VARIANT:
                case VisualBasic6Parser.VERSION:
                case VisualBasic6Parser.WEND:
                case VisualBasic6Parser.WHILE:
                case VisualBasic6Parser.WIDTH:
                case VisualBasic6Parser.WITH:
                case VisualBasic6Parser.WITHEVENTS:
                case VisualBasic6Parser.WRITE:
                case VisualBasic6Parser.XOR:
                case VisualBasic6Parser.L_SQUARE_BRACKET:
                case VisualBasic6Parser.IDENTIFIER:
                    this.state = 2775;
                    this.ambiguousIdentifier();
                    break;
                default:
                    throw new antlr4_1.default.error.NoViableAltException(this);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    letterrange() {
        let localctx = new LetterrangeContext(this, this._ctx, this.state);
        this.enterRule(localctx, 292, VisualBasic6Parser.RULE_letterrange);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2778;
            this.certainIdentifier();
            this.state = 2787;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 482, this._ctx);
            if (la_ === 1) {
                this.state = 2780;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === VisualBasic6Parser.WS) {
                    this.state = 2779;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 2782;
                this.match(VisualBasic6Parser.MINUS);
                this.state = 2784;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === VisualBasic6Parser.WS) {
                    this.state = 2783;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 2786;
                this.certainIdentifier();
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    lineLabel() {
        let localctx = new LineLabelContext(this, this._ctx, this.state);
        this.enterRule(localctx, 294, VisualBasic6Parser.RULE_lineLabel);
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2789;
            this.ambiguousIdentifier();
            this.state = 2790;
            this.match(VisualBasic6Parser.COLON);
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    literal() {
        let localctx = new LiteralContext(this, this._ctx, this.state);
        this.enterRule(localctx, 296, VisualBasic6Parser.RULE_literal);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2792;
            _la = this._input.LA(1);
            if (!(_la === VisualBasic6Parser.FALSE || _la === VisualBasic6Parser.NOTHING || _la === VisualBasic6Parser.NULL_ || _la === VisualBasic6Parser.TRUE || ((((_la - 209)) & ~0x1f) == 0 && ((1 << (_la - 209)) & ((1 << (VisualBasic6Parser.STRINGLITERAL - 209)) | (1 << (VisualBasic6Parser.DATELITERAL - 209)) | (1 << (VisualBasic6Parser.COLORLITERAL - 209)) | (1 << (VisualBasic6Parser.INTEGERLITERAL - 209)) | (1 << (VisualBasic6Parser.DOUBLELITERAL - 209)) | (1 << (VisualBasic6Parser.FILENUMBER - 209)) | (1 << (VisualBasic6Parser.OCTALLITERAL - 209)))) !== 0))) {
                this._errHandler.recoverInline(this);
            }
            else {
                this._errHandler.reportMatch(this);
                this.consume();
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    publicPrivateVisibility() {
        let localctx = new PublicPrivateVisibilityContext(this, this._ctx, this.state);
        this.enterRule(localctx, 298, VisualBasic6Parser.RULE_publicPrivateVisibility);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2794;
            _la = this._input.LA(1);
            if (!(_la === VisualBasic6Parser.PRIVATE || _la === VisualBasic6Parser.PUBLIC)) {
                this._errHandler.recoverInline(this);
            }
            else {
                this._errHandler.reportMatch(this);
                this.consume();
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    publicPrivateGlobalVisibility() {
        let localctx = new PublicPrivateGlobalVisibilityContext(this, this._ctx, this.state);
        this.enterRule(localctx, 300, VisualBasic6Parser.RULE_publicPrivateGlobalVisibility);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2796;
            _la = this._input.LA(1);
            if (!(_la === VisualBasic6Parser.GLOBAL || _la === VisualBasic6Parser.PRIVATE || _la === VisualBasic6Parser.PUBLIC)) {
                this._errHandler.recoverInline(this);
            }
            else {
                this._errHandler.reportMatch(this);
                this.consume();
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    type_() {
        let localctx = new Type_Context(this, this._ctx, this.state);
        this.enterRule(localctx, 302, VisualBasic6Parser.RULE_type_);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2800;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 483, this._ctx);
            switch (la_) {
                case 1:
                    this.state = 2798;
                    this.baseType();
                    break;
                case 2:
                    this.state = 2799;
                    this.complexType();
                    break;
            }
            this.state = 2810;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input, 486, this._ctx);
            if (la_ === 1) {
                this.state = 2803;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === VisualBasic6Parser.WS) {
                    this.state = 2802;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 2805;
                this.match(VisualBasic6Parser.LPAREN);
                this.state = 2807;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if (_la === VisualBasic6Parser.WS) {
                    this.state = 2806;
                    this.match(VisualBasic6Parser.WS);
                }
                this.state = 2809;
                this.match(VisualBasic6Parser.RPAREN);
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    typeHint() {
        let localctx = new TypeHintContext(this, this._ctx, this.state);
        this.enterRule(localctx, 304, VisualBasic6Parser.RULE_typeHint);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2812;
            _la = this._input.LA(1);
            if (!(((((_la - 178)) & ~0x1f) == 0 && ((1 << (_la - 178)) & ((1 << (VisualBasic6Parser.AMPERSAND - 178)) | (1 << (VisualBasic6Parser.AT - 178)) | (1 << (VisualBasic6Parser.DOLLAR - 178)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 178)) | (1 << (VisualBasic6Parser.HASH - 178)) | (1 << (VisualBasic6Parser.PERCENT - 178)))) !== 0))) {
                this._errHandler.recoverInline(this);
            }
            else {
                this._errHandler.reportMatch(this);
                this.consume();
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    visibility() {
        let localctx = new VisibilityContext(this, this._ctx, this.state);
        this.enterRule(localctx, 306, VisualBasic6Parser.RULE_visibility);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2814;
            _la = this._input.LA(1);
            if (!(_la === VisualBasic6Parser.FRIEND || _la === VisualBasic6Parser.GLOBAL || _la === VisualBasic6Parser.PRIVATE || _la === VisualBasic6Parser.PUBLIC)) {
                this._errHandler.recoverInline(this);
            }
            else {
                this._errHandler.reportMatch(this);
                this.consume();
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
    ambiguousKeyword() {
        let localctx = new AmbiguousKeywordContext(this, this._ctx, this.state);
        this.enterRule(localctx, 308, VisualBasic6Parser.RULE_ambiguousKeyword);
        var _la = 0;
        try {
            this.enterOuterAlt(localctx, 1);
            this.state = 2816;
            _la = this._input.LA(1);
            if (!((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFCUR - 32)) | (1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)))) !== 0) || ((((_la - 66)) & ~0x1f) == 0 && ((1 << (_la - 66)) & ((1 << (VisualBasic6Parser.FALSE - 66)) | (1 << (VisualBasic6Parser.FILECOPY - 66)) | (1 << (VisualBasic6Parser.FRIEND - 66)) | (1 << (VisualBasic6Parser.FOR - 66)) | (1 << (VisualBasic6Parser.FUNCTION - 66)) | (1 << (VisualBasic6Parser.GET - 66)) | (1 << (VisualBasic6Parser.GLOBAL - 66)) | (1 << (VisualBasic6Parser.GOSUB - 66)) | (1 << (VisualBasic6Parser.GOTO - 66)) | (1 << (VisualBasic6Parser.IF - 66)) | (1 << (VisualBasic6Parser.IMP - 66)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 66)) | (1 << (VisualBasic6Parser.IN - 66)) | (1 << (VisualBasic6Parser.INPUT - 66)) | (1 << (VisualBasic6Parser.IS - 66)) | (1 << (VisualBasic6Parser.INTEGER - 66)) | (1 << (VisualBasic6Parser.KILL - 66)) | (1 << (VisualBasic6Parser.LOAD - 66)) | (1 << (VisualBasic6Parser.LOCK - 66)) | (1 << (VisualBasic6Parser.LONG - 66)) | (1 << (VisualBasic6Parser.LOOP - 66)) | (1 << (VisualBasic6Parser.LEN - 66)) | (1 << (VisualBasic6Parser.LET - 66)) | (1 << (VisualBasic6Parser.LIB - 66)) | (1 << (VisualBasic6Parser.LIKE - 66)) | (1 << (VisualBasic6Parser.LSET - 66)))) !== 0) || ((((_la - 100)) & ~0x1f) == 0 && ((1 << (_la - 100)) & ((1 << (VisualBasic6Parser.ME - 100)) | (1 << (VisualBasic6Parser.MID - 100)) | (1 << (VisualBasic6Parser.MKDIR - 100)) | (1 << (VisualBasic6Parser.MOD - 100)) | (1 << (VisualBasic6Parser.NAME - 100)) | (1 << (VisualBasic6Parser.NEXT - 100)) | (1 << (VisualBasic6Parser.NEW - 100)) | (1 << (VisualBasic6Parser.NOT - 100)) | (1 << (VisualBasic6Parser.NOTHING - 100)) | (1 << (VisualBasic6Parser.NULL_ - 100)) | (1 << (VisualBasic6Parser.OBJECT - 100)) | (1 << (VisualBasic6Parser.ON - 100)) | (1 << (VisualBasic6Parser.OPEN - 100)) | (1 << (VisualBasic6Parser.OPTIONAL - 100)) | (1 << (VisualBasic6Parser.OR - 100)) | (1 << (VisualBasic6Parser.OUTPUT - 100)) | (1 << (VisualBasic6Parser.PARAMARRAY - 100)) | (1 << (VisualBasic6Parser.PRESERVE - 100)) | (1 << (VisualBasic6Parser.PRINT - 100)) | (1 << (VisualBasic6Parser.PRIVATE - 100)) | (1 << (VisualBasic6Parser.PUBLIC - 100)) | (1 << (VisualBasic6Parser.PUT - 100)) | (1 << (VisualBasic6Parser.RANDOM - 100)))) !== 0) || ((((_la - 132)) & ~0x1f) == 0 && ((1 << (_la - 132)) & ((1 << (VisualBasic6Parser.RANDOMIZE - 132)) | (1 << (VisualBasic6Parser.RAISEEVENT - 132)) | (1 << (VisualBasic6Parser.READ - 132)) | (1 << (VisualBasic6Parser.REDIM - 132)) | (1 << (VisualBasic6Parser.REM - 132)) | (1 << (VisualBasic6Parser.RESET - 132)) | (1 << (VisualBasic6Parser.RESUME - 132)) | (1 << (VisualBasic6Parser.RETURN - 132)) | (1 << (VisualBasic6Parser.RMDIR - 132)) | (1 << (VisualBasic6Parser.RSET - 132)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 132)) | (1 << (VisualBasic6Parser.SAVESETTING - 132)) | (1 << (VisualBasic6Parser.SEEK - 132)) | (1 << (VisualBasic6Parser.SELECT - 132)) | (1 << (VisualBasic6Parser.SENDKEYS - 132)) | (1 << (VisualBasic6Parser.SET - 132)) | (1 << (VisualBasic6Parser.SETATTR - 132)) | (1 << (VisualBasic6Parser.SHARED - 132)) | (1 << (VisualBasic6Parser.SINGLE - 132)) | (1 << (VisualBasic6Parser.SPC - 132)) | (1 << (VisualBasic6Parser.STATIC - 132)) | (1 << (VisualBasic6Parser.STEP - 132)) | (1 << (VisualBasic6Parser.STOP - 132)) | (1 << (VisualBasic6Parser.STRING - 132)) | (1 << (VisualBasic6Parser.SUB - 132)) | (1 << (VisualBasic6Parser.TAB - 132)) | (1 << (VisualBasic6Parser.TEXT - 132)) | (1 << (VisualBasic6Parser.THEN - 132)) | (1 << (VisualBasic6Parser.TIME - 132)) | (1 << (VisualBasic6Parser.TO - 132)) | (1 << (VisualBasic6Parser.TRUE - 132)))) !== 0) || ((((_la - 164)) & ~0x1f) == 0 && ((1 << (_la - 164)) & ((1 << (VisualBasic6Parser.TYPE - 164)) | (1 << (VisualBasic6Parser.TYPEOF - 164)) | (1 << (VisualBasic6Parser.UNLOAD - 164)) | (1 << (VisualBasic6Parser.UNLOCK - 164)) | (1 << (VisualBasic6Parser.UNTIL - 164)) | (1 << (VisualBasic6Parser.VARIANT - 164)) | (1 << (VisualBasic6Parser.VERSION - 164)) | (1 << (VisualBasic6Parser.WEND - 164)) | (1 << (VisualBasic6Parser.WHILE - 164)) | (1 << (VisualBasic6Parser.WIDTH - 164)) | (1 << (VisualBasic6Parser.WITH - 164)) | (1 << (VisualBasic6Parser.WITHEVENTS - 164)) | (1 << (VisualBasic6Parser.WRITE - 164)) | (1 << (VisualBasic6Parser.XOR - 164)))) !== 0))) {
                this._errHandler.recoverInline(this);
            }
            else {
                this._errHandler.reportMatch(this);
                this.consume();
            }
        }
        catch (re) {
            if (re instanceof antlr4_1.default.error.RecognitionException) {
                localctx.exception = re;
                this._errHandler.reportError(this, re);
                this._errHandler.recover(this, re);
            }
            else {
                throw re;
            }
        }
        finally {
            this.exitRule();
        }
        return localctx;
    }
}
exports.default = VisualBasic6Parser;
VisualBasic6Parser.grammarFileName = "VisualBasic6Parser.g4";
VisualBasic6Parser.literalNames = [null, null, null, null, null, null, null, null,
    null, null, null, null, null, null, null, null,
    null, null, null, null, null, null, null, null,
    null, null, null, null, null, null, null, null,
    null, null, null, null, null, null, null, null,
    null, null, null, null, null, null, null, null,
    null, null, null, null, null, null, null, null,
    null, null, null, null, null, null, null, null,
    null, null, null, null, null, null, null, null,
    null, null, null, null, null, null, null, null,
    null, null, null, null, null, null, null, null,
    null, null, null, null, null, null, null, null,
    null, null, null, null, null, null, null, null,
    null, null, null, null, null, null, null, null,
    null, null, null, null, null, null, null, null,
    null, null, null, null, null, null, null, null,
    null, null, null, null, null, null, null, null,
    null, null, null, null, null, null, null, null,
    null, null, null, null, null, null, null, null,
    null, null, null, null, null, null, null, null,
    null, null, null, null, null, null, null, null,
    null, null, null, null, null, null, null, null,
    null, null, "'&'", "':='", "'@'", "':'", "','",
    "'\\'", "'/'", "'$'", "'.'", "'='", "'!'", "'>='",
    "'>'", "'#'", "'<='", "'{'", "'('", "'<'", "'-'",
    "'-='", "'*'", "'<>'", "'%'", "'+'", "'+='",
    "'^'", "'}'", "')'", "';'", "'['", "']'"];
VisualBasic6Parser.symbolicNames = [null, "ACCESS", "ADDRESSOF", "ALIAS", "AND",
    "ATTRIBUTE", "APPACTIVATE", "APPEND", "AS",
    "BEEP", "BEGIN", "BEGINPROPERTY", "BINARY",
    "BOOLEAN", "BYVAL", "BYREF", "BYTE", "CALL",
    "CASE", "CHDIR", "CHDRIVE", "CLASS", "CLOSE",
    "COLLECTION", "CONST", "DATE", "DECLARE", "DEFBOOL",
    "DEFBYTE", "DEFDATE", "DEFDBL", "DEFDEC", "DEFCUR",
    "DEFINT", "DEFLNG", "DEFOBJ", "DEFSNG", "DEFSTR",
    "DEFVAR", "DELETESETTING", "DIM", "DO", "DOUBLE",
    "EACH", "ELSE", "ELSEIF", "END_ENUM", "END_FUNCTION",
    "END_IF", "END_PROPERTY", "END_SELECT", "END_SUB",
    "END_TYPE", "END_WITH", "END", "ENDPROPERTY",
    "ENUM", "EQV", "ERASE", "ERROR", "EVENT", "EXIT_DO",
    "EXIT_FOR", "EXIT_FUNCTION", "EXIT_PROPERTY",
    "EXIT_SUB", "FALSE", "FILECOPY", "FRIEND",
    "FOR", "FUNCTION", "GET", "GLOBAL", "GOSUB",
    "GOTO", "IF", "IMP", "IMPLEMENTS", "IN", "INPUT",
    "IS", "INTEGER", "KILL", "LOAD", "LOCK", "LONG",
    "LOOP", "LEN", "LET", "LIB", "LIKE", "LINE_INPUT",
    "LOCK_READ", "LOCK_WRITE", "LOCK_READ_WRITE",
    "LSET", "MACRO_IF", "MACRO_ELSEIF", "MACRO_ELSE",
    "MACRO_END_IF", "ME", "MID", "MKDIR", "MOD",
    "NAME", "NEXT", "NEW", "NOT", "NOTHING", "NULL_",
    "OBJECT", "ON", "ON_ERROR", "ON_LOCAL_ERROR",
    "OPEN", "OPTIONAL", "OPTION_BASE", "OPTION_EXPLICIT",
    "OPTION_COMPARE", "OPTION_PRIVATE_MODULE",
    "OR", "OUTPUT", "PARAMARRAY", "PRESERVE", "PRINT",
    "PRIVATE", "PROPERTY_GET", "PROPERTY_LET",
    "PROPERTY_SET", "PUBLIC", "PUT", "RANDOM",
    "RANDOMIZE", "RAISEEVENT", "READ", "READ_WRITE",
    "REDIM", "REM", "RESET", "RESUME", "RETURN",
    "RMDIR", "RSET", "SAVEPICTURE", "SAVESETTING",
    "SEEK", "SELECT", "SENDKEYS", "SET", "SETATTR",
    "SHARED", "SINGLE", "SPC", "STATIC", "STEP",
    "STOP", "STRING", "SUB", "TAB", "TEXT", "THEN",
    "TIME", "TO", "TRUE", "TYPE", "TYPEOF", "UNLOAD",
    "UNLOCK", "UNTIL", "VARIANT", "VERSION", "WEND",
    "WHILE", "WIDTH", "WITH", "WITHEVENTS", "WRITE",
    "XOR", "AMPERSAND", "ASSIGN", "AT", "COLON",
    "COMMA", "IDIV", "DIV", "DOLLAR", "DOT", "EQ",
    "EXCLAMATIONMARK", "GEQ", "GT", "HASH", "LEQ",
    "LBRACE", "LPAREN", "LT", "MINUS", "MINUS_EQ",
    "MULT", "NEQ", "PERCENT", "PLUS", "PLUS_EQ",
    "POW", "RBRACE", "RPAREN", "SEMICOLON", "L_SQUARE_BRACKET",
    "R_SQUARE_BRACKET", "STRINGLITERAL", "DATELITERAL",
    "COLORLITERAL", "INTEGERLITERAL", "DOUBLELITERAL",
    "FILENUMBER", "OCTALLITERAL", "FRX_OFFSET",
    "GUID", "IDENTIFIER", "LINE_CONTINUATION",
    "NEWLINE", "COMMENT", "WS"];
VisualBasic6Parser.ruleNames = ["startRule", "module", "moduleReferences", "moduleReference",
    "moduleReferenceValue", "moduleReferenceComponent",
    "moduleHeader", "moduleConfig", "moduleConfigElement",
    "moduleAttributes", "moduleOptions", "moduleOption",
    "moduleBody", "moduleBodyElement", "controlProperties",
    "cp_Properties", "cp_SingleProperty", "cp_PropertyName",
    "cp_PropertyValue", "cp_NestedProperty", "cp_ControlType",
    "cp_ControlIdentifier", "moduleBlock", "attributeStmt",
    "block", "blockStmt", "appActivateStmt", "beepStmt",
    "chDirStmt", "chDriveStmt", "closeStmt", "constStmt",
    "constSubStmt", "dateStmt", "declareStmt", "deftypeStmt",
    "deleteSettingStmt", "doLoopStmt", "endStmt", "enumerationStmt",
    "enumerationStmt_Constant", "eraseStmt", "errorStmt",
    "eventStmt", "exitStmt", "filecopyStmt", "forEachStmt",
    "forNextStmt", "functionStmt", "getStmt", "goSubStmt",
    "goToStmt", "ifThenElseStmt", "ifBlockStmt", "ifConditionStmt",
    "ifElseIfBlockStmt", "ifElseBlockStmt", "implementsStmt",
    "inputStmt", "killStmt", "letStmt", "lineInputStmt",
    "loadStmt", "lockStmt", "lsetStmt", "macroIfThenElseStmt",
    "macroIfBlockStmt", "macroElseIfBlockStmt", "macroElseBlockStmt",
    "midStmt", "mkdirStmt", "nameStmt", "onErrorStmt",
    "onGoToStmt", "onGoSubStmt", "openStmt", "outputList",
    "outputList_Expression", "printStmt", "propertyGetStmt",
    "propertySetStmt", "propertyLetStmt", "putStmt",
    "raiseEventStmt", "randomizeStmt", "redimStmt",
    "redimSubStmt", "resetStmt", "resumeStmt", "returnStmt",
    "rmdirStmt", "rsetStmt", "savepictureStmt", "saveSettingStmt",
    "seekStmt", "selectCaseStmt", "sC_Case", "sC_Cond",
    "sC_CondExpr", "sendkeysStmt", "setattrStmt", "setStmt",
    "stopStmt", "subStmt", "timeStmt", "typeStmt",
    "typeStmt_Element", "typeOfStmt", "unloadStmt",
    "unlockStmt", "valueStmt", "variableStmt", "variableListStmt",
    "variableSubStmt", "whileWendStmt", "widthStmt",
    "withStmt", "writeStmt", "explicitCallStmt", "eCS_ProcedureCall",
    "eCS_MemberProcedureCall", "implicitCallStmt_InBlock",
    "iCS_B_ProcedureCall", "iCS_B_MemberProcedureCall",
    "implicitCallStmt_InStmt", "iCS_S_VariableOrProcedureCall",
    "iCS_S_ProcedureOrArrayCall", "iCS_S_NestedProcedureCall",
    "iCS_S_MembersCall", "iCS_S_MemberCall", "iCS_S_DictionaryCall",
    "argsCall", "argCall", "dictionaryCallStmt", "argList",
    "arg", "argDefaultValue", "subscripts", "subscript_",
    "ambiguousIdentifier", "asTypeClause", "baseType",
    "certainIdentifier", "comparisonOperator", "complexType",
    "fieldLength", "letterrange", "lineLabel", "literal",
    "publicPrivateVisibility", "publicPrivateGlobalVisibility",
    "type_", "typeHint", "visibility", "ambiguousKeyword"];
VisualBasic6Parser.EOF = antlr4_1.default.Token.EOF;
VisualBasic6Parser.ACCESS = 1;
VisualBasic6Parser.ADDRESSOF = 2;
VisualBasic6Parser.ALIAS = 3;
VisualBasic6Parser.AND = 4;
VisualBasic6Parser.ATTRIBUTE = 5;
VisualBasic6Parser.APPACTIVATE = 6;
VisualBasic6Parser.APPEND = 7;
VisualBasic6Parser.AS = 8;
VisualBasic6Parser.BEEP = 9;
VisualBasic6Parser.BEGIN = 10;
VisualBasic6Parser.BEGINPROPERTY = 11;
VisualBasic6Parser.BINARY = 12;
VisualBasic6Parser.BOOLEAN = 13;
VisualBasic6Parser.BYVAL = 14;
VisualBasic6Parser.BYREF = 15;
VisualBasic6Parser.BYTE = 16;
VisualBasic6Parser.CALL = 17;
VisualBasic6Parser.CASE = 18;
VisualBasic6Parser.CHDIR = 19;
VisualBasic6Parser.CHDRIVE = 20;
VisualBasic6Parser.CLASS = 21;
VisualBasic6Parser.CLOSE = 22;
VisualBasic6Parser.COLLECTION = 23;
VisualBasic6Parser.CONST = 24;
VisualBasic6Parser.DATE = 25;
VisualBasic6Parser.DECLARE = 26;
VisualBasic6Parser.DEFBOOL = 27;
VisualBasic6Parser.DEFBYTE = 28;
VisualBasic6Parser.DEFDATE = 29;
VisualBasic6Parser.DEFDBL = 30;
VisualBasic6Parser.DEFDEC = 31;
VisualBasic6Parser.DEFCUR = 32;
VisualBasic6Parser.DEFINT = 33;
VisualBasic6Parser.DEFLNG = 34;
VisualBasic6Parser.DEFOBJ = 35;
VisualBasic6Parser.DEFSNG = 36;
VisualBasic6Parser.DEFSTR = 37;
VisualBasic6Parser.DEFVAR = 38;
VisualBasic6Parser.DELETESETTING = 39;
VisualBasic6Parser.DIM = 40;
VisualBasic6Parser.DO = 41;
VisualBasic6Parser.DOUBLE = 42;
VisualBasic6Parser.EACH = 43;
VisualBasic6Parser.ELSE = 44;
VisualBasic6Parser.ELSEIF = 45;
VisualBasic6Parser.END_ENUM = 46;
VisualBasic6Parser.END_FUNCTION = 47;
VisualBasic6Parser.END_IF = 48;
VisualBasic6Parser.END_PROPERTY = 49;
VisualBasic6Parser.END_SELECT = 50;
VisualBasic6Parser.END_SUB = 51;
VisualBasic6Parser.END_TYPE = 52;
VisualBasic6Parser.END_WITH = 53;
VisualBasic6Parser.END = 54;
VisualBasic6Parser.ENDPROPERTY = 55;
VisualBasic6Parser.ENUM = 56;
VisualBasic6Parser.EQV = 57;
VisualBasic6Parser.ERASE = 58;
VisualBasic6Parser.ERROR = 59;
VisualBasic6Parser.EVENT = 60;
VisualBasic6Parser.EXIT_DO = 61;
VisualBasic6Parser.EXIT_FOR = 62;
VisualBasic6Parser.EXIT_FUNCTION = 63;
VisualBasic6Parser.EXIT_PROPERTY = 64;
VisualBasic6Parser.EXIT_SUB = 65;
VisualBasic6Parser.FALSE = 66;
VisualBasic6Parser.FILECOPY = 67;
VisualBasic6Parser.FRIEND = 68;
VisualBasic6Parser.FOR = 69;
VisualBasic6Parser.FUNCTION = 70;
VisualBasic6Parser.GET = 71;
VisualBasic6Parser.GLOBAL = 72;
VisualBasic6Parser.GOSUB = 73;
VisualBasic6Parser.GOTO = 74;
VisualBasic6Parser.IF = 75;
VisualBasic6Parser.IMP = 76;
VisualBasic6Parser.IMPLEMENTS = 77;
VisualBasic6Parser.IN = 78;
VisualBasic6Parser.INPUT = 79;
VisualBasic6Parser.IS = 80;
VisualBasic6Parser.INTEGER = 81;
VisualBasic6Parser.KILL = 82;
VisualBasic6Parser.LOAD = 83;
VisualBasic6Parser.LOCK = 84;
VisualBasic6Parser.LONG = 85;
VisualBasic6Parser.LOOP = 86;
VisualBasic6Parser.LEN = 87;
VisualBasic6Parser.LET = 88;
VisualBasic6Parser.LIB = 89;
VisualBasic6Parser.LIKE = 90;
VisualBasic6Parser.LINE_INPUT = 91;
VisualBasic6Parser.LOCK_READ = 92;
VisualBasic6Parser.LOCK_WRITE = 93;
VisualBasic6Parser.LOCK_READ_WRITE = 94;
VisualBasic6Parser.LSET = 95;
VisualBasic6Parser.MACRO_IF = 96;
VisualBasic6Parser.MACRO_ELSEIF = 97;
VisualBasic6Parser.MACRO_ELSE = 98;
VisualBasic6Parser.MACRO_END_IF = 99;
VisualBasic6Parser.ME = 100;
VisualBasic6Parser.MID = 101;
VisualBasic6Parser.MKDIR = 102;
VisualBasic6Parser.MOD = 103;
VisualBasic6Parser.NAME = 104;
VisualBasic6Parser.NEXT = 105;
VisualBasic6Parser.NEW = 106;
VisualBasic6Parser.NOT = 107;
VisualBasic6Parser.NOTHING = 108;
VisualBasic6Parser.NULL_ = 109;
VisualBasic6Parser.OBJECT = 110;
VisualBasic6Parser.ON = 111;
VisualBasic6Parser.ON_ERROR = 112;
VisualBasic6Parser.ON_LOCAL_ERROR = 113;
VisualBasic6Parser.OPEN = 114;
VisualBasic6Parser.OPTIONAL = 115;
VisualBasic6Parser.OPTION_BASE = 116;
VisualBasic6Parser.OPTION_EXPLICIT = 117;
VisualBasic6Parser.OPTION_COMPARE = 118;
VisualBasic6Parser.OPTION_PRIVATE_MODULE = 119;
VisualBasic6Parser.OR = 120;
VisualBasic6Parser.OUTPUT = 121;
VisualBasic6Parser.PARAMARRAY = 122;
VisualBasic6Parser.PRESERVE = 123;
VisualBasic6Parser.PRINT = 124;
VisualBasic6Parser.PRIVATE = 125;
VisualBasic6Parser.PROPERTY_GET = 126;
VisualBasic6Parser.PROPERTY_LET = 127;
VisualBasic6Parser.PROPERTY_SET = 128;
VisualBasic6Parser.PUBLIC = 129;
VisualBasic6Parser.PUT = 130;
VisualBasic6Parser.RANDOM = 131;
VisualBasic6Parser.RANDOMIZE = 132;
VisualBasic6Parser.RAISEEVENT = 133;
VisualBasic6Parser.READ = 134;
VisualBasic6Parser.READ_WRITE = 135;
VisualBasic6Parser.REDIM = 136;
VisualBasic6Parser.REM = 137;
VisualBasic6Parser.RESET = 138;
VisualBasic6Parser.RESUME = 139;
VisualBasic6Parser.RETURN = 140;
VisualBasic6Parser.RMDIR = 141;
VisualBasic6Parser.RSET = 142;
VisualBasic6Parser.SAVEPICTURE = 143;
VisualBasic6Parser.SAVESETTING = 144;
VisualBasic6Parser.SEEK = 145;
VisualBasic6Parser.SELECT = 146;
VisualBasic6Parser.SENDKEYS = 147;
VisualBasic6Parser.SET = 148;
VisualBasic6Parser.SETATTR = 149;
VisualBasic6Parser.SHARED = 150;
VisualBasic6Parser.SINGLE = 151;
VisualBasic6Parser.SPC = 152;
VisualBasic6Parser.STATIC = 153;
VisualBasic6Parser.STEP = 154;
VisualBasic6Parser.STOP = 155;
VisualBasic6Parser.STRING = 156;
VisualBasic6Parser.SUB = 157;
VisualBasic6Parser.TAB = 158;
VisualBasic6Parser.TEXT = 159;
VisualBasic6Parser.THEN = 160;
VisualBasic6Parser.TIME = 161;
VisualBasic6Parser.TO = 162;
VisualBasic6Parser.TRUE = 163;
VisualBasic6Parser.TYPE = 164;
VisualBasic6Parser.TYPEOF = 165;
VisualBasic6Parser.UNLOAD = 166;
VisualBasic6Parser.UNLOCK = 167;
VisualBasic6Parser.UNTIL = 168;
VisualBasic6Parser.VARIANT = 169;
VisualBasic6Parser.VERSION = 170;
VisualBasic6Parser.WEND = 171;
VisualBasic6Parser.WHILE = 172;
VisualBasic6Parser.WIDTH = 173;
VisualBasic6Parser.WITH = 174;
VisualBasic6Parser.WITHEVENTS = 175;
VisualBasic6Parser.WRITE = 176;
VisualBasic6Parser.XOR = 177;
VisualBasic6Parser.AMPERSAND = 178;
VisualBasic6Parser.ASSIGN = 179;
VisualBasic6Parser.AT = 180;
VisualBasic6Parser.COLON = 181;
VisualBasic6Parser.COMMA = 182;
VisualBasic6Parser.IDIV = 183;
VisualBasic6Parser.DIV = 184;
VisualBasic6Parser.DOLLAR = 185;
VisualBasic6Parser.DOT = 186;
VisualBasic6Parser.EQ = 187;
VisualBasic6Parser.EXCLAMATIONMARK = 188;
VisualBasic6Parser.GEQ = 189;
VisualBasic6Parser.GT = 190;
VisualBasic6Parser.HASH = 191;
VisualBasic6Parser.LEQ = 192;
VisualBasic6Parser.LBRACE = 193;
VisualBasic6Parser.LPAREN = 194;
VisualBasic6Parser.LT = 195;
VisualBasic6Parser.MINUS = 196;
VisualBasic6Parser.MINUS_EQ = 197;
VisualBasic6Parser.MULT = 198;
VisualBasic6Parser.NEQ = 199;
VisualBasic6Parser.PERCENT = 200;
VisualBasic6Parser.PLUS = 201;
VisualBasic6Parser.PLUS_EQ = 202;
VisualBasic6Parser.POW = 203;
VisualBasic6Parser.RBRACE = 204;
VisualBasic6Parser.RPAREN = 205;
VisualBasic6Parser.SEMICOLON = 206;
VisualBasic6Parser.L_SQUARE_BRACKET = 207;
VisualBasic6Parser.R_SQUARE_BRACKET = 208;
VisualBasic6Parser.STRINGLITERAL = 209;
VisualBasic6Parser.DATELITERAL = 210;
VisualBasic6Parser.COLORLITERAL = 211;
VisualBasic6Parser.INTEGERLITERAL = 212;
VisualBasic6Parser.DOUBLELITERAL = 213;
VisualBasic6Parser.FILENUMBER = 214;
VisualBasic6Parser.OCTALLITERAL = 215;
VisualBasic6Parser.FRX_OFFSET = 216;
VisualBasic6Parser.GUID = 217;
VisualBasic6Parser.IDENTIFIER = 218;
VisualBasic6Parser.LINE_CONTINUATION = 219;
VisualBasic6Parser.NEWLINE = 220;
VisualBasic6Parser.COMMENT = 221;
VisualBasic6Parser.WS = 222;
VisualBasic6Parser.RULE_startRule = 0;
VisualBasic6Parser.RULE_module = 1;
VisualBasic6Parser.RULE_moduleReferences = 2;
VisualBasic6Parser.RULE_moduleReference = 3;
VisualBasic6Parser.RULE_moduleReferenceValue = 4;
VisualBasic6Parser.RULE_moduleReferenceComponent = 5;
VisualBasic6Parser.RULE_moduleHeader = 6;
VisualBasic6Parser.RULE_moduleConfig = 7;
VisualBasic6Parser.RULE_moduleConfigElement = 8;
VisualBasic6Parser.RULE_moduleAttributes = 9;
VisualBasic6Parser.RULE_moduleOptions = 10;
VisualBasic6Parser.RULE_moduleOption = 11;
VisualBasic6Parser.RULE_moduleBody = 12;
VisualBasic6Parser.RULE_moduleBodyElement = 13;
VisualBasic6Parser.RULE_controlProperties = 14;
VisualBasic6Parser.RULE_cp_Properties = 15;
VisualBasic6Parser.RULE_cp_SingleProperty = 16;
VisualBasic6Parser.RULE_cp_PropertyName = 17;
VisualBasic6Parser.RULE_cp_PropertyValue = 18;
VisualBasic6Parser.RULE_cp_NestedProperty = 19;
VisualBasic6Parser.RULE_cp_ControlType = 20;
VisualBasic6Parser.RULE_cp_ControlIdentifier = 21;
VisualBasic6Parser.RULE_moduleBlock = 22;
VisualBasic6Parser.RULE_attributeStmt = 23;
VisualBasic6Parser.RULE_block = 24;
VisualBasic6Parser.RULE_blockStmt = 25;
VisualBasic6Parser.RULE_appActivateStmt = 26;
VisualBasic6Parser.RULE_beepStmt = 27;
VisualBasic6Parser.RULE_chDirStmt = 28;
VisualBasic6Parser.RULE_chDriveStmt = 29;
VisualBasic6Parser.RULE_closeStmt = 30;
VisualBasic6Parser.RULE_constStmt = 31;
VisualBasic6Parser.RULE_constSubStmt = 32;
VisualBasic6Parser.RULE_dateStmt = 33;
VisualBasic6Parser.RULE_declareStmt = 34;
VisualBasic6Parser.RULE_deftypeStmt = 35;
VisualBasic6Parser.RULE_deleteSettingStmt = 36;
VisualBasic6Parser.RULE_doLoopStmt = 37;
VisualBasic6Parser.RULE_endStmt = 38;
VisualBasic6Parser.RULE_enumerationStmt = 39;
VisualBasic6Parser.RULE_enumerationStmt_Constant = 40;
VisualBasic6Parser.RULE_eraseStmt = 41;
VisualBasic6Parser.RULE_errorStmt = 42;
VisualBasic6Parser.RULE_eventStmt = 43;
VisualBasic6Parser.RULE_exitStmt = 44;
VisualBasic6Parser.RULE_filecopyStmt = 45;
VisualBasic6Parser.RULE_forEachStmt = 46;
VisualBasic6Parser.RULE_forNextStmt = 47;
VisualBasic6Parser.RULE_functionStmt = 48;
VisualBasic6Parser.RULE_getStmt = 49;
VisualBasic6Parser.RULE_goSubStmt = 50;
VisualBasic6Parser.RULE_goToStmt = 51;
VisualBasic6Parser.RULE_ifThenElseStmt = 52;
VisualBasic6Parser.RULE_ifBlockStmt = 53;
VisualBasic6Parser.RULE_ifConditionStmt = 54;
VisualBasic6Parser.RULE_ifElseIfBlockStmt = 55;
VisualBasic6Parser.RULE_ifElseBlockStmt = 56;
VisualBasic6Parser.RULE_implementsStmt = 57;
VisualBasic6Parser.RULE_inputStmt = 58;
VisualBasic6Parser.RULE_killStmt = 59;
VisualBasic6Parser.RULE_letStmt = 60;
VisualBasic6Parser.RULE_lineInputStmt = 61;
VisualBasic6Parser.RULE_loadStmt = 62;
VisualBasic6Parser.RULE_lockStmt = 63;
VisualBasic6Parser.RULE_lsetStmt = 64;
VisualBasic6Parser.RULE_macroIfThenElseStmt = 65;
VisualBasic6Parser.RULE_macroIfBlockStmt = 66;
VisualBasic6Parser.RULE_macroElseIfBlockStmt = 67;
VisualBasic6Parser.RULE_macroElseBlockStmt = 68;
VisualBasic6Parser.RULE_midStmt = 69;
VisualBasic6Parser.RULE_mkdirStmt = 70;
VisualBasic6Parser.RULE_nameStmt = 71;
VisualBasic6Parser.RULE_onErrorStmt = 72;
VisualBasic6Parser.RULE_onGoToStmt = 73;
VisualBasic6Parser.RULE_onGoSubStmt = 74;
VisualBasic6Parser.RULE_openStmt = 75;
VisualBasic6Parser.RULE_outputList = 76;
VisualBasic6Parser.RULE_outputList_Expression = 77;
VisualBasic6Parser.RULE_printStmt = 78;
VisualBasic6Parser.RULE_propertyGetStmt = 79;
VisualBasic6Parser.RULE_propertySetStmt = 80;
VisualBasic6Parser.RULE_propertyLetStmt = 81;
VisualBasic6Parser.RULE_putStmt = 82;
VisualBasic6Parser.RULE_raiseEventStmt = 83;
VisualBasic6Parser.RULE_randomizeStmt = 84;
VisualBasic6Parser.RULE_redimStmt = 85;
VisualBasic6Parser.RULE_redimSubStmt = 86;
VisualBasic6Parser.RULE_resetStmt = 87;
VisualBasic6Parser.RULE_resumeStmt = 88;
VisualBasic6Parser.RULE_returnStmt = 89;
VisualBasic6Parser.RULE_rmdirStmt = 90;
VisualBasic6Parser.RULE_rsetStmt = 91;
VisualBasic6Parser.RULE_savepictureStmt = 92;
VisualBasic6Parser.RULE_saveSettingStmt = 93;
VisualBasic6Parser.RULE_seekStmt = 94;
VisualBasic6Parser.RULE_selectCaseStmt = 95;
VisualBasic6Parser.RULE_sC_Case = 96;
VisualBasic6Parser.RULE_sC_Cond = 97;
VisualBasic6Parser.RULE_sC_CondExpr = 98;
VisualBasic6Parser.RULE_sendkeysStmt = 99;
VisualBasic6Parser.RULE_setattrStmt = 100;
VisualBasic6Parser.RULE_setStmt = 101;
VisualBasic6Parser.RULE_stopStmt = 102;
VisualBasic6Parser.RULE_subStmt = 103;
VisualBasic6Parser.RULE_timeStmt = 104;
VisualBasic6Parser.RULE_typeStmt = 105;
VisualBasic6Parser.RULE_typeStmt_Element = 106;
VisualBasic6Parser.RULE_typeOfStmt = 107;
VisualBasic6Parser.RULE_unloadStmt = 108;
VisualBasic6Parser.RULE_unlockStmt = 109;
VisualBasic6Parser.RULE_valueStmt = 110;
VisualBasic6Parser.RULE_variableStmt = 111;
VisualBasic6Parser.RULE_variableListStmt = 112;
VisualBasic6Parser.RULE_variableSubStmt = 113;
VisualBasic6Parser.RULE_whileWendStmt = 114;
VisualBasic6Parser.RULE_widthStmt = 115;
VisualBasic6Parser.RULE_withStmt = 116;
VisualBasic6Parser.RULE_writeStmt = 117;
VisualBasic6Parser.RULE_explicitCallStmt = 118;
VisualBasic6Parser.RULE_eCS_ProcedureCall = 119;
VisualBasic6Parser.RULE_eCS_MemberProcedureCall = 120;
VisualBasic6Parser.RULE_implicitCallStmt_InBlock = 121;
VisualBasic6Parser.RULE_iCS_B_ProcedureCall = 122;
VisualBasic6Parser.RULE_iCS_B_MemberProcedureCall = 123;
VisualBasic6Parser.RULE_implicitCallStmt_InStmt = 124;
VisualBasic6Parser.RULE_iCS_S_VariableOrProcedureCall = 125;
VisualBasic6Parser.RULE_iCS_S_ProcedureOrArrayCall = 126;
VisualBasic6Parser.RULE_iCS_S_NestedProcedureCall = 127;
VisualBasic6Parser.RULE_iCS_S_MembersCall = 128;
VisualBasic6Parser.RULE_iCS_S_MemberCall = 129;
VisualBasic6Parser.RULE_iCS_S_DictionaryCall = 130;
VisualBasic6Parser.RULE_argsCall = 131;
VisualBasic6Parser.RULE_argCall = 132;
VisualBasic6Parser.RULE_dictionaryCallStmt = 133;
VisualBasic6Parser.RULE_argList = 134;
VisualBasic6Parser.RULE_arg = 135;
VisualBasic6Parser.RULE_argDefaultValue = 136;
VisualBasic6Parser.RULE_subscripts = 137;
VisualBasic6Parser.RULE_subscript_ = 138;
VisualBasic6Parser.RULE_ambiguousIdentifier = 139;
VisualBasic6Parser.RULE_asTypeClause = 140;
VisualBasic6Parser.RULE_baseType = 141;
VisualBasic6Parser.RULE_certainIdentifier = 142;
VisualBasic6Parser.RULE_comparisonOperator = 143;
VisualBasic6Parser.RULE_complexType = 144;
VisualBasic6Parser.RULE_fieldLength = 145;
VisualBasic6Parser.RULE_letterrange = 146;
VisualBasic6Parser.RULE_lineLabel = 147;
VisualBasic6Parser.RULE_literal = 148;
VisualBasic6Parser.RULE_publicPrivateVisibility = 149;
VisualBasic6Parser.RULE_publicPrivateGlobalVisibility = 150;
VisualBasic6Parser.RULE_type_ = 151;
VisualBasic6Parser.RULE_typeHint = 152;
VisualBasic6Parser.RULE_visibility = 153;
VisualBasic6Parser.RULE_ambiguousKeyword = 154;
class StartRuleContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_startRule;
    }
    module() {
        return this.getTypedRuleContext(ModuleContext, 0);
    }
    ;
    EOF() {
        return this.getToken(VisualBasic6Parser.EOF, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterStartRule(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitStartRule(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitStartRule(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ModuleContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.NEWLINE = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.NEWLINE);
            }
            else {
                return this.getToken(VisualBasic6Parser.NEWLINE, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_module;
    }
    moduleHeader() {
        return this.getTypedRuleContext(ModuleHeaderContext, 0);
    }
    ;
    moduleReferences() {
        return this.getTypedRuleContext(ModuleReferencesContext, 0);
    }
    ;
    controlProperties() {
        return this.getTypedRuleContext(ControlPropertiesContext, 0);
    }
    ;
    moduleConfig() {
        return this.getTypedRuleContext(ModuleConfigContext, 0);
    }
    ;
    moduleAttributes() {
        return this.getTypedRuleContext(ModuleAttributesContext, 0);
    }
    ;
    moduleOptions() {
        return this.getTypedRuleContext(ModuleOptionsContext, 0);
    }
    ;
    moduleBody() {
        return this.getTypedRuleContext(ModuleBodyContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterModule(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitModule(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitModule(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ModuleReferencesContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.moduleReference = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ModuleReferenceContext);
            }
            else {
                return this.getTypedRuleContext(ModuleReferenceContext, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_moduleReferences;
    }
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterModuleReferences(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitModuleReferences(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitModuleReferences(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ModuleReferenceContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.NEWLINE = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.NEWLINE);
            }
            else {
                return this.getToken(VisualBasic6Parser.NEWLINE, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_moduleReference;
    }
    OBJECT() {
        return this.getToken(VisualBasic6Parser.OBJECT, 0);
    }
    ;
    EQ() {
        return this.getToken(VisualBasic6Parser.EQ, 0);
    }
    ;
    moduleReferenceValue() {
        return this.getTypedRuleContext(ModuleReferenceValueContext, 0);
    }
    ;
    SEMICOLON() {
        return this.getToken(VisualBasic6Parser.SEMICOLON, 0);
    }
    ;
    moduleReferenceComponent() {
        return this.getTypedRuleContext(ModuleReferenceComponentContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterModuleReference(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitModuleReference(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitModuleReference(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ModuleReferenceValueContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_moduleReferenceValue;
    }
    STRINGLITERAL() {
        return this.getToken(VisualBasic6Parser.STRINGLITERAL, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterModuleReferenceValue(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitModuleReferenceValue(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitModuleReferenceValue(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ModuleReferenceComponentContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_moduleReferenceComponent;
    }
    STRINGLITERAL() {
        return this.getToken(VisualBasic6Parser.STRINGLITERAL, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterModuleReferenceComponent(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitModuleReferenceComponent(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitModuleReferenceComponent(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ModuleHeaderContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_moduleHeader;
    }
    VERSION() {
        return this.getToken(VisualBasic6Parser.VERSION, 0);
    }
    ;
    DOUBLELITERAL() {
        return this.getToken(VisualBasic6Parser.DOUBLELITERAL, 0);
    }
    ;
    CLASS() {
        return this.getToken(VisualBasic6Parser.CLASS, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterModuleHeader(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitModuleHeader(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitModuleHeader(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ModuleConfigContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.NEWLINE = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.NEWLINE);
            }
            else {
                return this.getToken(VisualBasic6Parser.NEWLINE, i);
            }
        };
        this.moduleConfigElement = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ModuleConfigElementContext);
            }
            else {
                return this.getTypedRuleContext(ModuleConfigElementContext, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_moduleConfig;
    }
    BEGIN() {
        return this.getToken(VisualBasic6Parser.BEGIN, 0);
    }
    ;
    END() {
        return this.getToken(VisualBasic6Parser.END, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterModuleConfig(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitModuleConfig(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitModuleConfig(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ModuleConfigElementContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_moduleConfigElement;
    }
    ambiguousIdentifier() {
        return this.getTypedRuleContext(AmbiguousIdentifierContext, 0);
    }
    ;
    EQ() {
        return this.getToken(VisualBasic6Parser.EQ, 0);
    }
    ;
    literal() {
        return this.getTypedRuleContext(LiteralContext, 0);
    }
    ;
    NEWLINE() {
        return this.getToken(VisualBasic6Parser.NEWLINE, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterModuleConfigElement(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitModuleConfigElement(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitModuleConfigElement(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ModuleAttributesContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.attributeStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(AttributeStmtContext);
            }
            else {
                return this.getTypedRuleContext(AttributeStmtContext, i);
            }
        };
        this.NEWLINE = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.NEWLINE);
            }
            else {
                return this.getToken(VisualBasic6Parser.NEWLINE, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_moduleAttributes;
    }
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterModuleAttributes(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitModuleAttributes(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitModuleAttributes(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ModuleOptionsContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.moduleOption = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ModuleOptionContext);
            }
            else {
                return this.getTypedRuleContext(ModuleOptionContext, i);
            }
        };
        this.NEWLINE = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.NEWLINE);
            }
            else {
                return this.getToken(VisualBasic6Parser.NEWLINE, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_moduleOptions;
    }
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterModuleOptions(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitModuleOptions(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitModuleOptions(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ModuleOptionContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_moduleOption;
    }
    copyFrom(ctx) {
        super.copyFrom(ctx);
    }
}
class OptionExplicitStmtContext extends ModuleOptionContext {
    constructor(parser, ctx) {
        super(parser);
        super.copyFrom(ctx);
    }
    OPTION_EXPLICIT() {
        return this.getToken(VisualBasic6Parser.OPTION_EXPLICIT, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterOptionExplicitStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitOptionExplicitStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitOptionExplicitStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
VisualBasic6Parser.OptionExplicitStmtContext = OptionExplicitStmtContext;
class OptionBaseStmtContext extends ModuleOptionContext {
    constructor(parser, ctx) {
        super(parser);
        super.copyFrom(ctx);
    }
    OPTION_BASE() {
        return this.getToken(VisualBasic6Parser.OPTION_BASE, 0);
    }
    ;
    WS() {
        return this.getToken(VisualBasic6Parser.WS, 0);
    }
    ;
    INTEGERLITERAL() {
        return this.getToken(VisualBasic6Parser.INTEGERLITERAL, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterOptionBaseStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitOptionBaseStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitOptionBaseStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
VisualBasic6Parser.OptionBaseStmtContext = OptionBaseStmtContext;
class OptionPrivateModuleStmtContext extends ModuleOptionContext {
    constructor(parser, ctx) {
        super(parser);
        super.copyFrom(ctx);
    }
    OPTION_PRIVATE_MODULE() {
        return this.getToken(VisualBasic6Parser.OPTION_PRIVATE_MODULE, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterOptionPrivateModuleStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitOptionPrivateModuleStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitOptionPrivateModuleStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
VisualBasic6Parser.OptionPrivateModuleStmtContext = OptionPrivateModuleStmtContext;
class OptionCompareStmtContext extends ModuleOptionContext {
    constructor(parser, ctx) {
        super(parser);
        super.copyFrom(ctx);
    }
    OPTION_COMPARE() {
        return this.getToken(VisualBasic6Parser.OPTION_COMPARE, 0);
    }
    ;
    WS() {
        return this.getToken(VisualBasic6Parser.WS, 0);
    }
    ;
    BINARY() {
        return this.getToken(VisualBasic6Parser.BINARY, 0);
    }
    ;
    TEXT() {
        return this.getToken(VisualBasic6Parser.TEXT, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterOptionCompareStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitOptionCompareStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitOptionCompareStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
VisualBasic6Parser.OptionCompareStmtContext = OptionCompareStmtContext;
class ModuleBodyContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.moduleBodyElement = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ModuleBodyElementContext);
            }
            else {
                return this.getTypedRuleContext(ModuleBodyElementContext, i);
            }
        };
        this.NEWLINE = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.NEWLINE);
            }
            else {
                return this.getToken(VisualBasic6Parser.NEWLINE, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_moduleBody;
    }
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterModuleBody(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitModuleBody(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitModuleBody(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ModuleBodyElementContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_moduleBodyElement;
    }
    moduleBlock() {
        return this.getTypedRuleContext(ModuleBlockContext, 0);
    }
    ;
    moduleOption() {
        return this.getTypedRuleContext(ModuleOptionContext, 0);
    }
    ;
    declareStmt() {
        return this.getTypedRuleContext(DeclareStmtContext, 0);
    }
    ;
    enumerationStmt() {
        return this.getTypedRuleContext(EnumerationStmtContext, 0);
    }
    ;
    eventStmt() {
        return this.getTypedRuleContext(EventStmtContext, 0);
    }
    ;
    functionStmt() {
        return this.getTypedRuleContext(FunctionStmtContext, 0);
    }
    ;
    macroIfThenElseStmt() {
        return this.getTypedRuleContext(MacroIfThenElseStmtContext, 0);
    }
    ;
    propertyGetStmt() {
        return this.getTypedRuleContext(PropertyGetStmtContext, 0);
    }
    ;
    propertySetStmt() {
        return this.getTypedRuleContext(PropertySetStmtContext, 0);
    }
    ;
    propertyLetStmt() {
        return this.getTypedRuleContext(PropertyLetStmtContext, 0);
    }
    ;
    subStmt() {
        return this.getTypedRuleContext(SubStmtContext, 0);
    }
    ;
    typeStmt() {
        return this.getTypedRuleContext(TypeStmtContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterModuleBodyElement(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitModuleBodyElement(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitModuleBodyElement(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ControlPropertiesContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.NEWLINE = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.NEWLINE);
            }
            else {
                return this.getToken(VisualBasic6Parser.NEWLINE, i);
            }
        };
        this.cp_Properties = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(Cp_PropertiesContext);
            }
            else {
                return this.getTypedRuleContext(Cp_PropertiesContext, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_controlProperties;
    }
    BEGIN() {
        return this.getToken(VisualBasic6Parser.BEGIN, 0);
    }
    ;
    cp_ControlType() {
        return this.getTypedRuleContext(Cp_ControlTypeContext, 0);
    }
    ;
    cp_ControlIdentifier() {
        return this.getTypedRuleContext(Cp_ControlIdentifierContext, 0);
    }
    ;
    END() {
        return this.getToken(VisualBasic6Parser.END, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterControlProperties(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitControlProperties(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitControlProperties(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class Cp_PropertiesContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_cp_Properties;
    }
    cp_SingleProperty() {
        return this.getTypedRuleContext(Cp_SinglePropertyContext, 0);
    }
    ;
    cp_NestedProperty() {
        return this.getTypedRuleContext(Cp_NestedPropertyContext, 0);
    }
    ;
    controlProperties() {
        return this.getTypedRuleContext(ControlPropertiesContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterCp_Properties(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitCp_Properties(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitCp_Properties(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class Cp_SinglePropertyContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.NEWLINE = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.NEWLINE);
            }
            else {
                return this.getToken(VisualBasic6Parser.NEWLINE, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_cp_SingleProperty;
    }
    implicitCallStmt_InStmt() {
        return this.getTypedRuleContext(ImplicitCallStmt_InStmtContext, 0);
    }
    ;
    EQ() {
        return this.getToken(VisualBasic6Parser.EQ, 0);
    }
    ;
    cp_PropertyValue() {
        return this.getTypedRuleContext(Cp_PropertyValueContext, 0);
    }
    ;
    DOLLAR() {
        return this.getToken(VisualBasic6Parser.DOLLAR, 0);
    }
    ;
    FRX_OFFSET() {
        return this.getToken(VisualBasic6Parser.FRX_OFFSET, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterCp_SingleProperty(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitCp_SingleProperty(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitCp_SingleProperty(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class Cp_PropertyNameContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.ambiguousIdentifier = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(AmbiguousIdentifierContext);
            }
            else {
                return this.getTypedRuleContext(AmbiguousIdentifierContext, i);
            }
        };
        this.DOT = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.DOT);
            }
            else {
                return this.getToken(VisualBasic6Parser.DOT, i);
            }
        };
        this.LPAREN = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.LPAREN);
            }
            else {
                return this.getToken(VisualBasic6Parser.LPAREN, i);
            }
        };
        this.literal = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(LiteralContext);
            }
            else {
                return this.getTypedRuleContext(LiteralContext, i);
            }
        };
        this.RPAREN = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.RPAREN);
            }
            else {
                return this.getToken(VisualBasic6Parser.RPAREN, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_cp_PropertyName;
    }
    OBJECT() {
        return this.getToken(VisualBasic6Parser.OBJECT, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterCp_PropertyName(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitCp_PropertyName(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitCp_PropertyName(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class Cp_PropertyValueContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_cp_PropertyValue;
    }
    literal() {
        return this.getTypedRuleContext(LiteralContext, 0);
    }
    ;
    POW() {
        return this.getToken(VisualBasic6Parser.POW, 0);
    }
    ;
    ambiguousIdentifier() {
        return this.getTypedRuleContext(AmbiguousIdentifierContext, 0);
    }
    ;
    DOLLAR() {
        return this.getToken(VisualBasic6Parser.DOLLAR, 0);
    }
    ;
    LBRACE() {
        return this.getToken(VisualBasic6Parser.LBRACE, 0);
    }
    ;
    RBRACE() {
        return this.getToken(VisualBasic6Parser.RBRACE, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterCp_PropertyValue(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitCp_PropertyValue(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitCp_PropertyValue(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class Cp_NestedPropertyContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.NEWLINE = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.NEWLINE);
            }
            else {
                return this.getToken(VisualBasic6Parser.NEWLINE, i);
            }
        };
        this.cp_Properties = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(Cp_PropertiesContext);
            }
            else {
                return this.getTypedRuleContext(Cp_PropertiesContext, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_cp_NestedProperty;
    }
    BEGINPROPERTY() {
        return this.getToken(VisualBasic6Parser.BEGINPROPERTY, 0);
    }
    ;
    ambiguousIdentifier() {
        return this.getTypedRuleContext(AmbiguousIdentifierContext, 0);
    }
    ;
    ENDPROPERTY() {
        return this.getToken(VisualBasic6Parser.ENDPROPERTY, 0);
    }
    ;
    LPAREN() {
        return this.getToken(VisualBasic6Parser.LPAREN, 0);
    }
    ;
    INTEGERLITERAL() {
        return this.getToken(VisualBasic6Parser.INTEGERLITERAL, 0);
    }
    ;
    RPAREN() {
        return this.getToken(VisualBasic6Parser.RPAREN, 0);
    }
    ;
    GUID() {
        return this.getToken(VisualBasic6Parser.GUID, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterCp_NestedProperty(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitCp_NestedProperty(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitCp_NestedProperty(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class Cp_ControlTypeContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_cp_ControlType;
    }
    complexType() {
        return this.getTypedRuleContext(ComplexTypeContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterCp_ControlType(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitCp_ControlType(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitCp_ControlType(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class Cp_ControlIdentifierContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_cp_ControlIdentifier;
    }
    ambiguousIdentifier() {
        return this.getTypedRuleContext(AmbiguousIdentifierContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterCp_ControlIdentifier(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitCp_ControlIdentifier(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitCp_ControlIdentifier(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ModuleBlockContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_moduleBlock;
    }
    block() {
        return this.getTypedRuleContext(BlockContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterModuleBlock(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitModuleBlock(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitModuleBlock(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class AttributeStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.literal = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(LiteralContext);
            }
            else {
                return this.getTypedRuleContext(LiteralContext, i);
            }
        };
        this.COMMA = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.COMMA);
            }
            else {
                return this.getToken(VisualBasic6Parser.COMMA, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_attributeStmt;
    }
    ATTRIBUTE() {
        return this.getToken(VisualBasic6Parser.ATTRIBUTE, 0);
    }
    ;
    implicitCallStmt_InStmt() {
        return this.getTypedRuleContext(ImplicitCallStmt_InStmtContext, 0);
    }
    ;
    EQ() {
        return this.getToken(VisualBasic6Parser.EQ, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterAttributeStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitAttributeStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitAttributeStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class BlockContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.blockStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(BlockStmtContext);
            }
            else {
                return this.getTypedRuleContext(BlockStmtContext, i);
            }
        };
        this.NEWLINE = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.NEWLINE);
            }
            else {
                return this.getToken(VisualBasic6Parser.NEWLINE, i);
            }
        };
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_block;
    }
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterBlock(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitBlock(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitBlock(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class BlockStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_blockStmt;
    }
    appActivateStmt() {
        return this.getTypedRuleContext(AppActivateStmtContext, 0);
    }
    ;
    attributeStmt() {
        return this.getTypedRuleContext(AttributeStmtContext, 0);
    }
    ;
    beepStmt() {
        return this.getTypedRuleContext(BeepStmtContext, 0);
    }
    ;
    chDirStmt() {
        return this.getTypedRuleContext(ChDirStmtContext, 0);
    }
    ;
    chDriveStmt() {
        return this.getTypedRuleContext(ChDriveStmtContext, 0);
    }
    ;
    closeStmt() {
        return this.getTypedRuleContext(CloseStmtContext, 0);
    }
    ;
    constStmt() {
        return this.getTypedRuleContext(ConstStmtContext, 0);
    }
    ;
    dateStmt() {
        return this.getTypedRuleContext(DateStmtContext, 0);
    }
    ;
    deleteSettingStmt() {
        return this.getTypedRuleContext(DeleteSettingStmtContext, 0);
    }
    ;
    deftypeStmt() {
        return this.getTypedRuleContext(DeftypeStmtContext, 0);
    }
    ;
    doLoopStmt() {
        return this.getTypedRuleContext(DoLoopStmtContext, 0);
    }
    ;
    endStmt() {
        return this.getTypedRuleContext(EndStmtContext, 0);
    }
    ;
    eraseStmt() {
        return this.getTypedRuleContext(EraseStmtContext, 0);
    }
    ;
    errorStmt() {
        return this.getTypedRuleContext(ErrorStmtContext, 0);
    }
    ;
    exitStmt() {
        return this.getTypedRuleContext(ExitStmtContext, 0);
    }
    ;
    explicitCallStmt() {
        return this.getTypedRuleContext(ExplicitCallStmtContext, 0);
    }
    ;
    filecopyStmt() {
        return this.getTypedRuleContext(FilecopyStmtContext, 0);
    }
    ;
    forEachStmt() {
        return this.getTypedRuleContext(ForEachStmtContext, 0);
    }
    ;
    forNextStmt() {
        return this.getTypedRuleContext(ForNextStmtContext, 0);
    }
    ;
    getStmt() {
        return this.getTypedRuleContext(GetStmtContext, 0);
    }
    ;
    goSubStmt() {
        return this.getTypedRuleContext(GoSubStmtContext, 0);
    }
    ;
    goToStmt() {
        return this.getTypedRuleContext(GoToStmtContext, 0);
    }
    ;
    ifThenElseStmt() {
        return this.getTypedRuleContext(IfThenElseStmtContext, 0);
    }
    ;
    implementsStmt() {
        return this.getTypedRuleContext(ImplementsStmtContext, 0);
    }
    ;
    inputStmt() {
        return this.getTypedRuleContext(InputStmtContext, 0);
    }
    ;
    killStmt() {
        return this.getTypedRuleContext(KillStmtContext, 0);
    }
    ;
    letStmt() {
        return this.getTypedRuleContext(LetStmtContext, 0);
    }
    ;
    lineInputStmt() {
        return this.getTypedRuleContext(LineInputStmtContext, 0);
    }
    ;
    lineLabel() {
        return this.getTypedRuleContext(LineLabelContext, 0);
    }
    ;
    loadStmt() {
        return this.getTypedRuleContext(LoadStmtContext, 0);
    }
    ;
    lockStmt() {
        return this.getTypedRuleContext(LockStmtContext, 0);
    }
    ;
    lsetStmt() {
        return this.getTypedRuleContext(LsetStmtContext, 0);
    }
    ;
    macroIfThenElseStmt() {
        return this.getTypedRuleContext(MacroIfThenElseStmtContext, 0);
    }
    ;
    midStmt() {
        return this.getTypedRuleContext(MidStmtContext, 0);
    }
    ;
    mkdirStmt() {
        return this.getTypedRuleContext(MkdirStmtContext, 0);
    }
    ;
    nameStmt() {
        return this.getTypedRuleContext(NameStmtContext, 0);
    }
    ;
    onErrorStmt() {
        return this.getTypedRuleContext(OnErrorStmtContext, 0);
    }
    ;
    onGoToStmt() {
        return this.getTypedRuleContext(OnGoToStmtContext, 0);
    }
    ;
    onGoSubStmt() {
        return this.getTypedRuleContext(OnGoSubStmtContext, 0);
    }
    ;
    openStmt() {
        return this.getTypedRuleContext(OpenStmtContext, 0);
    }
    ;
    printStmt() {
        return this.getTypedRuleContext(PrintStmtContext, 0);
    }
    ;
    putStmt() {
        return this.getTypedRuleContext(PutStmtContext, 0);
    }
    ;
    raiseEventStmt() {
        return this.getTypedRuleContext(RaiseEventStmtContext, 0);
    }
    ;
    randomizeStmt() {
        return this.getTypedRuleContext(RandomizeStmtContext, 0);
    }
    ;
    redimStmt() {
        return this.getTypedRuleContext(RedimStmtContext, 0);
    }
    ;
    resetStmt() {
        return this.getTypedRuleContext(ResetStmtContext, 0);
    }
    ;
    resumeStmt() {
        return this.getTypedRuleContext(ResumeStmtContext, 0);
    }
    ;
    returnStmt() {
        return this.getTypedRuleContext(ReturnStmtContext, 0);
    }
    ;
    rmdirStmt() {
        return this.getTypedRuleContext(RmdirStmtContext, 0);
    }
    ;
    rsetStmt() {
        return this.getTypedRuleContext(RsetStmtContext, 0);
    }
    ;
    savepictureStmt() {
        return this.getTypedRuleContext(SavepictureStmtContext, 0);
    }
    ;
    saveSettingStmt() {
        return this.getTypedRuleContext(SaveSettingStmtContext, 0);
    }
    ;
    seekStmt() {
        return this.getTypedRuleContext(SeekStmtContext, 0);
    }
    ;
    selectCaseStmt() {
        return this.getTypedRuleContext(SelectCaseStmtContext, 0);
    }
    ;
    sendkeysStmt() {
        return this.getTypedRuleContext(SendkeysStmtContext, 0);
    }
    ;
    setattrStmt() {
        return this.getTypedRuleContext(SetattrStmtContext, 0);
    }
    ;
    setStmt() {
        return this.getTypedRuleContext(SetStmtContext, 0);
    }
    ;
    stopStmt() {
        return this.getTypedRuleContext(StopStmtContext, 0);
    }
    ;
    timeStmt() {
        return this.getTypedRuleContext(TimeStmtContext, 0);
    }
    ;
    unloadStmt() {
        return this.getTypedRuleContext(UnloadStmtContext, 0);
    }
    ;
    unlockStmt() {
        return this.getTypedRuleContext(UnlockStmtContext, 0);
    }
    ;
    variableStmt() {
        return this.getTypedRuleContext(VariableStmtContext, 0);
    }
    ;
    whileWendStmt() {
        return this.getTypedRuleContext(WhileWendStmtContext, 0);
    }
    ;
    widthStmt() {
        return this.getTypedRuleContext(WidthStmtContext, 0);
    }
    ;
    withStmt() {
        return this.getTypedRuleContext(WithStmtContext, 0);
    }
    ;
    writeStmt() {
        return this.getTypedRuleContext(WriteStmtContext, 0);
    }
    ;
    implicitCallStmt_InBlock() {
        return this.getTypedRuleContext(ImplicitCallStmt_InBlockContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterBlockStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitBlockStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitBlockStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class AppActivateStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.valueStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ValueStmtContext);
            }
            else {
                return this.getTypedRuleContext(ValueStmtContext, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_appActivateStmt;
    }
    APPACTIVATE() {
        return this.getToken(VisualBasic6Parser.APPACTIVATE, 0);
    }
    ;
    COMMA() {
        return this.getToken(VisualBasic6Parser.COMMA, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterAppActivateStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitAppActivateStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitAppActivateStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class BeepStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_beepStmt;
    }
    BEEP() {
        return this.getToken(VisualBasic6Parser.BEEP, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterBeepStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitBeepStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitBeepStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ChDirStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_chDirStmt;
    }
    CHDIR() {
        return this.getToken(VisualBasic6Parser.CHDIR, 0);
    }
    ;
    WS() {
        return this.getToken(VisualBasic6Parser.WS, 0);
    }
    ;
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterChDirStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitChDirStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitChDirStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ChDriveStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_chDriveStmt;
    }
    CHDRIVE() {
        return this.getToken(VisualBasic6Parser.CHDRIVE, 0);
    }
    ;
    WS() {
        return this.getToken(VisualBasic6Parser.WS, 0);
    }
    ;
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterChDriveStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitChDriveStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitChDriveStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class CloseStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.valueStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ValueStmtContext);
            }
            else {
                return this.getTypedRuleContext(ValueStmtContext, i);
            }
        };
        this.COMMA = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.COMMA);
            }
            else {
                return this.getToken(VisualBasic6Parser.COMMA, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_closeStmt;
    }
    CLOSE() {
        return this.getToken(VisualBasic6Parser.CLOSE, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterCloseStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitCloseStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitCloseStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ConstStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.constSubStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ConstSubStmtContext);
            }
            else {
                return this.getTypedRuleContext(ConstSubStmtContext, i);
            }
        };
        this.COMMA = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.COMMA);
            }
            else {
                return this.getToken(VisualBasic6Parser.COMMA, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_constStmt;
    }
    CONST() {
        return this.getToken(VisualBasic6Parser.CONST, 0);
    }
    ;
    publicPrivateGlobalVisibility() {
        return this.getTypedRuleContext(PublicPrivateGlobalVisibilityContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterConstStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitConstStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitConstStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ConstSubStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_constSubStmt;
    }
    ambiguousIdentifier() {
        return this.getTypedRuleContext(AmbiguousIdentifierContext, 0);
    }
    ;
    EQ() {
        return this.getToken(VisualBasic6Parser.EQ, 0);
    }
    ;
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    typeHint() {
        return this.getTypedRuleContext(TypeHintContext, 0);
    }
    ;
    asTypeClause() {
        return this.getTypedRuleContext(AsTypeClauseContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterConstSubStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitConstSubStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitConstSubStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class DateStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_dateStmt;
    }
    DATE() {
        return this.getToken(VisualBasic6Parser.DATE, 0);
    }
    ;
    EQ() {
        return this.getToken(VisualBasic6Parser.EQ, 0);
    }
    ;
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterDateStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitDateStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitDateStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class DeclareStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.STRINGLITERAL = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.STRINGLITERAL);
            }
            else {
                return this.getToken(VisualBasic6Parser.STRINGLITERAL, i);
            }
        };
        this.typeHint = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(TypeHintContext);
            }
            else {
                return this.getTypedRuleContext(TypeHintContext, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_declareStmt;
    }
    DECLARE() {
        return this.getToken(VisualBasic6Parser.DECLARE, 0);
    }
    ;
    ambiguousIdentifier() {
        return this.getTypedRuleContext(AmbiguousIdentifierContext, 0);
    }
    ;
    LIB() {
        return this.getToken(VisualBasic6Parser.LIB, 0);
    }
    ;
    FUNCTION() {
        return this.getToken(VisualBasic6Parser.FUNCTION, 0);
    }
    ;
    SUB() {
        return this.getToken(VisualBasic6Parser.SUB, 0);
    }
    ;
    visibility() {
        return this.getTypedRuleContext(VisibilityContext, 0);
    }
    ;
    ALIAS() {
        return this.getToken(VisualBasic6Parser.ALIAS, 0);
    }
    ;
    argList() {
        return this.getTypedRuleContext(ArgListContext, 0);
    }
    ;
    asTypeClause() {
        return this.getTypedRuleContext(AsTypeClauseContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterDeclareStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitDeclareStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitDeclareStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class DeftypeStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.letterrange = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(LetterrangeContext);
            }
            else {
                return this.getTypedRuleContext(LetterrangeContext, i);
            }
        };
        this.COMMA = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.COMMA);
            }
            else {
                return this.getToken(VisualBasic6Parser.COMMA, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_deftypeStmt;
    }
    DEFBOOL() {
        return this.getToken(VisualBasic6Parser.DEFBOOL, 0);
    }
    ;
    DEFBYTE() {
        return this.getToken(VisualBasic6Parser.DEFBYTE, 0);
    }
    ;
    DEFINT() {
        return this.getToken(VisualBasic6Parser.DEFINT, 0);
    }
    ;
    DEFLNG() {
        return this.getToken(VisualBasic6Parser.DEFLNG, 0);
    }
    ;
    DEFCUR() {
        return this.getToken(VisualBasic6Parser.DEFCUR, 0);
    }
    ;
    DEFSNG() {
        return this.getToken(VisualBasic6Parser.DEFSNG, 0);
    }
    ;
    DEFDBL() {
        return this.getToken(VisualBasic6Parser.DEFDBL, 0);
    }
    ;
    DEFDEC() {
        return this.getToken(VisualBasic6Parser.DEFDEC, 0);
    }
    ;
    DEFDATE() {
        return this.getToken(VisualBasic6Parser.DEFDATE, 0);
    }
    ;
    DEFSTR() {
        return this.getToken(VisualBasic6Parser.DEFSTR, 0);
    }
    ;
    DEFOBJ() {
        return this.getToken(VisualBasic6Parser.DEFOBJ, 0);
    }
    ;
    DEFVAR() {
        return this.getToken(VisualBasic6Parser.DEFVAR, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterDeftypeStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitDeftypeStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitDeftypeStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class DeleteSettingStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.valueStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ValueStmtContext);
            }
            else {
                return this.getTypedRuleContext(ValueStmtContext, i);
            }
        };
        this.COMMA = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.COMMA);
            }
            else {
                return this.getToken(VisualBasic6Parser.COMMA, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_deleteSettingStmt;
    }
    DELETESETTING() {
        return this.getToken(VisualBasic6Parser.DELETESETTING, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterDeleteSettingStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitDeleteSettingStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitDeleteSettingStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class DoLoopStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.NEWLINE = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.NEWLINE);
            }
            else {
                return this.getToken(VisualBasic6Parser.NEWLINE, i);
            }
        };
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_doLoopStmt;
    }
    DO() {
        return this.getToken(VisualBasic6Parser.DO, 0);
    }
    ;
    LOOP() {
        return this.getToken(VisualBasic6Parser.LOOP, 0);
    }
    ;
    block() {
        return this.getTypedRuleContext(BlockContext, 0);
    }
    ;
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    WHILE() {
        return this.getToken(VisualBasic6Parser.WHILE, 0);
    }
    ;
    UNTIL() {
        return this.getToken(VisualBasic6Parser.UNTIL, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterDoLoopStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitDoLoopStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitDoLoopStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class EndStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_endStmt;
    }
    END() {
        return this.getToken(VisualBasic6Parser.END, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterEndStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitEndStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitEndStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class EnumerationStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.NEWLINE = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.NEWLINE);
            }
            else {
                return this.getToken(VisualBasic6Parser.NEWLINE, i);
            }
        };
        this.enumerationStmt_Constant = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(EnumerationStmt_ConstantContext);
            }
            else {
                return this.getTypedRuleContext(EnumerationStmt_ConstantContext, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_enumerationStmt;
    }
    ENUM() {
        return this.getToken(VisualBasic6Parser.ENUM, 0);
    }
    ;
    ambiguousIdentifier() {
        return this.getTypedRuleContext(AmbiguousIdentifierContext, 0);
    }
    ;
    END_ENUM() {
        return this.getToken(VisualBasic6Parser.END_ENUM, 0);
    }
    ;
    publicPrivateVisibility() {
        return this.getTypedRuleContext(PublicPrivateVisibilityContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterEnumerationStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitEnumerationStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitEnumerationStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class EnumerationStmt_ConstantContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.NEWLINE = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.NEWLINE);
            }
            else {
                return this.getToken(VisualBasic6Parser.NEWLINE, i);
            }
        };
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_enumerationStmt_Constant;
    }
    ambiguousIdentifier() {
        return this.getTypedRuleContext(AmbiguousIdentifierContext, 0);
    }
    ;
    EQ() {
        return this.getToken(VisualBasic6Parser.EQ, 0);
    }
    ;
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterEnumerationStmt_Constant(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitEnumerationStmt_Constant(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitEnumerationStmt_Constant(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class EraseStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.valueStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ValueStmtContext);
            }
            else {
                return this.getTypedRuleContext(ValueStmtContext, i);
            }
        };
        this.COMMA = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.COMMA);
            }
            else {
                return this.getToken(VisualBasic6Parser.COMMA, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_eraseStmt;
    }
    ERASE() {
        return this.getToken(VisualBasic6Parser.ERASE, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterEraseStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitEraseStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitEraseStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ErrorStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_errorStmt;
    }
    ERROR() {
        return this.getToken(VisualBasic6Parser.ERROR, 0);
    }
    ;
    WS() {
        return this.getToken(VisualBasic6Parser.WS, 0);
    }
    ;
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterErrorStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitErrorStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitErrorStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class EventStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_eventStmt;
    }
    EVENT() {
        return this.getToken(VisualBasic6Parser.EVENT, 0);
    }
    ;
    ambiguousIdentifier() {
        return this.getTypedRuleContext(AmbiguousIdentifierContext, 0);
    }
    ;
    argList() {
        return this.getTypedRuleContext(ArgListContext, 0);
    }
    ;
    visibility() {
        return this.getTypedRuleContext(VisibilityContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterEventStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitEventStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitEventStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ExitStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_exitStmt;
    }
    EXIT_DO() {
        return this.getToken(VisualBasic6Parser.EXIT_DO, 0);
    }
    ;
    EXIT_FOR() {
        return this.getToken(VisualBasic6Parser.EXIT_FOR, 0);
    }
    ;
    EXIT_FUNCTION() {
        return this.getToken(VisualBasic6Parser.EXIT_FUNCTION, 0);
    }
    ;
    EXIT_PROPERTY() {
        return this.getToken(VisualBasic6Parser.EXIT_PROPERTY, 0);
    }
    ;
    EXIT_SUB() {
        return this.getToken(VisualBasic6Parser.EXIT_SUB, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterExitStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitExitStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitExitStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class FilecopyStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.valueStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ValueStmtContext);
            }
            else {
                return this.getTypedRuleContext(ValueStmtContext, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_filecopyStmt;
    }
    FILECOPY() {
        return this.getToken(VisualBasic6Parser.FILECOPY, 0);
    }
    ;
    COMMA() {
        return this.getToken(VisualBasic6Parser.COMMA, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterFilecopyStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitFilecopyStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitFilecopyStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ForEachStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.ambiguousIdentifier = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(AmbiguousIdentifierContext);
            }
            else {
                return this.getTypedRuleContext(AmbiguousIdentifierContext, i);
            }
        };
        this.NEWLINE = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.NEWLINE);
            }
            else {
                return this.getToken(VisualBasic6Parser.NEWLINE, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_forEachStmt;
    }
    FOR() {
        return this.getToken(VisualBasic6Parser.FOR, 0);
    }
    ;
    EACH() {
        return this.getToken(VisualBasic6Parser.EACH, 0);
    }
    ;
    IN() {
        return this.getToken(VisualBasic6Parser.IN, 0);
    }
    ;
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    NEXT() {
        return this.getToken(VisualBasic6Parser.NEXT, 0);
    }
    ;
    typeHint() {
        return this.getTypedRuleContext(TypeHintContext, 0);
    }
    ;
    block() {
        return this.getTypedRuleContext(BlockContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterForEachStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitForEachStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitForEachStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ForNextStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.valueStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ValueStmtContext);
            }
            else {
                return this.getTypedRuleContext(ValueStmtContext, i);
            }
        };
        this.typeHint = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(TypeHintContext);
            }
            else {
                return this.getTypedRuleContext(TypeHintContext, i);
            }
        };
        this.NEWLINE = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.NEWLINE);
            }
            else {
                return this.getToken(VisualBasic6Parser.NEWLINE, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_forNextStmt;
    }
    FOR() {
        return this.getToken(VisualBasic6Parser.FOR, 0);
    }
    ;
    iCS_S_VariableOrProcedureCall() {
        return this.getTypedRuleContext(ICS_S_VariableOrProcedureCallContext, 0);
    }
    ;
    EQ() {
        return this.getToken(VisualBasic6Parser.EQ, 0);
    }
    ;
    TO() {
        return this.getToken(VisualBasic6Parser.TO, 0);
    }
    ;
    NEXT() {
        return this.getToken(VisualBasic6Parser.NEXT, 0);
    }
    ;
    asTypeClause() {
        return this.getTypedRuleContext(AsTypeClauseContext, 0);
    }
    ;
    STEP() {
        return this.getToken(VisualBasic6Parser.STEP, 0);
    }
    ;
    block() {
        return this.getTypedRuleContext(BlockContext, 0);
    }
    ;
    ambiguousIdentifier() {
        return this.getTypedRuleContext(AmbiguousIdentifierContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterForNextStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitForNextStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitForNextStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class FunctionStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.NEWLINE = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.NEWLINE);
            }
            else {
                return this.getToken(VisualBasic6Parser.NEWLINE, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_functionStmt;
    }
    FUNCTION() {
        return this.getToken(VisualBasic6Parser.FUNCTION, 0);
    }
    ;
    ambiguousIdentifier() {
        return this.getTypedRuleContext(AmbiguousIdentifierContext, 0);
    }
    ;
    END_FUNCTION() {
        return this.getToken(VisualBasic6Parser.END_FUNCTION, 0);
    }
    ;
    visibility() {
        return this.getTypedRuleContext(VisibilityContext, 0);
    }
    ;
    STATIC() {
        return this.getToken(VisualBasic6Parser.STATIC, 0);
    }
    ;
    argList() {
        return this.getTypedRuleContext(ArgListContext, 0);
    }
    ;
    asTypeClause() {
        return this.getTypedRuleContext(AsTypeClauseContext, 0);
    }
    ;
    block() {
        return this.getTypedRuleContext(BlockContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterFunctionStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitFunctionStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitFunctionStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class GetStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.valueStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ValueStmtContext);
            }
            else {
                return this.getTypedRuleContext(ValueStmtContext, i);
            }
        };
        this.COMMA = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.COMMA);
            }
            else {
                return this.getToken(VisualBasic6Parser.COMMA, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_getStmt;
    }
    GET() {
        return this.getToken(VisualBasic6Parser.GET, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterGetStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitGetStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitGetStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class GoSubStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_goSubStmt;
    }
    GOSUB() {
        return this.getToken(VisualBasic6Parser.GOSUB, 0);
    }
    ;
    WS() {
        return this.getToken(VisualBasic6Parser.WS, 0);
    }
    ;
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterGoSubStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitGoSubStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitGoSubStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class GoToStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_goToStmt;
    }
    GOTO() {
        return this.getToken(VisualBasic6Parser.GOTO, 0);
    }
    ;
    WS() {
        return this.getToken(VisualBasic6Parser.WS, 0);
    }
    ;
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterGoToStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitGoToStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitGoToStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class IfThenElseStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_ifThenElseStmt;
    }
    copyFrom(ctx) {
        super.copyFrom(ctx);
    }
}
class BlockIfThenElseContext extends IfThenElseStmtContext {
    constructor(parser, ctx) {
        super(parser);
        this.ifElseIfBlockStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(IfElseIfBlockStmtContext);
            }
            else {
                return this.getTypedRuleContext(IfElseIfBlockStmtContext, i);
            }
        };
        super.copyFrom(ctx);
    }
    ifBlockStmt() {
        return this.getTypedRuleContext(IfBlockStmtContext, 0);
    }
    ;
    END_IF() {
        return this.getToken(VisualBasic6Parser.END_IF, 0);
    }
    ;
    ifElseBlockStmt() {
        return this.getTypedRuleContext(IfElseBlockStmtContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterBlockIfThenElse(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitBlockIfThenElse(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitBlockIfThenElse(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
VisualBasic6Parser.BlockIfThenElseContext = BlockIfThenElseContext;
class InlineIfThenElseContext extends IfThenElseStmtContext {
    constructor(parser, ctx) {
        super(parser);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.blockStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(BlockStmtContext);
            }
            else {
                return this.getTypedRuleContext(BlockStmtContext, i);
            }
        };
        super.copyFrom(ctx);
    }
    IF() {
        return this.getToken(VisualBasic6Parser.IF, 0);
    }
    ;
    ifConditionStmt() {
        return this.getTypedRuleContext(IfConditionStmtContext, 0);
    }
    ;
    THEN() {
        return this.getToken(VisualBasic6Parser.THEN, 0);
    }
    ;
    ELSE() {
        return this.getToken(VisualBasic6Parser.ELSE, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterInlineIfThenElse(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitInlineIfThenElse(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitInlineIfThenElse(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
VisualBasic6Parser.InlineIfThenElseContext = InlineIfThenElseContext;
class IfBlockStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.NEWLINE = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.NEWLINE);
            }
            else {
                return this.getToken(VisualBasic6Parser.NEWLINE, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_ifBlockStmt;
    }
    IF() {
        return this.getToken(VisualBasic6Parser.IF, 0);
    }
    ;
    ifConditionStmt() {
        return this.getTypedRuleContext(IfConditionStmtContext, 0);
    }
    ;
    THEN() {
        return this.getToken(VisualBasic6Parser.THEN, 0);
    }
    ;
    block() {
        return this.getTypedRuleContext(BlockContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterIfBlockStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitIfBlockStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitIfBlockStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class IfConditionStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_ifConditionStmt;
    }
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterIfConditionStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitIfConditionStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitIfConditionStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class IfElseIfBlockStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.NEWLINE = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.NEWLINE);
            }
            else {
                return this.getToken(VisualBasic6Parser.NEWLINE, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_ifElseIfBlockStmt;
    }
    ELSEIF() {
        return this.getToken(VisualBasic6Parser.ELSEIF, 0);
    }
    ;
    ifConditionStmt() {
        return this.getTypedRuleContext(IfConditionStmtContext, 0);
    }
    ;
    THEN() {
        return this.getToken(VisualBasic6Parser.THEN, 0);
    }
    ;
    block() {
        return this.getTypedRuleContext(BlockContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterIfElseIfBlockStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitIfElseIfBlockStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitIfElseIfBlockStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class IfElseBlockStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.NEWLINE = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.NEWLINE);
            }
            else {
                return this.getToken(VisualBasic6Parser.NEWLINE, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_ifElseBlockStmt;
    }
    ELSE() {
        return this.getToken(VisualBasic6Parser.ELSE, 0);
    }
    ;
    block() {
        return this.getTypedRuleContext(BlockContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterIfElseBlockStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitIfElseBlockStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitIfElseBlockStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ImplementsStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_implementsStmt;
    }
    IMPLEMENTS() {
        return this.getToken(VisualBasic6Parser.IMPLEMENTS, 0);
    }
    ;
    WS() {
        return this.getToken(VisualBasic6Parser.WS, 0);
    }
    ;
    ambiguousIdentifier() {
        return this.getTypedRuleContext(AmbiguousIdentifierContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterImplementsStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitImplementsStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitImplementsStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class InputStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.valueStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ValueStmtContext);
            }
            else {
                return this.getTypedRuleContext(ValueStmtContext, i);
            }
        };
        this.COMMA = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.COMMA);
            }
            else {
                return this.getToken(VisualBasic6Parser.COMMA, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_inputStmt;
    }
    INPUT() {
        return this.getToken(VisualBasic6Parser.INPUT, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterInputStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitInputStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitInputStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class KillStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_killStmt;
    }
    KILL() {
        return this.getToken(VisualBasic6Parser.KILL, 0);
    }
    ;
    WS() {
        return this.getToken(VisualBasic6Parser.WS, 0);
    }
    ;
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterKillStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitKillStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitKillStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class LetStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_letStmt;
    }
    implicitCallStmt_InStmt() {
        return this.getTypedRuleContext(ImplicitCallStmt_InStmtContext, 0);
    }
    ;
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    EQ() {
        return this.getToken(VisualBasic6Parser.EQ, 0);
    }
    ;
    PLUS_EQ() {
        return this.getToken(VisualBasic6Parser.PLUS_EQ, 0);
    }
    ;
    MINUS_EQ() {
        return this.getToken(VisualBasic6Parser.MINUS_EQ, 0);
    }
    ;
    LET() {
        return this.getToken(VisualBasic6Parser.LET, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterLetStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitLetStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitLetStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class LineInputStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.valueStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ValueStmtContext);
            }
            else {
                return this.getTypedRuleContext(ValueStmtContext, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_lineInputStmt;
    }
    LINE_INPUT() {
        return this.getToken(VisualBasic6Parser.LINE_INPUT, 0);
    }
    ;
    COMMA() {
        return this.getToken(VisualBasic6Parser.COMMA, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterLineInputStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitLineInputStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitLineInputStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class LoadStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_loadStmt;
    }
    LOAD() {
        return this.getToken(VisualBasic6Parser.LOAD, 0);
    }
    ;
    WS() {
        return this.getToken(VisualBasic6Parser.WS, 0);
    }
    ;
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterLoadStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitLoadStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitLoadStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class LockStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.valueStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ValueStmtContext);
            }
            else {
                return this.getTypedRuleContext(ValueStmtContext, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_lockStmt;
    }
    LOCK() {
        return this.getToken(VisualBasic6Parser.LOCK, 0);
    }
    ;
    COMMA() {
        return this.getToken(VisualBasic6Parser.COMMA, 0);
    }
    ;
    TO() {
        return this.getToken(VisualBasic6Parser.TO, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterLockStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitLockStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitLockStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class LsetStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_lsetStmt;
    }
    LSET() {
        return this.getToken(VisualBasic6Parser.LSET, 0);
    }
    ;
    implicitCallStmt_InStmt() {
        return this.getTypedRuleContext(ImplicitCallStmt_InStmtContext, 0);
    }
    ;
    EQ() {
        return this.getToken(VisualBasic6Parser.EQ, 0);
    }
    ;
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterLsetStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitLsetStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitLsetStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class MacroIfThenElseStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.macroElseIfBlockStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(MacroElseIfBlockStmtContext);
            }
            else {
                return this.getTypedRuleContext(MacroElseIfBlockStmtContext, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_macroIfThenElseStmt;
    }
    macroIfBlockStmt() {
        return this.getTypedRuleContext(MacroIfBlockStmtContext, 0);
    }
    ;
    MACRO_END_IF() {
        return this.getToken(VisualBasic6Parser.MACRO_END_IF, 0);
    }
    ;
    macroElseBlockStmt() {
        return this.getTypedRuleContext(MacroElseBlockStmtContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterMacroIfThenElseStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitMacroIfThenElseStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitMacroIfThenElseStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class MacroIfBlockStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.NEWLINE = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.NEWLINE);
            }
            else {
                return this.getToken(VisualBasic6Parser.NEWLINE, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_macroIfBlockStmt;
    }
    MACRO_IF() {
        return this.getToken(VisualBasic6Parser.MACRO_IF, 0);
    }
    ;
    ifConditionStmt() {
        return this.getTypedRuleContext(IfConditionStmtContext, 0);
    }
    ;
    THEN() {
        return this.getToken(VisualBasic6Parser.THEN, 0);
    }
    ;
    moduleBody() {
        return this.getTypedRuleContext(ModuleBodyContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterMacroIfBlockStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitMacroIfBlockStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitMacroIfBlockStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class MacroElseIfBlockStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.NEWLINE = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.NEWLINE);
            }
            else {
                return this.getToken(VisualBasic6Parser.NEWLINE, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_macroElseIfBlockStmt;
    }
    MACRO_ELSEIF() {
        return this.getToken(VisualBasic6Parser.MACRO_ELSEIF, 0);
    }
    ;
    ifConditionStmt() {
        return this.getTypedRuleContext(IfConditionStmtContext, 0);
    }
    ;
    THEN() {
        return this.getToken(VisualBasic6Parser.THEN, 0);
    }
    ;
    moduleBody() {
        return this.getTypedRuleContext(ModuleBodyContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterMacroElseIfBlockStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitMacroElseIfBlockStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitMacroElseIfBlockStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class MacroElseBlockStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.NEWLINE = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.NEWLINE);
            }
            else {
                return this.getToken(VisualBasic6Parser.NEWLINE, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_macroElseBlockStmt;
    }
    MACRO_ELSE() {
        return this.getToken(VisualBasic6Parser.MACRO_ELSE, 0);
    }
    ;
    moduleBody() {
        return this.getTypedRuleContext(ModuleBodyContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterMacroElseBlockStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitMacroElseBlockStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitMacroElseBlockStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class MidStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_midStmt;
    }
    MID() {
        return this.getToken(VisualBasic6Parser.MID, 0);
    }
    ;
    LPAREN() {
        return this.getToken(VisualBasic6Parser.LPAREN, 0);
    }
    ;
    argsCall() {
        return this.getTypedRuleContext(ArgsCallContext, 0);
    }
    ;
    RPAREN() {
        return this.getToken(VisualBasic6Parser.RPAREN, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterMidStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitMidStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitMidStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class MkdirStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_mkdirStmt;
    }
    MKDIR() {
        return this.getToken(VisualBasic6Parser.MKDIR, 0);
    }
    ;
    WS() {
        return this.getToken(VisualBasic6Parser.WS, 0);
    }
    ;
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterMkdirStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitMkdirStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitMkdirStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class NameStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.valueStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ValueStmtContext);
            }
            else {
                return this.getTypedRuleContext(ValueStmtContext, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_nameStmt;
    }
    NAME() {
        return this.getToken(VisualBasic6Parser.NAME, 0);
    }
    ;
    AS() {
        return this.getToken(VisualBasic6Parser.AS, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterNameStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitNameStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitNameStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class OnErrorStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_onErrorStmt;
    }
    ON_ERROR() {
        return this.getToken(VisualBasic6Parser.ON_ERROR, 0);
    }
    ;
    ON_LOCAL_ERROR() {
        return this.getToken(VisualBasic6Parser.ON_LOCAL_ERROR, 0);
    }
    ;
    GOTO() {
        return this.getToken(VisualBasic6Parser.GOTO, 0);
    }
    ;
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    RESUME() {
        return this.getToken(VisualBasic6Parser.RESUME, 0);
    }
    ;
    NEXT() {
        return this.getToken(VisualBasic6Parser.NEXT, 0);
    }
    ;
    COLON() {
        return this.getToken(VisualBasic6Parser.COLON, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterOnErrorStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitOnErrorStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitOnErrorStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class OnGoToStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.valueStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ValueStmtContext);
            }
            else {
                return this.getTypedRuleContext(ValueStmtContext, i);
            }
        };
        this.COMMA = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.COMMA);
            }
            else {
                return this.getToken(VisualBasic6Parser.COMMA, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_onGoToStmt;
    }
    ON() {
        return this.getToken(VisualBasic6Parser.ON, 0);
    }
    ;
    GOTO() {
        return this.getToken(VisualBasic6Parser.GOTO, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterOnGoToStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitOnGoToStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitOnGoToStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class OnGoSubStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.valueStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ValueStmtContext);
            }
            else {
                return this.getTypedRuleContext(ValueStmtContext, i);
            }
        };
        this.COMMA = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.COMMA);
            }
            else {
                return this.getToken(VisualBasic6Parser.COMMA, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_onGoSubStmt;
    }
    ON() {
        return this.getToken(VisualBasic6Parser.ON, 0);
    }
    ;
    GOSUB() {
        return this.getToken(VisualBasic6Parser.GOSUB, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterOnGoSubStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitOnGoSubStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitOnGoSubStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class OpenStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.valueStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ValueStmtContext);
            }
            else {
                return this.getTypedRuleContext(ValueStmtContext, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_openStmt;
    }
    OPEN() {
        return this.getToken(VisualBasic6Parser.OPEN, 0);
    }
    ;
    FOR() {
        return this.getToken(VisualBasic6Parser.FOR, 0);
    }
    ;
    AS() {
        return this.getToken(VisualBasic6Parser.AS, 0);
    }
    ;
    APPEND() {
        return this.getToken(VisualBasic6Parser.APPEND, 0);
    }
    ;
    BINARY() {
        return this.getToken(VisualBasic6Parser.BINARY, 0);
    }
    ;
    INPUT() {
        return this.getToken(VisualBasic6Parser.INPUT, 0);
    }
    ;
    OUTPUT() {
        return this.getToken(VisualBasic6Parser.OUTPUT, 0);
    }
    ;
    RANDOM() {
        return this.getToken(VisualBasic6Parser.RANDOM, 0);
    }
    ;
    ACCESS() {
        return this.getToken(VisualBasic6Parser.ACCESS, 0);
    }
    ;
    LEN() {
        return this.getToken(VisualBasic6Parser.LEN, 0);
    }
    ;
    EQ() {
        return this.getToken(VisualBasic6Parser.EQ, 0);
    }
    ;
    READ() {
        return this.getToken(VisualBasic6Parser.READ, 0);
    }
    ;
    WRITE() {
        return this.getToken(VisualBasic6Parser.WRITE, 0);
    }
    ;
    READ_WRITE() {
        return this.getToken(VisualBasic6Parser.READ_WRITE, 0);
    }
    ;
    SHARED() {
        return this.getToken(VisualBasic6Parser.SHARED, 0);
    }
    ;
    LOCK_READ() {
        return this.getToken(VisualBasic6Parser.LOCK_READ, 0);
    }
    ;
    LOCK_WRITE() {
        return this.getToken(VisualBasic6Parser.LOCK_WRITE, 0);
    }
    ;
    LOCK_READ_WRITE() {
        return this.getToken(VisualBasic6Parser.LOCK_READ_WRITE, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterOpenStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitOpenStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitOpenStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class OutputListContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.outputList_Expression = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(OutputList_ExpressionContext);
            }
            else {
                return this.getTypedRuleContext(OutputList_ExpressionContext, i);
            }
        };
        this.SEMICOLON = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.SEMICOLON);
            }
            else {
                return this.getToken(VisualBasic6Parser.SEMICOLON, i);
            }
        };
        this.COMMA = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.COMMA);
            }
            else {
                return this.getToken(VisualBasic6Parser.COMMA, i);
            }
        };
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_outputList;
    }
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterOutputList(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitOutputList(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitOutputList(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class OutputList_ExpressionContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_outputList_Expression;
    }
    SPC() {
        return this.getToken(VisualBasic6Parser.SPC, 0);
    }
    ;
    TAB() {
        return this.getToken(VisualBasic6Parser.TAB, 0);
    }
    ;
    LPAREN() {
        return this.getToken(VisualBasic6Parser.LPAREN, 0);
    }
    ;
    argsCall() {
        return this.getTypedRuleContext(ArgsCallContext, 0);
    }
    ;
    RPAREN() {
        return this.getToken(VisualBasic6Parser.RPAREN, 0);
    }
    ;
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterOutputList_Expression(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitOutputList_Expression(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitOutputList_Expression(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class PrintStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_printStmt;
    }
    PRINT() {
        return this.getToken(VisualBasic6Parser.PRINT, 0);
    }
    ;
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    COMMA() {
        return this.getToken(VisualBasic6Parser.COMMA, 0);
    }
    ;
    outputList() {
        return this.getTypedRuleContext(OutputListContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterPrintStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitPrintStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitPrintStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class PropertyGetStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.NEWLINE = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.NEWLINE);
            }
            else {
                return this.getToken(VisualBasic6Parser.NEWLINE, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_propertyGetStmt;
    }
    PROPERTY_GET() {
        return this.getToken(VisualBasic6Parser.PROPERTY_GET, 0);
    }
    ;
    ambiguousIdentifier() {
        return this.getTypedRuleContext(AmbiguousIdentifierContext, 0);
    }
    ;
    END_PROPERTY() {
        return this.getToken(VisualBasic6Parser.END_PROPERTY, 0);
    }
    ;
    visibility() {
        return this.getTypedRuleContext(VisibilityContext, 0);
    }
    ;
    STATIC() {
        return this.getToken(VisualBasic6Parser.STATIC, 0);
    }
    ;
    typeHint() {
        return this.getTypedRuleContext(TypeHintContext, 0);
    }
    ;
    argList() {
        return this.getTypedRuleContext(ArgListContext, 0);
    }
    ;
    asTypeClause() {
        return this.getTypedRuleContext(AsTypeClauseContext, 0);
    }
    ;
    block() {
        return this.getTypedRuleContext(BlockContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterPropertyGetStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitPropertyGetStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitPropertyGetStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class PropertySetStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.NEWLINE = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.NEWLINE);
            }
            else {
                return this.getToken(VisualBasic6Parser.NEWLINE, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_propertySetStmt;
    }
    PROPERTY_SET() {
        return this.getToken(VisualBasic6Parser.PROPERTY_SET, 0);
    }
    ;
    ambiguousIdentifier() {
        return this.getTypedRuleContext(AmbiguousIdentifierContext, 0);
    }
    ;
    END_PROPERTY() {
        return this.getToken(VisualBasic6Parser.END_PROPERTY, 0);
    }
    ;
    visibility() {
        return this.getTypedRuleContext(VisibilityContext, 0);
    }
    ;
    STATIC() {
        return this.getToken(VisualBasic6Parser.STATIC, 0);
    }
    ;
    argList() {
        return this.getTypedRuleContext(ArgListContext, 0);
    }
    ;
    block() {
        return this.getTypedRuleContext(BlockContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterPropertySetStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitPropertySetStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitPropertySetStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class PropertyLetStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.NEWLINE = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.NEWLINE);
            }
            else {
                return this.getToken(VisualBasic6Parser.NEWLINE, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_propertyLetStmt;
    }
    PROPERTY_LET() {
        return this.getToken(VisualBasic6Parser.PROPERTY_LET, 0);
    }
    ;
    ambiguousIdentifier() {
        return this.getTypedRuleContext(AmbiguousIdentifierContext, 0);
    }
    ;
    END_PROPERTY() {
        return this.getToken(VisualBasic6Parser.END_PROPERTY, 0);
    }
    ;
    visibility() {
        return this.getTypedRuleContext(VisibilityContext, 0);
    }
    ;
    STATIC() {
        return this.getToken(VisualBasic6Parser.STATIC, 0);
    }
    ;
    argList() {
        return this.getTypedRuleContext(ArgListContext, 0);
    }
    ;
    block() {
        return this.getTypedRuleContext(BlockContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterPropertyLetStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitPropertyLetStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitPropertyLetStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class PutStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.valueStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ValueStmtContext);
            }
            else {
                return this.getTypedRuleContext(ValueStmtContext, i);
            }
        };
        this.COMMA = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.COMMA);
            }
            else {
                return this.getToken(VisualBasic6Parser.COMMA, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_putStmt;
    }
    PUT() {
        return this.getToken(VisualBasic6Parser.PUT, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterPutStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitPutStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitPutStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class RaiseEventStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_raiseEventStmt;
    }
    RAISEEVENT() {
        return this.getToken(VisualBasic6Parser.RAISEEVENT, 0);
    }
    ;
    ambiguousIdentifier() {
        return this.getTypedRuleContext(AmbiguousIdentifierContext, 0);
    }
    ;
    LPAREN() {
        return this.getToken(VisualBasic6Parser.LPAREN, 0);
    }
    ;
    RPAREN() {
        return this.getToken(VisualBasic6Parser.RPAREN, 0);
    }
    ;
    argsCall() {
        return this.getTypedRuleContext(ArgsCallContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterRaiseEventStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitRaiseEventStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitRaiseEventStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class RandomizeStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_randomizeStmt;
    }
    RANDOMIZE() {
        return this.getToken(VisualBasic6Parser.RANDOMIZE, 0);
    }
    ;
    WS() {
        return this.getToken(VisualBasic6Parser.WS, 0);
    }
    ;
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterRandomizeStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitRandomizeStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitRandomizeStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class RedimStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.redimSubStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(RedimSubStmtContext);
            }
            else {
                return this.getTypedRuleContext(RedimSubStmtContext, i);
            }
        };
        this.COMMA = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.COMMA);
            }
            else {
                return this.getToken(VisualBasic6Parser.COMMA, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_redimStmt;
    }
    REDIM() {
        return this.getToken(VisualBasic6Parser.REDIM, 0);
    }
    ;
    PRESERVE() {
        return this.getToken(VisualBasic6Parser.PRESERVE, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterRedimStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitRedimStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitRedimStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class RedimSubStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_redimSubStmt;
    }
    implicitCallStmt_InStmt() {
        return this.getTypedRuleContext(ImplicitCallStmt_InStmtContext, 0);
    }
    ;
    LPAREN() {
        return this.getToken(VisualBasic6Parser.LPAREN, 0);
    }
    ;
    subscripts() {
        return this.getTypedRuleContext(SubscriptsContext, 0);
    }
    ;
    RPAREN() {
        return this.getToken(VisualBasic6Parser.RPAREN, 0);
    }
    ;
    asTypeClause() {
        return this.getTypedRuleContext(AsTypeClauseContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterRedimSubStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitRedimSubStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitRedimSubStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ResetStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_resetStmt;
    }
    RESET() {
        return this.getToken(VisualBasic6Parser.RESET, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterResetStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitResetStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitResetStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ResumeStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_resumeStmt;
    }
    RESUME() {
        return this.getToken(VisualBasic6Parser.RESUME, 0);
    }
    ;
    WS() {
        return this.getToken(VisualBasic6Parser.WS, 0);
    }
    ;
    NEXT() {
        return this.getToken(VisualBasic6Parser.NEXT, 0);
    }
    ;
    ambiguousIdentifier() {
        return this.getTypedRuleContext(AmbiguousIdentifierContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterResumeStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitResumeStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitResumeStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ReturnStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_returnStmt;
    }
    RETURN() {
        return this.getToken(VisualBasic6Parser.RETURN, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterReturnStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitReturnStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitReturnStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class RmdirStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_rmdirStmt;
    }
    RMDIR() {
        return this.getToken(VisualBasic6Parser.RMDIR, 0);
    }
    ;
    WS() {
        return this.getToken(VisualBasic6Parser.WS, 0);
    }
    ;
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterRmdirStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitRmdirStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitRmdirStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class RsetStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_rsetStmt;
    }
    RSET() {
        return this.getToken(VisualBasic6Parser.RSET, 0);
    }
    ;
    implicitCallStmt_InStmt() {
        return this.getTypedRuleContext(ImplicitCallStmt_InStmtContext, 0);
    }
    ;
    EQ() {
        return this.getToken(VisualBasic6Parser.EQ, 0);
    }
    ;
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterRsetStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitRsetStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitRsetStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class SavepictureStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.valueStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ValueStmtContext);
            }
            else {
                return this.getTypedRuleContext(ValueStmtContext, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_savepictureStmt;
    }
    SAVEPICTURE() {
        return this.getToken(VisualBasic6Parser.SAVEPICTURE, 0);
    }
    ;
    COMMA() {
        return this.getToken(VisualBasic6Parser.COMMA, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterSavepictureStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitSavepictureStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitSavepictureStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class SaveSettingStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.valueStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ValueStmtContext);
            }
            else {
                return this.getTypedRuleContext(ValueStmtContext, i);
            }
        };
        this.COMMA = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.COMMA);
            }
            else {
                return this.getToken(VisualBasic6Parser.COMMA, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_saveSettingStmt;
    }
    SAVESETTING() {
        return this.getToken(VisualBasic6Parser.SAVESETTING, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterSaveSettingStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitSaveSettingStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitSaveSettingStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class SeekStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.valueStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ValueStmtContext);
            }
            else {
                return this.getTypedRuleContext(ValueStmtContext, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_seekStmt;
    }
    SEEK() {
        return this.getToken(VisualBasic6Parser.SEEK, 0);
    }
    ;
    COMMA() {
        return this.getToken(VisualBasic6Parser.COMMA, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterSeekStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitSeekStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitSeekStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class SelectCaseStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.NEWLINE = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.NEWLINE);
            }
            else {
                return this.getToken(VisualBasic6Parser.NEWLINE, i);
            }
        };
        this.sC_Case = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(SC_CaseContext);
            }
            else {
                return this.getTypedRuleContext(SC_CaseContext, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_selectCaseStmt;
    }
    SELECT() {
        return this.getToken(VisualBasic6Parser.SELECT, 0);
    }
    ;
    CASE() {
        return this.getToken(VisualBasic6Parser.CASE, 0);
    }
    ;
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    END_SELECT() {
        return this.getToken(VisualBasic6Parser.END_SELECT, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterSelectCaseStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitSelectCaseStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitSelectCaseStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class SC_CaseContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.NEWLINE = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.NEWLINE);
            }
            else {
                return this.getToken(VisualBasic6Parser.NEWLINE, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_sC_Case;
    }
    CASE() {
        return this.getToken(VisualBasic6Parser.CASE, 0);
    }
    ;
    sC_Cond() {
        return this.getTypedRuleContext(SC_CondContext, 0);
    }
    ;
    block() {
        return this.getTypedRuleContext(BlockContext, 0);
    }
    ;
    COLON() {
        return this.getToken(VisualBasic6Parser.COLON, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterSC_Case(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitSC_Case(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitSC_Case(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class SC_CondContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_sC_Cond;
    }
    copyFrom(ctx) {
        super.copyFrom(ctx);
    }
}
class CaseCondExprContext extends SC_CondContext {
    constructor(parser, ctx) {
        super(parser);
        this.sC_CondExpr = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(SC_CondExprContext);
            }
            else {
                return this.getTypedRuleContext(SC_CondExprContext, i);
            }
        };
        this.COMMA = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.COMMA);
            }
            else {
                return this.getToken(VisualBasic6Parser.COMMA, i);
            }
        };
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        super.copyFrom(ctx);
    }
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterCaseCondExpr(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitCaseCondExpr(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitCaseCondExpr(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
VisualBasic6Parser.CaseCondExprContext = CaseCondExprContext;
class CaseCondElseContext extends SC_CondContext {
    constructor(parser, ctx) {
        super(parser);
        super.copyFrom(ctx);
    }
    ELSE() {
        return this.getToken(VisualBasic6Parser.ELSE, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterCaseCondElse(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitCaseCondElse(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitCaseCondElse(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
VisualBasic6Parser.CaseCondElseContext = CaseCondElseContext;
class SC_CondExprContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_sC_CondExpr;
    }
    copyFrom(ctx) {
        super.copyFrom(ctx);
    }
}
class CaseCondExprValueContext extends SC_CondExprContext {
    constructor(parser, ctx) {
        super(parser);
        super.copyFrom(ctx);
    }
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterCaseCondExprValue(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitCaseCondExprValue(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitCaseCondExprValue(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
VisualBasic6Parser.CaseCondExprValueContext = CaseCondExprValueContext;
class CaseCondExprIsContext extends SC_CondExprContext {
    constructor(parser, ctx) {
        super(parser);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        super.copyFrom(ctx);
    }
    IS() {
        return this.getToken(VisualBasic6Parser.IS, 0);
    }
    ;
    comparisonOperator() {
        return this.getTypedRuleContext(ComparisonOperatorContext, 0);
    }
    ;
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterCaseCondExprIs(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitCaseCondExprIs(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitCaseCondExprIs(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
VisualBasic6Parser.CaseCondExprIsContext = CaseCondExprIsContext;
class CaseCondExprToContext extends SC_CondExprContext {
    constructor(parser, ctx) {
        super(parser);
        this.valueStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ValueStmtContext);
            }
            else {
                return this.getTypedRuleContext(ValueStmtContext, i);
            }
        };
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        super.copyFrom(ctx);
    }
    TO() {
        return this.getToken(VisualBasic6Parser.TO, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterCaseCondExprTo(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitCaseCondExprTo(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitCaseCondExprTo(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
VisualBasic6Parser.CaseCondExprToContext = CaseCondExprToContext;
class SendkeysStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.valueStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ValueStmtContext);
            }
            else {
                return this.getTypedRuleContext(ValueStmtContext, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_sendkeysStmt;
    }
    SENDKEYS() {
        return this.getToken(VisualBasic6Parser.SENDKEYS, 0);
    }
    ;
    COMMA() {
        return this.getToken(VisualBasic6Parser.COMMA, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterSendkeysStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitSendkeysStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitSendkeysStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class SetattrStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.valueStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ValueStmtContext);
            }
            else {
                return this.getTypedRuleContext(ValueStmtContext, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_setattrStmt;
    }
    SETATTR() {
        return this.getToken(VisualBasic6Parser.SETATTR, 0);
    }
    ;
    COMMA() {
        return this.getToken(VisualBasic6Parser.COMMA, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterSetattrStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitSetattrStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitSetattrStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class SetStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_setStmt;
    }
    SET() {
        return this.getToken(VisualBasic6Parser.SET, 0);
    }
    ;
    implicitCallStmt_InStmt() {
        return this.getTypedRuleContext(ImplicitCallStmt_InStmtContext, 0);
    }
    ;
    EQ() {
        return this.getToken(VisualBasic6Parser.EQ, 0);
    }
    ;
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterSetStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitSetStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitSetStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class StopStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_stopStmt;
    }
    STOP() {
        return this.getToken(VisualBasic6Parser.STOP, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterStopStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitStopStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitStopStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class SubStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.NEWLINE = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.NEWLINE);
            }
            else {
                return this.getToken(VisualBasic6Parser.NEWLINE, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_subStmt;
    }
    SUB() {
        return this.getToken(VisualBasic6Parser.SUB, 0);
    }
    ;
    ambiguousIdentifier() {
        return this.getTypedRuleContext(AmbiguousIdentifierContext, 0);
    }
    ;
    END_SUB() {
        return this.getToken(VisualBasic6Parser.END_SUB, 0);
    }
    ;
    visibility() {
        return this.getTypedRuleContext(VisibilityContext, 0);
    }
    ;
    STATIC() {
        return this.getToken(VisualBasic6Parser.STATIC, 0);
    }
    ;
    argList() {
        return this.getTypedRuleContext(ArgListContext, 0);
    }
    ;
    block() {
        return this.getTypedRuleContext(BlockContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterSubStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitSubStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitSubStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class TimeStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_timeStmt;
    }
    TIME() {
        return this.getToken(VisualBasic6Parser.TIME, 0);
    }
    ;
    EQ() {
        return this.getToken(VisualBasic6Parser.EQ, 0);
    }
    ;
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterTimeStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitTimeStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitTimeStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class TypeStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.NEWLINE = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.NEWLINE);
            }
            else {
                return this.getToken(VisualBasic6Parser.NEWLINE, i);
            }
        };
        this.typeStmt_Element = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(TypeStmt_ElementContext);
            }
            else {
                return this.getTypedRuleContext(TypeStmt_ElementContext, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_typeStmt;
    }
    TYPE() {
        return this.getToken(VisualBasic6Parser.TYPE, 0);
    }
    ;
    ambiguousIdentifier() {
        return this.getTypedRuleContext(AmbiguousIdentifierContext, 0);
    }
    ;
    END_TYPE() {
        return this.getToken(VisualBasic6Parser.END_TYPE, 0);
    }
    ;
    visibility() {
        return this.getTypedRuleContext(VisibilityContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterTypeStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitTypeStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitTypeStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class TypeStmt_ElementContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.NEWLINE = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.NEWLINE);
            }
            else {
                return this.getToken(VisualBasic6Parser.NEWLINE, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_typeStmt_Element;
    }
    ambiguousIdentifier() {
        return this.getTypedRuleContext(AmbiguousIdentifierContext, 0);
    }
    ;
    LPAREN() {
        return this.getToken(VisualBasic6Parser.LPAREN, 0);
    }
    ;
    RPAREN() {
        return this.getToken(VisualBasic6Parser.RPAREN, 0);
    }
    ;
    asTypeClause() {
        return this.getTypedRuleContext(AsTypeClauseContext, 0);
    }
    ;
    subscripts() {
        return this.getTypedRuleContext(SubscriptsContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterTypeStmt_Element(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitTypeStmt_Element(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitTypeStmt_Element(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class TypeOfStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_typeOfStmt;
    }
    TYPEOF() {
        return this.getToken(VisualBasic6Parser.TYPEOF, 0);
    }
    ;
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    IS() {
        return this.getToken(VisualBasic6Parser.IS, 0);
    }
    ;
    type_() {
        return this.getTypedRuleContext(Type_Context, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterTypeOfStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitTypeOfStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitTypeOfStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class UnloadStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_unloadStmt;
    }
    UNLOAD() {
        return this.getToken(VisualBasic6Parser.UNLOAD, 0);
    }
    ;
    WS() {
        return this.getToken(VisualBasic6Parser.WS, 0);
    }
    ;
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterUnloadStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitUnloadStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitUnloadStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class UnlockStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.valueStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ValueStmtContext);
            }
            else {
                return this.getTypedRuleContext(ValueStmtContext, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_unlockStmt;
    }
    UNLOCK() {
        return this.getToken(VisualBasic6Parser.UNLOCK, 0);
    }
    ;
    COMMA() {
        return this.getToken(VisualBasic6Parser.COMMA, 0);
    }
    ;
    TO() {
        return this.getToken(VisualBasic6Parser.TO, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterUnlockStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitUnlockStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitUnlockStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ValueStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_valueStmt;
    }
    copyFrom(ctx) {
        super.copyFrom(ctx);
    }
}
class VsAssignContext extends ValueStmtContext {
    constructor(parser, ctx) {
        super(parser);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        super.copyFrom(ctx);
    }
    implicitCallStmt_InStmt() {
        return this.getTypedRuleContext(ImplicitCallStmt_InStmtContext, 0);
    }
    ;
    ASSIGN() {
        return this.getToken(VisualBasic6Parser.ASSIGN, 0);
    }
    ;
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterVsAssign(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitVsAssign(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitVsAssign(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
VisualBasic6Parser.VsAssignContext = VsAssignContext;
class VsNotContext extends ValueStmtContext {
    constructor(parser, ctx) {
        super(parser);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        super.copyFrom(ctx);
    }
    NOT() {
        return this.getToken(VisualBasic6Parser.NOT, 0);
    }
    ;
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    LPAREN() {
        return this.getToken(VisualBasic6Parser.LPAREN, 0);
    }
    ;
    RPAREN() {
        return this.getToken(VisualBasic6Parser.RPAREN, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterVsNot(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitVsNot(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitVsNot(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
VisualBasic6Parser.VsNotContext = VsNotContext;
class VsStructContext extends ValueStmtContext {
    constructor(parser, ctx) {
        super(parser);
        this.valueStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ValueStmtContext);
            }
            else {
                return this.getTypedRuleContext(ValueStmtContext, i);
            }
        };
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.COMMA = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.COMMA);
            }
            else {
                return this.getToken(VisualBasic6Parser.COMMA, i);
            }
        };
        super.copyFrom(ctx);
    }
    LPAREN() {
        return this.getToken(VisualBasic6Parser.LPAREN, 0);
    }
    ;
    RPAREN() {
        return this.getToken(VisualBasic6Parser.RPAREN, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterVsStruct(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitVsStruct(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitVsStruct(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
VisualBasic6Parser.VsStructContext = VsStructContext;
class VsMultDivContext extends ValueStmtContext {
    constructor(parser, ctx) {
        super(parser);
        this.valueStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ValueStmtContext);
            }
            else {
                return this.getTypedRuleContext(ValueStmtContext, i);
            }
        };
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        super.copyFrom(ctx);
    }
    MULT() {
        return this.getToken(VisualBasic6Parser.MULT, 0);
    }
    ;
    DIV() {
        return this.getToken(VisualBasic6Parser.DIV, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterVsMultDiv(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitVsMultDiv(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitVsMultDiv(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
VisualBasic6Parser.VsMultDivContext = VsMultDivContext;
class VsTypeOfContext extends ValueStmtContext {
    constructor(parser, ctx) {
        super(parser);
        super.copyFrom(ctx);
    }
    typeOfStmt() {
        return this.getTypedRuleContext(TypeOfStmtContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterVsTypeOf(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitVsTypeOf(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitVsTypeOf(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
VisualBasic6Parser.VsTypeOfContext = VsTypeOfContext;
class VsICSContext extends ValueStmtContext {
    constructor(parser, ctx) {
        super(parser);
        super.copyFrom(ctx);
    }
    implicitCallStmt_InStmt() {
        return this.getTypedRuleContext(ImplicitCallStmt_InStmtContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterVsICS(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitVsICS(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitVsICS(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
VisualBasic6Parser.VsICSContext = VsICSContext;
class VsXorContext extends ValueStmtContext {
    constructor(parser, ctx) {
        super(parser);
        this.valueStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ValueStmtContext);
            }
            else {
                return this.getTypedRuleContext(ValueStmtContext, i);
            }
        };
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        super.copyFrom(ctx);
    }
    XOR() {
        return this.getToken(VisualBasic6Parser.XOR, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterVsXor(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitVsXor(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitVsXor(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
VisualBasic6Parser.VsXorContext = VsXorContext;
class VsAddSubContext extends ValueStmtContext {
    constructor(parser, ctx) {
        super(parser);
        this.valueStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ValueStmtContext);
            }
            else {
                return this.getTypedRuleContext(ValueStmtContext, i);
            }
        };
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        super.copyFrom(ctx);
    }
    PLUS() {
        return this.getToken(VisualBasic6Parser.PLUS, 0);
    }
    ;
    MINUS() {
        return this.getToken(VisualBasic6Parser.MINUS, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterVsAddSub(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitVsAddSub(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitVsAddSub(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
VisualBasic6Parser.VsAddSubContext = VsAddSubContext;
class VsAndContext extends ValueStmtContext {
    constructor(parser, ctx) {
        super(parser);
        this.valueStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ValueStmtContext);
            }
            else {
                return this.getTypedRuleContext(ValueStmtContext, i);
            }
        };
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        super.copyFrom(ctx);
    }
    AND() {
        return this.getToken(VisualBasic6Parser.AND, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterVsAnd(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitVsAnd(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitVsAnd(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
VisualBasic6Parser.VsAndContext = VsAndContext;
class VsPowContext extends ValueStmtContext {
    constructor(parser, ctx) {
        super(parser);
        this.valueStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ValueStmtContext);
            }
            else {
                return this.getTypedRuleContext(ValueStmtContext, i);
            }
        };
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        super.copyFrom(ctx);
    }
    POW() {
        return this.getToken(VisualBasic6Parser.POW, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterVsPow(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitVsPow(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitVsPow(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
VisualBasic6Parser.VsPowContext = VsPowContext;
class VsModContext extends ValueStmtContext {
    constructor(parser, ctx) {
        super(parser);
        this.valueStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ValueStmtContext);
            }
            else {
                return this.getTypedRuleContext(ValueStmtContext, i);
            }
        };
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        super.copyFrom(ctx);
    }
    MOD() {
        return this.getToken(VisualBasic6Parser.MOD, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterVsMod(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitVsMod(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitVsMod(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
VisualBasic6Parser.VsModContext = VsModContext;
class VsAmpContext extends ValueStmtContext {
    constructor(parser, ctx) {
        super(parser);
        this.valueStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ValueStmtContext);
            }
            else {
                return this.getTypedRuleContext(ValueStmtContext, i);
            }
        };
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        super.copyFrom(ctx);
    }
    AMPERSAND() {
        return this.getToken(VisualBasic6Parser.AMPERSAND, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterVsAmp(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitVsAmp(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitVsAmp(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
VisualBasic6Parser.VsAmpContext = VsAmpContext;
class VsAddressOfContext extends ValueStmtContext {
    constructor(parser, ctx) {
        super(parser);
        super.copyFrom(ctx);
    }
    ADDRESSOF() {
        return this.getToken(VisualBasic6Parser.ADDRESSOF, 0);
    }
    ;
    WS() {
        return this.getToken(VisualBasic6Parser.WS, 0);
    }
    ;
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterVsAddressOf(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitVsAddressOf(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitVsAddressOf(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
VisualBasic6Parser.VsAddressOfContext = VsAddressOfContext;
class VsNewContext extends ValueStmtContext {
    constructor(parser, ctx) {
        super(parser);
        super.copyFrom(ctx);
    }
    NEW() {
        return this.getToken(VisualBasic6Parser.NEW, 0);
    }
    ;
    WS() {
        return this.getToken(VisualBasic6Parser.WS, 0);
    }
    ;
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterVsNew(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitVsNew(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitVsNew(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
VisualBasic6Parser.VsNewContext = VsNewContext;
class VsPlusMinusContext extends ValueStmtContext {
    constructor(parser, ctx) {
        super(parser);
        super.copyFrom(ctx);
    }
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    PLUS() {
        return this.getToken(VisualBasic6Parser.PLUS, 0);
    }
    ;
    MINUS() {
        return this.getToken(VisualBasic6Parser.MINUS, 0);
    }
    ;
    WS() {
        return this.getToken(VisualBasic6Parser.WS, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterVsPlusMinus(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitVsPlusMinus(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitVsPlusMinus(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
VisualBasic6Parser.VsPlusMinusContext = VsPlusMinusContext;
class VsIDivContext extends ValueStmtContext {
    constructor(parser, ctx) {
        super(parser);
        this.valueStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ValueStmtContext);
            }
            else {
                return this.getTypedRuleContext(ValueStmtContext, i);
            }
        };
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        super.copyFrom(ctx);
    }
    IDIV() {
        return this.getToken(VisualBasic6Parser.IDIV, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterVsIDiv(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitVsIDiv(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitVsIDiv(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
VisualBasic6Parser.VsIDivContext = VsIDivContext;
class VsOrContext extends ValueStmtContext {
    constructor(parser, ctx) {
        super(parser);
        this.valueStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ValueStmtContext);
            }
            else {
                return this.getTypedRuleContext(ValueStmtContext, i);
            }
        };
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        super.copyFrom(ctx);
    }
    OR() {
        return this.getToken(VisualBasic6Parser.OR, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterVsOr(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitVsOr(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitVsOr(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
VisualBasic6Parser.VsOrContext = VsOrContext;
class VsLiteralContext extends ValueStmtContext {
    constructor(parser, ctx) {
        super(parser);
        super.copyFrom(ctx);
    }
    literal() {
        return this.getTypedRuleContext(LiteralContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterVsLiteral(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitVsLiteral(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitVsLiteral(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
VisualBasic6Parser.VsLiteralContext = VsLiteralContext;
class VsEqvContext extends ValueStmtContext {
    constructor(parser, ctx) {
        super(parser);
        this.valueStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ValueStmtContext);
            }
            else {
                return this.getTypedRuleContext(ValueStmtContext, i);
            }
        };
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        super.copyFrom(ctx);
    }
    EQV() {
        return this.getToken(VisualBasic6Parser.EQV, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterVsEqv(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitVsEqv(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitVsEqv(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
VisualBasic6Parser.VsEqvContext = VsEqvContext;
class VsImpContext extends ValueStmtContext {
    constructor(parser, ctx) {
        super(parser);
        this.valueStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ValueStmtContext);
            }
            else {
                return this.getTypedRuleContext(ValueStmtContext, i);
            }
        };
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        super.copyFrom(ctx);
    }
    IMP() {
        return this.getToken(VisualBasic6Parser.IMP, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterVsImp(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitVsImp(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitVsImp(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
VisualBasic6Parser.VsImpContext = VsImpContext;
class VsCompContext extends ValueStmtContext {
    constructor(parser, ctx) {
        super(parser);
        this.valueStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ValueStmtContext);
            }
            else {
                return this.getTypedRuleContext(ValueStmtContext, i);
            }
        };
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        super.copyFrom(ctx);
    }
    EQ() {
        return this.getToken(VisualBasic6Parser.EQ, 0);
    }
    ;
    NEQ() {
        return this.getToken(VisualBasic6Parser.NEQ, 0);
    }
    ;
    LT() {
        return this.getToken(VisualBasic6Parser.LT, 0);
    }
    ;
    GT() {
        return this.getToken(VisualBasic6Parser.GT, 0);
    }
    ;
    LEQ() {
        return this.getToken(VisualBasic6Parser.LEQ, 0);
    }
    ;
    GEQ() {
        return this.getToken(VisualBasic6Parser.GEQ, 0);
    }
    ;
    LIKE() {
        return this.getToken(VisualBasic6Parser.LIKE, 0);
    }
    ;
    IS() {
        return this.getToken(VisualBasic6Parser.IS, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterVsComp(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitVsComp(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitVsComp(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
VisualBasic6Parser.VsCompContext = VsCompContext;
class VsMidContext extends ValueStmtContext {
    constructor(parser, ctx) {
        super(parser);
        super.copyFrom(ctx);
    }
    midStmt() {
        return this.getTypedRuleContext(MidStmtContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterVsMid(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitVsMid(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitVsMid(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
VisualBasic6Parser.VsMidContext = VsMidContext;
class VariableStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_variableStmt;
    }
    variableListStmt() {
        return this.getTypedRuleContext(VariableListStmtContext, 0);
    }
    ;
    DIM() {
        return this.getToken(VisualBasic6Parser.DIM, 0);
    }
    ;
    STATIC() {
        return this.getToken(VisualBasic6Parser.STATIC, 0);
    }
    ;
    visibility() {
        return this.getTypedRuleContext(VisibilityContext, 0);
    }
    ;
    WITHEVENTS() {
        return this.getToken(VisualBasic6Parser.WITHEVENTS, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterVariableStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitVariableStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitVariableStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class VariableListStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.variableSubStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(VariableSubStmtContext);
            }
            else {
                return this.getTypedRuleContext(VariableSubStmtContext, i);
            }
        };
        this.COMMA = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.COMMA);
            }
            else {
                return this.getToken(VisualBasic6Parser.COMMA, i);
            }
        };
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_variableListStmt;
    }
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterVariableListStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitVariableListStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitVariableListStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class VariableSubStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_variableSubStmt;
    }
    ambiguousIdentifier() {
        return this.getTypedRuleContext(AmbiguousIdentifierContext, 0);
    }
    ;
    typeHint() {
        return this.getTypedRuleContext(TypeHintContext, 0);
    }
    ;
    LPAREN() {
        return this.getToken(VisualBasic6Parser.LPAREN, 0);
    }
    ;
    RPAREN() {
        return this.getToken(VisualBasic6Parser.RPAREN, 0);
    }
    ;
    asTypeClause() {
        return this.getTypedRuleContext(AsTypeClauseContext, 0);
    }
    ;
    subscripts() {
        return this.getTypedRuleContext(SubscriptsContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterVariableSubStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitVariableSubStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitVariableSubStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class WhileWendStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.NEWLINE = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.NEWLINE);
            }
            else {
                return this.getToken(VisualBasic6Parser.NEWLINE, i);
            }
        };
        this.block = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(BlockContext);
            }
            else {
                return this.getTypedRuleContext(BlockContext, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_whileWendStmt;
    }
    WHILE() {
        return this.getToken(VisualBasic6Parser.WHILE, 0);
    }
    ;
    WS() {
        return this.getToken(VisualBasic6Parser.WS, 0);
    }
    ;
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    WEND() {
        return this.getToken(VisualBasic6Parser.WEND, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterWhileWendStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitWhileWendStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitWhileWendStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class WidthStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.valueStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ValueStmtContext);
            }
            else {
                return this.getTypedRuleContext(ValueStmtContext, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_widthStmt;
    }
    WIDTH() {
        return this.getToken(VisualBasic6Parser.WIDTH, 0);
    }
    ;
    COMMA() {
        return this.getToken(VisualBasic6Parser.COMMA, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterWidthStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitWidthStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitWidthStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class WithStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.NEWLINE = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.NEWLINE);
            }
            else {
                return this.getToken(VisualBasic6Parser.NEWLINE, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_withStmt;
    }
    WITH() {
        return this.getToken(VisualBasic6Parser.WITH, 0);
    }
    ;
    implicitCallStmt_InStmt() {
        return this.getTypedRuleContext(ImplicitCallStmt_InStmtContext, 0);
    }
    ;
    END_WITH() {
        return this.getToken(VisualBasic6Parser.END_WITH, 0);
    }
    ;
    NEW() {
        return this.getToken(VisualBasic6Parser.NEW, 0);
    }
    ;
    block() {
        return this.getTypedRuleContext(BlockContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterWithStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitWithStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitWithStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class WriteStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_writeStmt;
    }
    WRITE() {
        return this.getToken(VisualBasic6Parser.WRITE, 0);
    }
    ;
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    COMMA() {
        return this.getToken(VisualBasic6Parser.COMMA, 0);
    }
    ;
    outputList() {
        return this.getTypedRuleContext(OutputListContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterWriteStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitWriteStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitWriteStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ExplicitCallStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_explicitCallStmt;
    }
    eCS_ProcedureCall() {
        return this.getTypedRuleContext(ECS_ProcedureCallContext, 0);
    }
    ;
    eCS_MemberProcedureCall() {
        return this.getTypedRuleContext(ECS_MemberProcedureCallContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterExplicitCallStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitExplicitCallStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitExplicitCallStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ECS_ProcedureCallContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_eCS_ProcedureCall;
    }
    CALL() {
        return this.getToken(VisualBasic6Parser.CALL, 0);
    }
    ;
    ambiguousIdentifier() {
        return this.getTypedRuleContext(AmbiguousIdentifierContext, 0);
    }
    ;
    typeHint() {
        return this.getTypedRuleContext(TypeHintContext, 0);
    }
    ;
    LPAREN() {
        return this.getToken(VisualBasic6Parser.LPAREN, 0);
    }
    ;
    argsCall() {
        return this.getTypedRuleContext(ArgsCallContext, 0);
    }
    ;
    RPAREN() {
        return this.getToken(VisualBasic6Parser.RPAREN, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterECS_ProcedureCall(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitECS_ProcedureCall(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitECS_ProcedureCall(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ECS_MemberProcedureCallContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_eCS_MemberProcedureCall;
    }
    CALL() {
        return this.getToken(VisualBasic6Parser.CALL, 0);
    }
    ;
    DOT() {
        return this.getToken(VisualBasic6Parser.DOT, 0);
    }
    ;
    ambiguousIdentifier() {
        return this.getTypedRuleContext(AmbiguousIdentifierContext, 0);
    }
    ;
    implicitCallStmt_InStmt() {
        return this.getTypedRuleContext(ImplicitCallStmt_InStmtContext, 0);
    }
    ;
    typeHint() {
        return this.getTypedRuleContext(TypeHintContext, 0);
    }
    ;
    LPAREN() {
        return this.getToken(VisualBasic6Parser.LPAREN, 0);
    }
    ;
    argsCall() {
        return this.getTypedRuleContext(ArgsCallContext, 0);
    }
    ;
    RPAREN() {
        return this.getToken(VisualBasic6Parser.RPAREN, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterECS_MemberProcedureCall(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitECS_MemberProcedureCall(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitECS_MemberProcedureCall(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ImplicitCallStmt_InBlockContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_implicitCallStmt_InBlock;
    }
    iCS_B_ProcedureCall() {
        return this.getTypedRuleContext(ICS_B_ProcedureCallContext, 0);
    }
    ;
    iCS_B_MemberProcedureCall() {
        return this.getTypedRuleContext(ICS_B_MemberProcedureCallContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterImplicitCallStmt_InBlock(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitImplicitCallStmt_InBlock(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitImplicitCallStmt_InBlock(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ICS_B_ProcedureCallContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_iCS_B_ProcedureCall;
    }
    certainIdentifier() {
        return this.getTypedRuleContext(CertainIdentifierContext, 0);
    }
    ;
    WS() {
        return this.getToken(VisualBasic6Parser.WS, 0);
    }
    ;
    argsCall() {
        return this.getTypedRuleContext(ArgsCallContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterICS_B_ProcedureCall(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitICS_B_ProcedureCall(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitICS_B_ProcedureCall(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ICS_B_MemberProcedureCallContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_iCS_B_MemberProcedureCall;
    }
    DOT() {
        return this.getToken(VisualBasic6Parser.DOT, 0);
    }
    ;
    ambiguousIdentifier() {
        return this.getTypedRuleContext(AmbiguousIdentifierContext, 0);
    }
    ;
    implicitCallStmt_InStmt() {
        return this.getTypedRuleContext(ImplicitCallStmt_InStmtContext, 0);
    }
    ;
    typeHint() {
        return this.getTypedRuleContext(TypeHintContext, 0);
    }
    ;
    WS() {
        return this.getToken(VisualBasic6Parser.WS, 0);
    }
    ;
    argsCall() {
        return this.getTypedRuleContext(ArgsCallContext, 0);
    }
    ;
    dictionaryCallStmt() {
        return this.getTypedRuleContext(DictionaryCallStmtContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterICS_B_MemberProcedureCall(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitICS_B_MemberProcedureCall(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitICS_B_MemberProcedureCall(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ImplicitCallStmt_InStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_implicitCallStmt_InStmt;
    }
    iCS_S_MembersCall() {
        return this.getTypedRuleContext(ICS_S_MembersCallContext, 0);
    }
    ;
    iCS_S_VariableOrProcedureCall() {
        return this.getTypedRuleContext(ICS_S_VariableOrProcedureCallContext, 0);
    }
    ;
    iCS_S_ProcedureOrArrayCall() {
        return this.getTypedRuleContext(ICS_S_ProcedureOrArrayCallContext, 0);
    }
    ;
    iCS_S_DictionaryCall() {
        return this.getTypedRuleContext(ICS_S_DictionaryCallContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterImplicitCallStmt_InStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitImplicitCallStmt_InStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitImplicitCallStmt_InStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ICS_S_VariableOrProcedureCallContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_iCS_S_VariableOrProcedureCall;
    }
    ambiguousIdentifier() {
        return this.getTypedRuleContext(AmbiguousIdentifierContext, 0);
    }
    ;
    typeHint() {
        return this.getTypedRuleContext(TypeHintContext, 0);
    }
    ;
    dictionaryCallStmt() {
        return this.getTypedRuleContext(DictionaryCallStmtContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterICS_S_VariableOrProcedureCall(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitICS_S_VariableOrProcedureCall(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitICS_S_VariableOrProcedureCall(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ICS_S_ProcedureOrArrayCallContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.LPAREN = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.LPAREN);
            }
            else {
                return this.getToken(VisualBasic6Parser.LPAREN, i);
            }
        };
        this.RPAREN = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.RPAREN);
            }
            else {
                return this.getToken(VisualBasic6Parser.RPAREN, i);
            }
        };
        this.argsCall = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ArgsCallContext);
            }
            else {
                return this.getTypedRuleContext(ArgsCallContext, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_iCS_S_ProcedureOrArrayCall;
    }
    ambiguousIdentifier() {
        return this.getTypedRuleContext(AmbiguousIdentifierContext, 0);
    }
    ;
    baseType() {
        return this.getTypedRuleContext(BaseTypeContext, 0);
    }
    ;
    iCS_S_NestedProcedureCall() {
        return this.getTypedRuleContext(ICS_S_NestedProcedureCallContext, 0);
    }
    ;
    typeHint() {
        return this.getTypedRuleContext(TypeHintContext, 0);
    }
    ;
    dictionaryCallStmt() {
        return this.getTypedRuleContext(DictionaryCallStmtContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterICS_S_ProcedureOrArrayCall(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitICS_S_ProcedureOrArrayCall(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitICS_S_ProcedureOrArrayCall(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ICS_S_NestedProcedureCallContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_iCS_S_NestedProcedureCall;
    }
    ambiguousIdentifier() {
        return this.getTypedRuleContext(AmbiguousIdentifierContext, 0);
    }
    ;
    LPAREN() {
        return this.getToken(VisualBasic6Parser.LPAREN, 0);
    }
    ;
    RPAREN() {
        return this.getToken(VisualBasic6Parser.RPAREN, 0);
    }
    ;
    typeHint() {
        return this.getTypedRuleContext(TypeHintContext, 0);
    }
    ;
    argsCall() {
        return this.getTypedRuleContext(ArgsCallContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterICS_S_NestedProcedureCall(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitICS_S_NestedProcedureCall(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitICS_S_NestedProcedureCall(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ICS_S_MembersCallContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.iCS_S_MemberCall = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ICS_S_MemberCallContext);
            }
            else {
                return this.getTypedRuleContext(ICS_S_MemberCallContext, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_iCS_S_MembersCall;
    }
    iCS_S_VariableOrProcedureCall() {
        return this.getTypedRuleContext(ICS_S_VariableOrProcedureCallContext, 0);
    }
    ;
    iCS_S_ProcedureOrArrayCall() {
        return this.getTypedRuleContext(ICS_S_ProcedureOrArrayCallContext, 0);
    }
    ;
    dictionaryCallStmt() {
        return this.getTypedRuleContext(DictionaryCallStmtContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterICS_S_MembersCall(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitICS_S_MembersCall(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitICS_S_MembersCall(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ICS_S_MemberCallContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_iCS_S_MemberCall;
    }
    DOT() {
        return this.getToken(VisualBasic6Parser.DOT, 0);
    }
    ;
    iCS_S_VariableOrProcedureCall() {
        return this.getTypedRuleContext(ICS_S_VariableOrProcedureCallContext, 0);
    }
    ;
    iCS_S_ProcedureOrArrayCall() {
        return this.getTypedRuleContext(ICS_S_ProcedureOrArrayCallContext, 0);
    }
    ;
    WS() {
        return this.getToken(VisualBasic6Parser.WS, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterICS_S_MemberCall(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitICS_S_MemberCall(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitICS_S_MemberCall(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ICS_S_DictionaryCallContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_iCS_S_DictionaryCall;
    }
    dictionaryCallStmt() {
        return this.getTypedRuleContext(DictionaryCallStmtContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterICS_S_DictionaryCall(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitICS_S_DictionaryCall(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitICS_S_DictionaryCall(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ArgsCallContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.argCall = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ArgCallContext);
            }
            else {
                return this.getTypedRuleContext(ArgCallContext, i);
            }
        };
        this.COMMA = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.COMMA);
            }
            else {
                return this.getToken(VisualBasic6Parser.COMMA, i);
            }
        };
        this.SEMICOLON = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.SEMICOLON);
            }
            else {
                return this.getToken(VisualBasic6Parser.SEMICOLON, i);
            }
        };
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_argsCall;
    }
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterArgsCall(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitArgsCall(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitArgsCall(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ArgCallContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_argCall;
    }
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    WS() {
        return this.getToken(VisualBasic6Parser.WS, 0);
    }
    ;
    BYVAL() {
        return this.getToken(VisualBasic6Parser.BYVAL, 0);
    }
    ;
    BYREF() {
        return this.getToken(VisualBasic6Parser.BYREF, 0);
    }
    ;
    PARAMARRAY() {
        return this.getToken(VisualBasic6Parser.PARAMARRAY, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterArgCall(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitArgCall(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitArgCall(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class DictionaryCallStmtContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_dictionaryCallStmt;
    }
    EXCLAMATIONMARK() {
        return this.getToken(VisualBasic6Parser.EXCLAMATIONMARK, 0);
    }
    ;
    ambiguousIdentifier() {
        return this.getTypedRuleContext(AmbiguousIdentifierContext, 0);
    }
    ;
    typeHint() {
        return this.getTypedRuleContext(TypeHintContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterDictionaryCallStmt(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitDictionaryCallStmt(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitDictionaryCallStmt(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ArgListContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.arg = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ArgContext);
            }
            else {
                return this.getTypedRuleContext(ArgContext, i);
            }
        };
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.COMMA = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.COMMA);
            }
            else {
                return this.getToken(VisualBasic6Parser.COMMA, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_argList;
    }
    LPAREN() {
        return this.getToken(VisualBasic6Parser.LPAREN, 0);
    }
    ;
    RPAREN() {
        return this.getToken(VisualBasic6Parser.RPAREN, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterArgList(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitArgList(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitArgList(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ArgContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_arg;
    }
    ambiguousIdentifier() {
        return this.getTypedRuleContext(AmbiguousIdentifierContext, 0);
    }
    ;
    OPTIONAL() {
        return this.getToken(VisualBasic6Parser.OPTIONAL, 0);
    }
    ;
    PARAMARRAY() {
        return this.getToken(VisualBasic6Parser.PARAMARRAY, 0);
    }
    ;
    typeHint() {
        return this.getTypedRuleContext(TypeHintContext, 0);
    }
    ;
    LPAREN() {
        return this.getToken(VisualBasic6Parser.LPAREN, 0);
    }
    ;
    RPAREN() {
        return this.getToken(VisualBasic6Parser.RPAREN, 0);
    }
    ;
    asTypeClause() {
        return this.getTypedRuleContext(AsTypeClauseContext, 0);
    }
    ;
    argDefaultValue() {
        return this.getTypedRuleContext(ArgDefaultValueContext, 0);
    }
    ;
    BYVAL() {
        return this.getToken(VisualBasic6Parser.BYVAL, 0);
    }
    ;
    BYREF() {
        return this.getToken(VisualBasic6Parser.BYREF, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterArg(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitArg(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitArg(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ArgDefaultValueContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_argDefaultValue;
    }
    EQ() {
        return this.getToken(VisualBasic6Parser.EQ, 0);
    }
    ;
    valueStmt() {
        return this.getTypedRuleContext(ValueStmtContext, 0);
    }
    ;
    WS() {
        return this.getToken(VisualBasic6Parser.WS, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterArgDefaultValue(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitArgDefaultValue(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitArgDefaultValue(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class SubscriptsContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.subscript_ = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(Subscript_Context);
            }
            else {
                return this.getTypedRuleContext(Subscript_Context, i);
            }
        };
        this.COMMA = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.COMMA);
            }
            else {
                return this.getToken(VisualBasic6Parser.COMMA, i);
            }
        };
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_subscripts;
    }
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterSubscripts(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitSubscripts(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitSubscripts(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class Subscript_Context extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.valueStmt = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(ValueStmtContext);
            }
            else {
                return this.getTypedRuleContext(ValueStmtContext, i);
            }
        };
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_subscript_;
    }
    TO() {
        return this.getToken(VisualBasic6Parser.TO, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterSubscript_(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitSubscript_(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitSubscript_(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class AmbiguousIdentifierContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.IDENTIFIER = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.IDENTIFIER);
            }
            else {
                return this.getToken(VisualBasic6Parser.IDENTIFIER, i);
            }
        };
        this.ambiguousKeyword = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(AmbiguousKeywordContext);
            }
            else {
                return this.getTypedRuleContext(AmbiguousKeywordContext, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_ambiguousIdentifier;
    }
    L_SQUARE_BRACKET() {
        return this.getToken(VisualBasic6Parser.L_SQUARE_BRACKET, 0);
    }
    ;
    R_SQUARE_BRACKET() {
        return this.getToken(VisualBasic6Parser.R_SQUARE_BRACKET, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterAmbiguousIdentifier(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitAmbiguousIdentifier(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitAmbiguousIdentifier(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class AsTypeClauseContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_asTypeClause;
    }
    AS() {
        return this.getToken(VisualBasic6Parser.AS, 0);
    }
    ;
    type_() {
        return this.getTypedRuleContext(Type_Context, 0);
    }
    ;
    NEW() {
        return this.getToken(VisualBasic6Parser.NEW, 0);
    }
    ;
    fieldLength() {
        return this.getTypedRuleContext(FieldLengthContext, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterAsTypeClause(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitAsTypeClause(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitAsTypeClause(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class BaseTypeContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_baseType;
    }
    BOOLEAN() {
        return this.getToken(VisualBasic6Parser.BOOLEAN, 0);
    }
    ;
    BYTE() {
        return this.getToken(VisualBasic6Parser.BYTE, 0);
    }
    ;
    COLLECTION() {
        return this.getToken(VisualBasic6Parser.COLLECTION, 0);
    }
    ;
    DATE() {
        return this.getToken(VisualBasic6Parser.DATE, 0);
    }
    ;
    DOUBLE() {
        return this.getToken(VisualBasic6Parser.DOUBLE, 0);
    }
    ;
    INTEGER() {
        return this.getToken(VisualBasic6Parser.INTEGER, 0);
    }
    ;
    LONG() {
        return this.getToken(VisualBasic6Parser.LONG, 0);
    }
    ;
    OBJECT() {
        return this.getToken(VisualBasic6Parser.OBJECT, 0);
    }
    ;
    SINGLE() {
        return this.getToken(VisualBasic6Parser.SINGLE, 0);
    }
    ;
    STRING() {
        return this.getToken(VisualBasic6Parser.STRING, 0);
    }
    ;
    VARIANT() {
        return this.getToken(VisualBasic6Parser.VARIANT, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterBaseType(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitBaseType(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitBaseType(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class CertainIdentifierContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.IDENTIFIER = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.IDENTIFIER);
            }
            else {
                return this.getToken(VisualBasic6Parser.IDENTIFIER, i);
            }
        };
        this.ambiguousKeyword = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(AmbiguousKeywordContext);
            }
            else {
                return this.getTypedRuleContext(AmbiguousKeywordContext, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_certainIdentifier;
    }
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterCertainIdentifier(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitCertainIdentifier(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitCertainIdentifier(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ComparisonOperatorContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_comparisonOperator;
    }
    LT() {
        return this.getToken(VisualBasic6Parser.LT, 0);
    }
    ;
    LEQ() {
        return this.getToken(VisualBasic6Parser.LEQ, 0);
    }
    ;
    GT() {
        return this.getToken(VisualBasic6Parser.GT, 0);
    }
    ;
    GEQ() {
        return this.getToken(VisualBasic6Parser.GEQ, 0);
    }
    ;
    EQ() {
        return this.getToken(VisualBasic6Parser.EQ, 0);
    }
    ;
    NEQ() {
        return this.getToken(VisualBasic6Parser.NEQ, 0);
    }
    ;
    IS() {
        return this.getToken(VisualBasic6Parser.IS, 0);
    }
    ;
    LIKE() {
        return this.getToken(VisualBasic6Parser.LIKE, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterComparisonOperator(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitComparisonOperator(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitComparisonOperator(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class ComplexTypeContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.ambiguousIdentifier = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(AmbiguousIdentifierContext);
            }
            else {
                return this.getTypedRuleContext(AmbiguousIdentifierContext, i);
            }
        };
        this.DOT = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.DOT);
            }
            else {
                return this.getToken(VisualBasic6Parser.DOT, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_complexType;
    }
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterComplexType(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitComplexType(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitComplexType(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class FieldLengthContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_fieldLength;
    }
    MULT() {
        return this.getToken(VisualBasic6Parser.MULT, 0);
    }
    ;
    INTEGERLITERAL() {
        return this.getToken(VisualBasic6Parser.INTEGERLITERAL, 0);
    }
    ;
    ambiguousIdentifier() {
        return this.getTypedRuleContext(AmbiguousIdentifierContext, 0);
    }
    ;
    WS() {
        return this.getToken(VisualBasic6Parser.WS, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterFieldLength(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitFieldLength(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitFieldLength(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class LetterrangeContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.certainIdentifier = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTypedRuleContexts(CertainIdentifierContext);
            }
            else {
                return this.getTypedRuleContext(CertainIdentifierContext, i);
            }
        };
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_letterrange;
    }
    MINUS() {
        return this.getToken(VisualBasic6Parser.MINUS, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterLetterrange(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitLetterrange(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitLetterrange(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class LineLabelContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_lineLabel;
    }
    ambiguousIdentifier() {
        return this.getTypedRuleContext(AmbiguousIdentifierContext, 0);
    }
    ;
    COLON() {
        return this.getToken(VisualBasic6Parser.COLON, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterLineLabel(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitLineLabel(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitLineLabel(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class LiteralContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_literal;
    }
    COLORLITERAL() {
        return this.getToken(VisualBasic6Parser.COLORLITERAL, 0);
    }
    ;
    DATELITERAL() {
        return this.getToken(VisualBasic6Parser.DATELITERAL, 0);
    }
    ;
    DOUBLELITERAL() {
        return this.getToken(VisualBasic6Parser.DOUBLELITERAL, 0);
    }
    ;
    FILENUMBER() {
        return this.getToken(VisualBasic6Parser.FILENUMBER, 0);
    }
    ;
    INTEGERLITERAL() {
        return this.getToken(VisualBasic6Parser.INTEGERLITERAL, 0);
    }
    ;
    OCTALLITERAL() {
        return this.getToken(VisualBasic6Parser.OCTALLITERAL, 0);
    }
    ;
    STRINGLITERAL() {
        return this.getToken(VisualBasic6Parser.STRINGLITERAL, 0);
    }
    ;
    TRUE() {
        return this.getToken(VisualBasic6Parser.TRUE, 0);
    }
    ;
    FALSE() {
        return this.getToken(VisualBasic6Parser.FALSE, 0);
    }
    ;
    NOTHING() {
        return this.getToken(VisualBasic6Parser.NOTHING, 0);
    }
    ;
    NULL_() {
        return this.getToken(VisualBasic6Parser.NULL_, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterLiteral(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitLiteral(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitLiteral(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class PublicPrivateVisibilityContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_publicPrivateVisibility;
    }
    PRIVATE() {
        return this.getToken(VisualBasic6Parser.PRIVATE, 0);
    }
    ;
    PUBLIC() {
        return this.getToken(VisualBasic6Parser.PUBLIC, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterPublicPrivateVisibility(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitPublicPrivateVisibility(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitPublicPrivateVisibility(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class PublicPrivateGlobalVisibilityContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_publicPrivateGlobalVisibility;
    }
    PRIVATE() {
        return this.getToken(VisualBasic6Parser.PRIVATE, 0);
    }
    ;
    PUBLIC() {
        return this.getToken(VisualBasic6Parser.PUBLIC, 0);
    }
    ;
    GLOBAL() {
        return this.getToken(VisualBasic6Parser.GLOBAL, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterPublicPrivateGlobalVisibility(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitPublicPrivateGlobalVisibility(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitPublicPrivateGlobalVisibility(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class Type_Context extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.WS = function (i) {
            if (i === undefined) {
                i = null;
            }
            if (i === null) {
                return this.getTokens(VisualBasic6Parser.WS);
            }
            else {
                return this.getToken(VisualBasic6Parser.WS, i);
            }
        };
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_type_;
    }
    baseType() {
        return this.getTypedRuleContext(BaseTypeContext, 0);
    }
    ;
    complexType() {
        return this.getTypedRuleContext(ComplexTypeContext, 0);
    }
    ;
    LPAREN() {
        return this.getToken(VisualBasic6Parser.LPAREN, 0);
    }
    ;
    RPAREN() {
        return this.getToken(VisualBasic6Parser.RPAREN, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterType_(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitType_(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitType_(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class TypeHintContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_typeHint;
    }
    AMPERSAND() {
        return this.getToken(VisualBasic6Parser.AMPERSAND, 0);
    }
    ;
    AT() {
        return this.getToken(VisualBasic6Parser.AT, 0);
    }
    ;
    DOLLAR() {
        return this.getToken(VisualBasic6Parser.DOLLAR, 0);
    }
    ;
    EXCLAMATIONMARK() {
        return this.getToken(VisualBasic6Parser.EXCLAMATIONMARK, 0);
    }
    ;
    HASH() {
        return this.getToken(VisualBasic6Parser.HASH, 0);
    }
    ;
    PERCENT() {
        return this.getToken(VisualBasic6Parser.PERCENT, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterTypeHint(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitTypeHint(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitTypeHint(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class VisibilityContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_visibility;
    }
    PRIVATE() {
        return this.getToken(VisualBasic6Parser.PRIVATE, 0);
    }
    ;
    PUBLIC() {
        return this.getToken(VisualBasic6Parser.PUBLIC, 0);
    }
    ;
    FRIEND() {
        return this.getToken(VisualBasic6Parser.FRIEND, 0);
    }
    ;
    GLOBAL() {
        return this.getToken(VisualBasic6Parser.GLOBAL, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterVisibility(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitVisibility(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitVisibility(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
class AmbiguousKeywordContext extends antlr4_1.default.ParserRuleContext {
    constructor(parser, parent, invokingState) {
        if (parent === undefined) {
            parent = null;
        }
        if (invokingState === undefined || invokingState === null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = VisualBasic6Parser.RULE_ambiguousKeyword;
    }
    ACCESS() {
        return this.getToken(VisualBasic6Parser.ACCESS, 0);
    }
    ;
    ADDRESSOF() {
        return this.getToken(VisualBasic6Parser.ADDRESSOF, 0);
    }
    ;
    ALIAS() {
        return this.getToken(VisualBasic6Parser.ALIAS, 0);
    }
    ;
    AND() {
        return this.getToken(VisualBasic6Parser.AND, 0);
    }
    ;
    ATTRIBUTE() {
        return this.getToken(VisualBasic6Parser.ATTRIBUTE, 0);
    }
    ;
    APPACTIVATE() {
        return this.getToken(VisualBasic6Parser.APPACTIVATE, 0);
    }
    ;
    APPEND() {
        return this.getToken(VisualBasic6Parser.APPEND, 0);
    }
    ;
    AS() {
        return this.getToken(VisualBasic6Parser.AS, 0);
    }
    ;
    BEEP() {
        return this.getToken(VisualBasic6Parser.BEEP, 0);
    }
    ;
    BEGIN() {
        return this.getToken(VisualBasic6Parser.BEGIN, 0);
    }
    ;
    BINARY() {
        return this.getToken(VisualBasic6Parser.BINARY, 0);
    }
    ;
    BOOLEAN() {
        return this.getToken(VisualBasic6Parser.BOOLEAN, 0);
    }
    ;
    BYVAL() {
        return this.getToken(VisualBasic6Parser.BYVAL, 0);
    }
    ;
    BYREF() {
        return this.getToken(VisualBasic6Parser.BYREF, 0);
    }
    ;
    BYTE() {
        return this.getToken(VisualBasic6Parser.BYTE, 0);
    }
    ;
    CALL() {
        return this.getToken(VisualBasic6Parser.CALL, 0);
    }
    ;
    CASE() {
        return this.getToken(VisualBasic6Parser.CASE, 0);
    }
    ;
    CLASS() {
        return this.getToken(VisualBasic6Parser.CLASS, 0);
    }
    ;
    CLOSE() {
        return this.getToken(VisualBasic6Parser.CLOSE, 0);
    }
    ;
    CHDIR() {
        return this.getToken(VisualBasic6Parser.CHDIR, 0);
    }
    ;
    CHDRIVE() {
        return this.getToken(VisualBasic6Parser.CHDRIVE, 0);
    }
    ;
    COLLECTION() {
        return this.getToken(VisualBasic6Parser.COLLECTION, 0);
    }
    ;
    CONST() {
        return this.getToken(VisualBasic6Parser.CONST, 0);
    }
    ;
    DATE() {
        return this.getToken(VisualBasic6Parser.DATE, 0);
    }
    ;
    DECLARE() {
        return this.getToken(VisualBasic6Parser.DECLARE, 0);
    }
    ;
    DEFBOOL() {
        return this.getToken(VisualBasic6Parser.DEFBOOL, 0);
    }
    ;
    DEFBYTE() {
        return this.getToken(VisualBasic6Parser.DEFBYTE, 0);
    }
    ;
    DEFCUR() {
        return this.getToken(VisualBasic6Parser.DEFCUR, 0);
    }
    ;
    DEFDBL() {
        return this.getToken(VisualBasic6Parser.DEFDBL, 0);
    }
    ;
    DEFDATE() {
        return this.getToken(VisualBasic6Parser.DEFDATE, 0);
    }
    ;
    DEFDEC() {
        return this.getToken(VisualBasic6Parser.DEFDEC, 0);
    }
    ;
    DEFINT() {
        return this.getToken(VisualBasic6Parser.DEFINT, 0);
    }
    ;
    DEFLNG() {
        return this.getToken(VisualBasic6Parser.DEFLNG, 0);
    }
    ;
    DEFOBJ() {
        return this.getToken(VisualBasic6Parser.DEFOBJ, 0);
    }
    ;
    DEFSNG() {
        return this.getToken(VisualBasic6Parser.DEFSNG, 0);
    }
    ;
    DEFSTR() {
        return this.getToken(VisualBasic6Parser.DEFSTR, 0);
    }
    ;
    DEFVAR() {
        return this.getToken(VisualBasic6Parser.DEFVAR, 0);
    }
    ;
    DELETESETTING() {
        return this.getToken(VisualBasic6Parser.DELETESETTING, 0);
    }
    ;
    DIM() {
        return this.getToken(VisualBasic6Parser.DIM, 0);
    }
    ;
    DO() {
        return this.getToken(VisualBasic6Parser.DO, 0);
    }
    ;
    DOUBLE() {
        return this.getToken(VisualBasic6Parser.DOUBLE, 0);
    }
    ;
    EACH() {
        return this.getToken(VisualBasic6Parser.EACH, 0);
    }
    ;
    ELSE() {
        return this.getToken(VisualBasic6Parser.ELSE, 0);
    }
    ;
    ELSEIF() {
        return this.getToken(VisualBasic6Parser.ELSEIF, 0);
    }
    ;
    END() {
        return this.getToken(VisualBasic6Parser.END, 0);
    }
    ;
    ENUM() {
        return this.getToken(VisualBasic6Parser.ENUM, 0);
    }
    ;
    EQV() {
        return this.getToken(VisualBasic6Parser.EQV, 0);
    }
    ;
    ERASE() {
        return this.getToken(VisualBasic6Parser.ERASE, 0);
    }
    ;
    ERROR() {
        return this.getToken(VisualBasic6Parser.ERROR, 0);
    }
    ;
    EVENT() {
        return this.getToken(VisualBasic6Parser.EVENT, 0);
    }
    ;
    FALSE() {
        return this.getToken(VisualBasic6Parser.FALSE, 0);
    }
    ;
    FILECOPY() {
        return this.getToken(VisualBasic6Parser.FILECOPY, 0);
    }
    ;
    FRIEND() {
        return this.getToken(VisualBasic6Parser.FRIEND, 0);
    }
    ;
    FOR() {
        return this.getToken(VisualBasic6Parser.FOR, 0);
    }
    ;
    FUNCTION() {
        return this.getToken(VisualBasic6Parser.FUNCTION, 0);
    }
    ;
    GET() {
        return this.getToken(VisualBasic6Parser.GET, 0);
    }
    ;
    GLOBAL() {
        return this.getToken(VisualBasic6Parser.GLOBAL, 0);
    }
    ;
    GOSUB() {
        return this.getToken(VisualBasic6Parser.GOSUB, 0);
    }
    ;
    GOTO() {
        return this.getToken(VisualBasic6Parser.GOTO, 0);
    }
    ;
    IF() {
        return this.getToken(VisualBasic6Parser.IF, 0);
    }
    ;
    IMP() {
        return this.getToken(VisualBasic6Parser.IMP, 0);
    }
    ;
    IMPLEMENTS() {
        return this.getToken(VisualBasic6Parser.IMPLEMENTS, 0);
    }
    ;
    IN() {
        return this.getToken(VisualBasic6Parser.IN, 0);
    }
    ;
    INPUT() {
        return this.getToken(VisualBasic6Parser.INPUT, 0);
    }
    ;
    IS() {
        return this.getToken(VisualBasic6Parser.IS, 0);
    }
    ;
    INTEGER() {
        return this.getToken(VisualBasic6Parser.INTEGER, 0);
    }
    ;
    KILL() {
        return this.getToken(VisualBasic6Parser.KILL, 0);
    }
    ;
    LOAD() {
        return this.getToken(VisualBasic6Parser.LOAD, 0);
    }
    ;
    LOCK() {
        return this.getToken(VisualBasic6Parser.LOCK, 0);
    }
    ;
    LONG() {
        return this.getToken(VisualBasic6Parser.LONG, 0);
    }
    ;
    LOOP() {
        return this.getToken(VisualBasic6Parser.LOOP, 0);
    }
    ;
    LEN() {
        return this.getToken(VisualBasic6Parser.LEN, 0);
    }
    ;
    LET() {
        return this.getToken(VisualBasic6Parser.LET, 0);
    }
    ;
    LIB() {
        return this.getToken(VisualBasic6Parser.LIB, 0);
    }
    ;
    LIKE() {
        return this.getToken(VisualBasic6Parser.LIKE, 0);
    }
    ;
    LSET() {
        return this.getToken(VisualBasic6Parser.LSET, 0);
    }
    ;
    ME() {
        return this.getToken(VisualBasic6Parser.ME, 0);
    }
    ;
    MID() {
        return this.getToken(VisualBasic6Parser.MID, 0);
    }
    ;
    MKDIR() {
        return this.getToken(VisualBasic6Parser.MKDIR, 0);
    }
    ;
    MOD() {
        return this.getToken(VisualBasic6Parser.MOD, 0);
    }
    ;
    NAME() {
        return this.getToken(VisualBasic6Parser.NAME, 0);
    }
    ;
    NEXT() {
        return this.getToken(VisualBasic6Parser.NEXT, 0);
    }
    ;
    NEW() {
        return this.getToken(VisualBasic6Parser.NEW, 0);
    }
    ;
    NOT() {
        return this.getToken(VisualBasic6Parser.NOT, 0);
    }
    ;
    NOTHING() {
        return this.getToken(VisualBasic6Parser.NOTHING, 0);
    }
    ;
    NULL_() {
        return this.getToken(VisualBasic6Parser.NULL_, 0);
    }
    ;
    OBJECT() {
        return this.getToken(VisualBasic6Parser.OBJECT, 0);
    }
    ;
    ON() {
        return this.getToken(VisualBasic6Parser.ON, 0);
    }
    ;
    OPEN() {
        return this.getToken(VisualBasic6Parser.OPEN, 0);
    }
    ;
    OPTIONAL() {
        return this.getToken(VisualBasic6Parser.OPTIONAL, 0);
    }
    ;
    OR() {
        return this.getToken(VisualBasic6Parser.OR, 0);
    }
    ;
    OUTPUT() {
        return this.getToken(VisualBasic6Parser.OUTPUT, 0);
    }
    ;
    PARAMARRAY() {
        return this.getToken(VisualBasic6Parser.PARAMARRAY, 0);
    }
    ;
    PRESERVE() {
        return this.getToken(VisualBasic6Parser.PRESERVE, 0);
    }
    ;
    PRINT() {
        return this.getToken(VisualBasic6Parser.PRINT, 0);
    }
    ;
    PRIVATE() {
        return this.getToken(VisualBasic6Parser.PRIVATE, 0);
    }
    ;
    PUBLIC() {
        return this.getToken(VisualBasic6Parser.PUBLIC, 0);
    }
    ;
    PUT() {
        return this.getToken(VisualBasic6Parser.PUT, 0);
    }
    ;
    RANDOM() {
        return this.getToken(VisualBasic6Parser.RANDOM, 0);
    }
    ;
    RANDOMIZE() {
        return this.getToken(VisualBasic6Parser.RANDOMIZE, 0);
    }
    ;
    RAISEEVENT() {
        return this.getToken(VisualBasic6Parser.RAISEEVENT, 0);
    }
    ;
    READ() {
        return this.getToken(VisualBasic6Parser.READ, 0);
    }
    ;
    REDIM() {
        return this.getToken(VisualBasic6Parser.REDIM, 0);
    }
    ;
    REM() {
        return this.getToken(VisualBasic6Parser.REM, 0);
    }
    ;
    RESET() {
        return this.getToken(VisualBasic6Parser.RESET, 0);
    }
    ;
    RESUME() {
        return this.getToken(VisualBasic6Parser.RESUME, 0);
    }
    ;
    RETURN() {
        return this.getToken(VisualBasic6Parser.RETURN, 0);
    }
    ;
    RMDIR() {
        return this.getToken(VisualBasic6Parser.RMDIR, 0);
    }
    ;
    RSET() {
        return this.getToken(VisualBasic6Parser.RSET, 0);
    }
    ;
    SAVEPICTURE() {
        return this.getToken(VisualBasic6Parser.SAVEPICTURE, 0);
    }
    ;
    SAVESETTING() {
        return this.getToken(VisualBasic6Parser.SAVESETTING, 0);
    }
    ;
    SEEK() {
        return this.getToken(VisualBasic6Parser.SEEK, 0);
    }
    ;
    SELECT() {
        return this.getToken(VisualBasic6Parser.SELECT, 0);
    }
    ;
    SENDKEYS() {
        return this.getToken(VisualBasic6Parser.SENDKEYS, 0);
    }
    ;
    SET() {
        return this.getToken(VisualBasic6Parser.SET, 0);
    }
    ;
    SETATTR() {
        return this.getToken(VisualBasic6Parser.SETATTR, 0);
    }
    ;
    SHARED() {
        return this.getToken(VisualBasic6Parser.SHARED, 0);
    }
    ;
    SINGLE() {
        return this.getToken(VisualBasic6Parser.SINGLE, 0);
    }
    ;
    SPC() {
        return this.getToken(VisualBasic6Parser.SPC, 0);
    }
    ;
    STATIC() {
        return this.getToken(VisualBasic6Parser.STATIC, 0);
    }
    ;
    STEP() {
        return this.getToken(VisualBasic6Parser.STEP, 0);
    }
    ;
    STOP() {
        return this.getToken(VisualBasic6Parser.STOP, 0);
    }
    ;
    STRING() {
        return this.getToken(VisualBasic6Parser.STRING, 0);
    }
    ;
    SUB() {
        return this.getToken(VisualBasic6Parser.SUB, 0);
    }
    ;
    TAB() {
        return this.getToken(VisualBasic6Parser.TAB, 0);
    }
    ;
    TEXT() {
        return this.getToken(VisualBasic6Parser.TEXT, 0);
    }
    ;
    THEN() {
        return this.getToken(VisualBasic6Parser.THEN, 0);
    }
    ;
    TIME() {
        return this.getToken(VisualBasic6Parser.TIME, 0);
    }
    ;
    TO() {
        return this.getToken(VisualBasic6Parser.TO, 0);
    }
    ;
    TRUE() {
        return this.getToken(VisualBasic6Parser.TRUE, 0);
    }
    ;
    TYPE() {
        return this.getToken(VisualBasic6Parser.TYPE, 0);
    }
    ;
    TYPEOF() {
        return this.getToken(VisualBasic6Parser.TYPEOF, 0);
    }
    ;
    UNLOAD() {
        return this.getToken(VisualBasic6Parser.UNLOAD, 0);
    }
    ;
    UNLOCK() {
        return this.getToken(VisualBasic6Parser.UNLOCK, 0);
    }
    ;
    UNTIL() {
        return this.getToken(VisualBasic6Parser.UNTIL, 0);
    }
    ;
    VARIANT() {
        return this.getToken(VisualBasic6Parser.VARIANT, 0);
    }
    ;
    VERSION() {
        return this.getToken(VisualBasic6Parser.VERSION, 0);
    }
    ;
    WEND() {
        return this.getToken(VisualBasic6Parser.WEND, 0);
    }
    ;
    WHILE() {
        return this.getToken(VisualBasic6Parser.WHILE, 0);
    }
    ;
    WIDTH() {
        return this.getToken(VisualBasic6Parser.WIDTH, 0);
    }
    ;
    WITH() {
        return this.getToken(VisualBasic6Parser.WITH, 0);
    }
    ;
    WITHEVENTS() {
        return this.getToken(VisualBasic6Parser.WITHEVENTS, 0);
    }
    ;
    WRITE() {
        return this.getToken(VisualBasic6Parser.WRITE, 0);
    }
    ;
    XOR() {
        return this.getToken(VisualBasic6Parser.XOR, 0);
    }
    ;
    enterRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.enterAmbiguousKeyword(this);
        }
    }
    exitRule(listener) {
        if (listener instanceof VisualBasic6ParserListener_js_1.default) {
            listener.exitAmbiguousKeyword(this);
        }
    }
    accept(visitor) {
        if (visitor instanceof VisualBasic6ParserVisitor_js_1.default) {
            return visitor.visitAmbiguousKeyword(this);
        }
        else {
            return visitor.visitChildren(this);
        }
    }
}
VisualBasic6Parser.StartRuleContext = StartRuleContext;
VisualBasic6Parser.ModuleContext = ModuleContext;
VisualBasic6Parser.ModuleReferencesContext = ModuleReferencesContext;
VisualBasic6Parser.ModuleReferenceContext = ModuleReferenceContext;
VisualBasic6Parser.ModuleReferenceValueContext = ModuleReferenceValueContext;
VisualBasic6Parser.ModuleReferenceComponentContext = ModuleReferenceComponentContext;
VisualBasic6Parser.ModuleHeaderContext = ModuleHeaderContext;
VisualBasic6Parser.ModuleConfigContext = ModuleConfigContext;
VisualBasic6Parser.ModuleConfigElementContext = ModuleConfigElementContext;
VisualBasic6Parser.ModuleAttributesContext = ModuleAttributesContext;
VisualBasic6Parser.ModuleOptionsContext = ModuleOptionsContext;
VisualBasic6Parser.ModuleOptionContext = ModuleOptionContext;
VisualBasic6Parser.ModuleBodyContext = ModuleBodyContext;
VisualBasic6Parser.ModuleBodyElementContext = ModuleBodyElementContext;
VisualBasic6Parser.ControlPropertiesContext = ControlPropertiesContext;
VisualBasic6Parser.Cp_PropertiesContext = Cp_PropertiesContext;
VisualBasic6Parser.Cp_SinglePropertyContext = Cp_SinglePropertyContext;
VisualBasic6Parser.Cp_PropertyNameContext = Cp_PropertyNameContext;
VisualBasic6Parser.Cp_PropertyValueContext = Cp_PropertyValueContext;
VisualBasic6Parser.Cp_NestedPropertyContext = Cp_NestedPropertyContext;
VisualBasic6Parser.Cp_ControlTypeContext = Cp_ControlTypeContext;
VisualBasic6Parser.Cp_ControlIdentifierContext = Cp_ControlIdentifierContext;
VisualBasic6Parser.ModuleBlockContext = ModuleBlockContext;
VisualBasic6Parser.AttributeStmtContext = AttributeStmtContext;
VisualBasic6Parser.BlockContext = BlockContext;
VisualBasic6Parser.BlockStmtContext = BlockStmtContext;
VisualBasic6Parser.AppActivateStmtContext = AppActivateStmtContext;
VisualBasic6Parser.BeepStmtContext = BeepStmtContext;
VisualBasic6Parser.ChDirStmtContext = ChDirStmtContext;
VisualBasic6Parser.ChDriveStmtContext = ChDriveStmtContext;
VisualBasic6Parser.CloseStmtContext = CloseStmtContext;
VisualBasic6Parser.ConstStmtContext = ConstStmtContext;
VisualBasic6Parser.ConstSubStmtContext = ConstSubStmtContext;
VisualBasic6Parser.DateStmtContext = DateStmtContext;
VisualBasic6Parser.DeclareStmtContext = DeclareStmtContext;
VisualBasic6Parser.DeftypeStmtContext = DeftypeStmtContext;
VisualBasic6Parser.DeleteSettingStmtContext = DeleteSettingStmtContext;
VisualBasic6Parser.DoLoopStmtContext = DoLoopStmtContext;
VisualBasic6Parser.EndStmtContext = EndStmtContext;
VisualBasic6Parser.EnumerationStmtContext = EnumerationStmtContext;
VisualBasic6Parser.EnumerationStmt_ConstantContext = EnumerationStmt_ConstantContext;
VisualBasic6Parser.EraseStmtContext = EraseStmtContext;
VisualBasic6Parser.ErrorStmtContext = ErrorStmtContext;
VisualBasic6Parser.EventStmtContext = EventStmtContext;
VisualBasic6Parser.ExitStmtContext = ExitStmtContext;
VisualBasic6Parser.FilecopyStmtContext = FilecopyStmtContext;
VisualBasic6Parser.ForEachStmtContext = ForEachStmtContext;
VisualBasic6Parser.ForNextStmtContext = ForNextStmtContext;
VisualBasic6Parser.FunctionStmtContext = FunctionStmtContext;
VisualBasic6Parser.GetStmtContext = GetStmtContext;
VisualBasic6Parser.GoSubStmtContext = GoSubStmtContext;
VisualBasic6Parser.GoToStmtContext = GoToStmtContext;
VisualBasic6Parser.IfThenElseStmtContext = IfThenElseStmtContext;
VisualBasic6Parser.IfBlockStmtContext = IfBlockStmtContext;
VisualBasic6Parser.IfConditionStmtContext = IfConditionStmtContext;
VisualBasic6Parser.IfElseIfBlockStmtContext = IfElseIfBlockStmtContext;
VisualBasic6Parser.IfElseBlockStmtContext = IfElseBlockStmtContext;
VisualBasic6Parser.ImplementsStmtContext = ImplementsStmtContext;
VisualBasic6Parser.InputStmtContext = InputStmtContext;
VisualBasic6Parser.KillStmtContext = KillStmtContext;
VisualBasic6Parser.LetStmtContext = LetStmtContext;
VisualBasic6Parser.LineInputStmtContext = LineInputStmtContext;
VisualBasic6Parser.LoadStmtContext = LoadStmtContext;
VisualBasic6Parser.LockStmtContext = LockStmtContext;
VisualBasic6Parser.LsetStmtContext = LsetStmtContext;
VisualBasic6Parser.MacroIfThenElseStmtContext = MacroIfThenElseStmtContext;
VisualBasic6Parser.MacroIfBlockStmtContext = MacroIfBlockStmtContext;
VisualBasic6Parser.MacroElseIfBlockStmtContext = MacroElseIfBlockStmtContext;
VisualBasic6Parser.MacroElseBlockStmtContext = MacroElseBlockStmtContext;
VisualBasic6Parser.MidStmtContext = MidStmtContext;
VisualBasic6Parser.MkdirStmtContext = MkdirStmtContext;
VisualBasic6Parser.NameStmtContext = NameStmtContext;
VisualBasic6Parser.OnErrorStmtContext = OnErrorStmtContext;
VisualBasic6Parser.OnGoToStmtContext = OnGoToStmtContext;
VisualBasic6Parser.OnGoSubStmtContext = OnGoSubStmtContext;
VisualBasic6Parser.OpenStmtContext = OpenStmtContext;
VisualBasic6Parser.OutputListContext = OutputListContext;
VisualBasic6Parser.OutputList_ExpressionContext = OutputList_ExpressionContext;
VisualBasic6Parser.PrintStmtContext = PrintStmtContext;
VisualBasic6Parser.PropertyGetStmtContext = PropertyGetStmtContext;
VisualBasic6Parser.PropertySetStmtContext = PropertySetStmtContext;
VisualBasic6Parser.PropertyLetStmtContext = PropertyLetStmtContext;
VisualBasic6Parser.PutStmtContext = PutStmtContext;
VisualBasic6Parser.RaiseEventStmtContext = RaiseEventStmtContext;
VisualBasic6Parser.RandomizeStmtContext = RandomizeStmtContext;
VisualBasic6Parser.RedimStmtContext = RedimStmtContext;
VisualBasic6Parser.RedimSubStmtContext = RedimSubStmtContext;
VisualBasic6Parser.ResetStmtContext = ResetStmtContext;
VisualBasic6Parser.ResumeStmtContext = ResumeStmtContext;
VisualBasic6Parser.ReturnStmtContext = ReturnStmtContext;
VisualBasic6Parser.RmdirStmtContext = RmdirStmtContext;
VisualBasic6Parser.RsetStmtContext = RsetStmtContext;
VisualBasic6Parser.SavepictureStmtContext = SavepictureStmtContext;
VisualBasic6Parser.SaveSettingStmtContext = SaveSettingStmtContext;
VisualBasic6Parser.SeekStmtContext = SeekStmtContext;
VisualBasic6Parser.SelectCaseStmtContext = SelectCaseStmtContext;
VisualBasic6Parser.SC_CaseContext = SC_CaseContext;
VisualBasic6Parser.SC_CondContext = SC_CondContext;
VisualBasic6Parser.SC_CondExprContext = SC_CondExprContext;
VisualBasic6Parser.SendkeysStmtContext = SendkeysStmtContext;
VisualBasic6Parser.SetattrStmtContext = SetattrStmtContext;
VisualBasic6Parser.SetStmtContext = SetStmtContext;
VisualBasic6Parser.StopStmtContext = StopStmtContext;
VisualBasic6Parser.SubStmtContext = SubStmtContext;
VisualBasic6Parser.TimeStmtContext = TimeStmtContext;
VisualBasic6Parser.TypeStmtContext = TypeStmtContext;
VisualBasic6Parser.TypeStmt_ElementContext = TypeStmt_ElementContext;
VisualBasic6Parser.TypeOfStmtContext = TypeOfStmtContext;
VisualBasic6Parser.UnloadStmtContext = UnloadStmtContext;
VisualBasic6Parser.UnlockStmtContext = UnlockStmtContext;
VisualBasic6Parser.ValueStmtContext = ValueStmtContext;
VisualBasic6Parser.VariableStmtContext = VariableStmtContext;
VisualBasic6Parser.VariableListStmtContext = VariableListStmtContext;
VisualBasic6Parser.VariableSubStmtContext = VariableSubStmtContext;
VisualBasic6Parser.WhileWendStmtContext = WhileWendStmtContext;
VisualBasic6Parser.WidthStmtContext = WidthStmtContext;
VisualBasic6Parser.WithStmtContext = WithStmtContext;
VisualBasic6Parser.WriteStmtContext = WriteStmtContext;
VisualBasic6Parser.ExplicitCallStmtContext = ExplicitCallStmtContext;
VisualBasic6Parser.ECS_ProcedureCallContext = ECS_ProcedureCallContext;
VisualBasic6Parser.ECS_MemberProcedureCallContext = ECS_MemberProcedureCallContext;
VisualBasic6Parser.ImplicitCallStmt_InBlockContext = ImplicitCallStmt_InBlockContext;
VisualBasic6Parser.ICS_B_ProcedureCallContext = ICS_B_ProcedureCallContext;
VisualBasic6Parser.ICS_B_MemberProcedureCallContext = ICS_B_MemberProcedureCallContext;
VisualBasic6Parser.ImplicitCallStmt_InStmtContext = ImplicitCallStmt_InStmtContext;
VisualBasic6Parser.ICS_S_VariableOrProcedureCallContext = ICS_S_VariableOrProcedureCallContext;
VisualBasic6Parser.ICS_S_ProcedureOrArrayCallContext = ICS_S_ProcedureOrArrayCallContext;
VisualBasic6Parser.ICS_S_NestedProcedureCallContext = ICS_S_NestedProcedureCallContext;
VisualBasic6Parser.ICS_S_MembersCallContext = ICS_S_MembersCallContext;
VisualBasic6Parser.ICS_S_MemberCallContext = ICS_S_MemberCallContext;
VisualBasic6Parser.ICS_S_DictionaryCallContext = ICS_S_DictionaryCallContext;
VisualBasic6Parser.ArgsCallContext = ArgsCallContext;
VisualBasic6Parser.ArgCallContext = ArgCallContext;
VisualBasic6Parser.DictionaryCallStmtContext = DictionaryCallStmtContext;
VisualBasic6Parser.ArgListContext = ArgListContext;
VisualBasic6Parser.ArgContext = ArgContext;
VisualBasic6Parser.ArgDefaultValueContext = ArgDefaultValueContext;
VisualBasic6Parser.SubscriptsContext = SubscriptsContext;
VisualBasic6Parser.Subscript_Context = Subscript_Context;
VisualBasic6Parser.AmbiguousIdentifierContext = AmbiguousIdentifierContext;
VisualBasic6Parser.AsTypeClauseContext = AsTypeClauseContext;
VisualBasic6Parser.BaseTypeContext = BaseTypeContext;
VisualBasic6Parser.CertainIdentifierContext = CertainIdentifierContext;
VisualBasic6Parser.ComparisonOperatorContext = ComparisonOperatorContext;
VisualBasic6Parser.ComplexTypeContext = ComplexTypeContext;
VisualBasic6Parser.FieldLengthContext = FieldLengthContext;
VisualBasic6Parser.LetterrangeContext = LetterrangeContext;
VisualBasic6Parser.LineLabelContext = LineLabelContext;
VisualBasic6Parser.LiteralContext = LiteralContext;
VisualBasic6Parser.PublicPrivateVisibilityContext = PublicPrivateVisibilityContext;
VisualBasic6Parser.PublicPrivateGlobalVisibilityContext = PublicPrivateGlobalVisibilityContext;
VisualBasic6Parser.Type_Context = Type_Context;
VisualBasic6Parser.TypeHintContext = TypeHintContext;
VisualBasic6Parser.VisibilityContext = VisibilityContext;
VisualBasic6Parser.AmbiguousKeywordContext = AmbiguousKeywordContext;
