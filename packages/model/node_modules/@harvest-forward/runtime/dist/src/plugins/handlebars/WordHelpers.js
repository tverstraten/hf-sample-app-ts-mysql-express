"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WordHelpers = void 0;
const ChangeCase = __importStar(require("change-case"));
const handlebars_1 = __importDefault(require("handlebars"));
const pluralize_1 = __importDefault(require("pluralize"));
const Logging_1 = require("../../runtime/Logging");
class WordHelpers {
    constructor() {
        this.logger = Logging_1.Logging.newLogger(this.constructor.name);
    }
    static registerAll() {
        if (this.helpersRegistered)
            return;
        this.helpersRegistered = true;
        handlebars_1.default.registerHelper('SentenceCase', WordHelpers.prototype.sentenceCase);
        handlebars_1.default.registerHelper('CapitalCase', WordHelpers.prototype.capitalCase);
        handlebars_1.default.registerHelper('ConstantCase', WordHelpers.prototype.constantCase);
        handlebars_1.default.registerHelper('PascalCase', WordHelpers.prototype.pascalCase);
        handlebars_1.default.registerHelper('CamelCase', WordHelpers.prototype.camelCase);
        handlebars_1.default.registerHelper('SnakeCase', WordHelpers.prototype.snakeCase);
        handlebars_1.default.registerHelper('Singular', WordHelpers.prototype.singular);
        handlebars_1.default.registerHelper('Plural', WordHelpers.prototype.plural);
    }
    sentenceCase(aString) {
        return aString ? ChangeCase.sentenceCase(aString) : null;
    }
    capitalCase(aString) {
        return aString ? ChangeCase.capitalCase(aString) : null;
    }
    constantCase(aString) {
        return aString ? ChangeCase.constantCase(aString) : null;
    }
    pascalCase(aString) {
        return aString ? ChangeCase.pascalCase(aString) : null;
    }
    camelCase(aString) {
        return aString ? ChangeCase.camelCase(aString) : null;
    }
    snakeCase(aString) {
        return aString ? ChangeCase.snakeCase(aString) : null;
    }
    singular(aString) {
        return aString ? pluralize_1.default.singular(aString) : null;
    }
    plural(aString) {
        return aString ? pluralize_1.default.plural(aString) : null;
    }
}
exports.WordHelpers = WordHelpers;
WordHelpers.helpersRegistered = false;
