"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MySqlFkHarvester = void 0;
const SystemComponentArtifact_1 = require("../../system/SystemComponentArtifact");
const rdbms_basic_1 = require("../rdbms-basic");
const AbstractMySqlSchemaHarvester_1 = require("./AbstractMySqlSchemaHarvester");
class MySqlFkHarvester extends AbstractMySqlSchemaHarvester_1.AbstractMySqlSchemaHarvester {
    constructor(configurationValues) {
        const nonNullConfigurationValues = configurationValues ? configurationValues : [];
        nonNullConfigurationValues['queryText'] = `SELECT * FROM information_schema.KEY_COLUMN_USAGE WHERE CONSTRAINT_NAME <> 'PRIMARY'`;
        super('MySqlFkHarvester', 'A harvester of basic rdbms foreign keys from a specified database', nonNullConfigurationValues);
    }
    harvestRow(system, __db, row) {
        const results = [];
        const newRow = new rdbms_basic_1.ForeignKey(row['TABLE_SCHEMA'], row['TABLE_NAME'], row['CONSTRAINT_NAME'], row['COLUMN_NAME'], row['REFERENCED_TABLE_SCHEMA'], row['REFERENCED_TABLE_NAME'], '');
        if (this.validForeignKey(newRow)) {
            system.addChild(newRow);
            results.push(new SystemComponentArtifact_1.SystemComponentArtifact(newRow));
        }
        return results;
    }
}
exports.MySqlFkHarvester = MySqlFkHarvester;
