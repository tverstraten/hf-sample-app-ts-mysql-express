/**
 * NOTE: this is a generated file, do not edit it will be overwritten 
 */
import { createConnection, Connection } from "typeorm"
import * as dotenv from "dotenv"
import { User } from "@harvest-forward/hf-model"
import { UserDal } from "./UserDal"

dotenv.config();

export abstract class AbstractDal {

    currentUserId: number

    currentConnection?: Connection

    constructor(userId: number) {
        this.currentUserId = userId
    }

    async getConnection(): Promise<Connection> {
        if (this.currentConnection == null) {
            let connection = await createConnection({
                type: "mysql",
                host: process.env.AWS_REGION,
                port: 3306,
                username: process.env.AWS_REGION,
                password: process.env.AWS_REGION,
                database: process.env.AWS_REGION
            })
            this.currentConnection = connection
        }

        return this.currentConnection
    }

    async getCurrentUser(): Promise<User> {
        let userDal = new UserDal(this.currentUserId)
        let user = await userDal.findOneById(this.currentUserId)
        if (user == null)
            throw Error(`Current user is unknown, their id is ${this.currentUserId}`)
        return user
    }
}