export default class vbParserVisitor {
    visitStart(ctx: any): any;
    visitHexDigit(ctx: any): any;
    visitDecimalDigit(ctx: any): any;
    visitOctalDigit(ctx: any): any;
    visitAlphaCharacter(ctx: any): any;
    visitBooleanLiteral(ctx: any): any;
    visitIntLiteral(ctx: any): any;
    visitHexLiteral(ctx: any): any;
    visitOctalLiteral(ctx: any): any;
    visitIntegerLiteral(ctx: any): any;
    visitIntegerLiteralValue(ctx: any): any;
    visitFloatingPointLiteral(ctx: any): any;
    visitFloatingPointLiteralValue(ctx: any): any;
    visitExponent(ctx: any): any;
    visitSign(ctx: any): any;
    visitSingleTypeCharacter(ctx: any): any;
    visitDoubleTypeCharacter(ctx: any): any;
    visitLongTypeCharacter(ctx: any): any;
    visitStringTypeCharacter(ctx: any): any;
    visitIntegerTypeCharacter(ctx: any): any;
    visitDecimalTypeCharacter(ctx: any): any;
    visitIntegralTypeCharacter(ctx: any): any;
    visitFloatingPointTypeCharacter(ctx: any): any;
    visitMonthValue(ctx: any): any;
    visitDayValue(ctx: any): any;
    visitYearValue(ctx: any): any;
    visitHourValue(ctx: any): any;
    visitMinuteValue(ctx: any): any;
    visitSecondValue(ctx: any): any;
    visitAmpm(ctx: any): any;
    visitDateValue(ctx: any): any;
    visitTimeValue(ctx: any): any;
    visitDateOrTime(ctx: any): any;
    visitDateLiteral(ctx: any): any;
    visitStringCharacter(ctx: any): any;
    visitStringLiteral(ctx: any): any;
    visitCharacterLiteral(ctx: any): any;
    visitIdentifierStart(ctx: any): any;
    visitIdentifierName(ctx: any): any;
    visitIdentifierCharacter(ctx: any): any;
    visitIdentifier(ctx: any): any;
    visitIdentifierOrKeyword(ctx: any): any;
    visitTypeCharacter(ctx: any): any;
    visitLiteral(ctx: any): any;
    visitElseIf(ctx: any): any;
    visitCCStart(ctx: any): any;
    visitCCStatement(ctx: any): any;
    visitCCExpression(ctx: any): any;
    visitCCParenthesizedExpression(ctx: any): any;
    visitCCSimpleNameExpression(ctx: any): any;
    visitCCCastExpression(ctx: any): any;
    visitCCPlusMinus(ctx: any): any;
    visitCCUnaryOperator(ctx: any): any;
    visitCCBinaryOperator(ctx: any): any;
    visitCCConditionalExpression(ctx: any): any;
    visitCCConstantDeclaration(ctx: any): any;
    visitCCIfGroup(ctx: any): any;
    visitCCElseIfGroup(ctx: any): any;
    visitCCElseGroup(ctx: any): any;
    visitRegionStart(ctx: any): any;
    visitRegionStatement(ctx: any): any;
    visitRegionGroup(ctx: any): any;
    visitAccessModifier(ctx: any): any;
    visitTypeParameterList(ctx: any): any;
    visitTypeParameter(ctx: any): any;
    visitVarianceModifier(ctx: any): any;
    visitTypeParameterConstraints(ctx: any): any;
    visitConstraintList(ctx: any): any;
    visitConstraint(ctx: any): any;
    visitAttributes(ctx: any): any;
    visitAttributeBlock(ctx: any): any;
    visitAttributeList(ctx: any): any;
    visitAttribute(ctx: any): any;
    visitAttributeModifier(ctx: any): any;
    visitAttributeArguments(ctx: any): any;
    visitAttributePositionalArgumentList(ctx: any): any;
    visitVariablePropertyInitializerList(ctx: any): any;
    visitVariablePropertyInitializer(ctx: any): any;
    visitAttributeArgumentExpression(ctx: any): any;
    visitStatementTerminator(ctx: any): any;
    visitAttributesStatement(ctx: any): any;
    visitOptionStatement(ctx: any): any;
    visitOptionExplicitStatement(ctx: any): any;
    visitOnOff(ctx: any): any;
    visitOptionStrictStatement(ctx: any): any;
    visitOptionCompareStatement(ctx: any): any;
    visitCompareOption(ctx: any): any;
    visitOptionInferStatement(ctx: any): any;
    visitImportsStatement(ctx: any): any;
    visitImportsClauses(ctx: any): any;
    visitImportsClause(ctx: any): any;
    visitAliasImportsClause(ctx: any): any;
    visitMembersImportsClause(ctx: any): any;
    visitXMLNamespaceImportsClause(ctx: any): any;
    visitXMLNamespaceValue(ctx: any): any;
    visitNamespaceDeclaration(ctx: any): any;
    visitNamespaceName(ctx: any): any;
    visitRelativeNamespaceName(ctx: any): any;
    visitNamespaceMemberDeclaration(ctx: any): any;
    visitTypeDeclaration(ctx: any): any;
    visitNonModuleDeclaration(ctx: any): any;
    visitTypeName(ctx: any): any;
    visitNonArrayTypeName(ctx: any): any;
    visitSimpleTypeName(ctx: any): any;
    visitQualifiedTypeName(ctx: any): any;
    visitTypeArguments(ctx: any): any;
    visitTypeArgumentList(ctx: any): any;
    visitBuiltInTypeName(ctx: any): any;
    visitTypeModifier(ctx: any): any;
    visitIdentifierModifiers(ctx: any): any;
    visitNullableNameModifier(ctx: any): any;
    visitTypeImplementsClause(ctx: any): any;
    visitTypeImplements(ctx: any): any;
    visitPrimitiveTypeName(ctx: any): any;
    visitNumericTypeName(ctx: any): any;
    visitIntegralTypeName(ctx: any): any;
    visitFloatingPointTypeName(ctx: any): any;
    visitEnumDeclaration(ctx: any): any;
    visitEnumMemberDeclaration(ctx: any): any;
    visitClassDeclaration(ctx: any): any;
    visitClassModifier(ctx: any): any;
    visitClassBase(ctx: any): any;
    visitClassMemberDeclaration(ctx: any): any;
    visitStructureDeclaration(ctx: any): any;
    visitStructureModifier(ctx: any): any;
    visitStructMemberDeclaration(ctx: any): any;
    visitModuleDeclaration(ctx: any): any;
    visitModuleMemberDeclaration(ctx: any): any;
    visitInterfaceDeclaration(ctx: any): any;
    visitInterfaceBase(ctx: any): any;
    visitInterfaceBases(ctx: any): any;
    visitInterfaceMemberDeclaration(ctx: any): any;
    visitArrayTypeName(ctx: any): any;
    visitArrayTypeModifiers(ctx: any): any;
    visitArrayTypeModifier(ctx: any): any;
    visitRankList(ctx: any): any;
    visitArrayNameModifier(ctx: any): any;
    visitDelegateDeclaration(ctx: any): any;
    visitMethodSignature(ctx: any): any;
    visitImplementsClause(ctx: any): any;
    visitImplementsList(ctx: any): any;
    visitInterfaceMemberSpecifier(ctx: any): any;
    visitMethodMemberDeclaration(ctx: any): any;
    visitInterfaceMethodMemberDeclaration(ctx: any): any;
    visitMethodDeclaration(ctx: any): any;
    visitInterfaceMethodDeclaration(ctx: any): any;
    visitSubSignature(ctx: any): any;
    visitFunctionSignature(ctx: any): any;
    visitSubDeclaration(ctx: any): any;
    visitMustOverrideSubDeclaration(ctx: any): any;
    visitInterfaceSubDeclaration(ctx: any): any;
    visitFunctionDeclaration(ctx: any): any;
    visitMustOverrideFunctionDeclaration(ctx: any): any;
    visitInterfaceFunctionDeclaration(ctx: any): any;
    visitProcedureModifier(ctx: any): any;
    visitMustOverrideProcedureModifier(ctx: any): any;
    visitInterfaceProcedureModifier(ctx: any): any;
    visitHandlesOrImplements(ctx: any): any;
    visitExternalMethodDeclaration(ctx: any): any;
    visitExternalSubDeclaration(ctx: any): any;
    visitExternalFunctionDeclaration(ctx: any): any;
    visitExternalMethodModifier(ctx: any): any;
    visitCharsetModifier(ctx: any): any;
    visitLibraryClause(ctx: any): any;
    visitAliasClause(ctx: any): any;
    visitParameterList(ctx: any): any;
    visitParameter(ctx: any): any;
    visitParameterModifier(ctx: any): any;
    visitParameterIdentifier(ctx: any): any;
    visitHandlesClause(ctx: any): any;
    visitEventHandlesList(ctx: any): any;
    visitEventMemberSpecifier(ctx: any): any;
    visitConstructorMemberDeclaration(ctx: any): any;
    visitConstructorModifier(ctx: any): any;
    visitEventMemberDeclaration(ctx: any): any;
    visitRegularEventMemberDeclaration(ctx: any): any;
    visitInterfaceEventMemberDeclaration(ctx: any): any;
    visitParametersOrType(ctx: any): any;
    visitEventModifiers(ctx: any): any;
    visitInterfaceEventModifiers(ctx: any): any;
    visitCustomEventMemberDeclaration(ctx: any): any;
    visitEventAccessorDeclaration(ctx: any): any;
    visitAddHandlerDeclaration(ctx: any): any;
    visitRemoveHandlerDeclaration(ctx: any): any;
    visitRaiseEventDeclaration(ctx: any): any;
    visitConstantMemberDeclaration(ctx: any): any;
    visitConstantModifier(ctx: any): any;
    visitConstantDeclarators(ctx: any): any;
    visitConstantDeclarator(ctx: any): any;
    visitVariableMemberDeclaration(ctx: any): any;
    visitVariableModifier(ctx: any): any;
    visitVariableDeclarators(ctx: any): any;
    visitVariableDeclarator(ctx: any): any;
    visitVariableIdentifiers(ctx: any): any;
    visitVariableIdentifier(ctx: any): any;
    visitArraySizeInitializationModifier(ctx: any): any;
    visitBoundList(ctx: any): any;
    visitBound(ctx: any): any;
    visitPropertyMemberDeclaration(ctx: any): any;
    visitPropertySignature(ctx: any): any;
    visitRegularPropertyMemberDeclaration(ctx: any): any;
    visitMustOverridePropertyMemberDeclaration(ctx: any): any;
    visitAutoPropertyMemberDeclaration(ctx: any): any;
    visitInterfacePropertyMemberDeclaration(ctx: any): any;
    visitAutoPropertyModifier(ctx: any): any;
    visitPropertyModifier(ctx: any): any;
    visitMustOverridePropertyModifier(ctx: any): any;
    visitInterfacePropertyModifier(ctx: any): any;
    visitPropertyAccessorDeclaration(ctx: any): any;
    visitPropertyGetDeclaration(ctx: any): any;
    visitPropertySetDeclaration(ctx: any): any;
    visitOperatorDeclaration(ctx: any): any;
    visitOperatorModifier(ctx: any): any;
    visitOverloadableOperator(ctx: any): any;
    visitStatement(ctx: any): any;
    visitBlock(ctx: any): any;
    visitLabelDeclarationStatement(ctx: any): any;
    visitLabelName(ctx: any): any;
    visitStatements(ctx: any): any;
    visitLocalDeclarationStatement(ctx: any): any;
    visitLocalModifier(ctx: any): any;
    visitWithStatement(ctx: any): any;
    visitSyncLockStatement(ctx: any): any;
    visitEventStatement(ctx: any): any;
    visitRaiseEventStatement(ctx: any): any;
    visitAddHandlerStatement(ctx: any): any;
    visitRemoveHandlerStatement(ctx: any): any;
    visitAssignmentStatement(ctx: any): any;
    visitRegularAssignmentStatement(ctx: any): any;
    visitCompoundAssignmentStatement(ctx: any): any;
    visitCompoundBinaryOperator(ctx: any): any;
    visitMidAssignmentStatement(ctx: any): any;
    visitInvocationStatement(ctx: any): any;
    visitConditionalStatement(ctx: any): any;
    visitIfStatement(ctx: any): any;
    visitBlockIfStatement(ctx: any): any;
    visitElseIfStatement(ctx: any): any;
    visitElseStatement(ctx: any): any;
    visitLineIfThenStatement(ctx: any): any;
    visitSelectStatement(ctx: any): any;
    visitCaseStatement(ctx: any): any;
    visitCaseClauses(ctx: any): any;
    visitCaseClause(ctx: any): any;
    visitComparisonOperator(ctx: any): any;
    visitCaseElseStatement(ctx: any): any;
    visitLoopStatement(ctx: any): any;
    visitWhileStatement(ctx: any): any;
    visitDoLoopStatement(ctx: any): any;
    visitDoTopLoopStatement(ctx: any): any;
    visitDoBottomLoopStatement(ctx: any): any;
    visitWhileOrUntil(ctx: any): any;
    visitForStatement(ctx: any): any;
    visitLoopControlVariable(ctx: any): any;
    visitNextExpressionList(ctx: any): any;
    visitForEachStatement(ctx: any): any;
    visitErrorHandlingStatement(ctx: any): any;
    visitStructuredErrorStatement(ctx: any): any;
    visitTryStatement(ctx: any): any;
    visitFinallyStatement(ctx: any): any;
    visitCatchStatement(ctx: any): any;
    visitThrowStatement(ctx: any): any;
    visitUnstructuredErrorStatement(ctx: any): any;
    visitErrorStatement(ctx: any): any;
    visitOnErrorStatement(ctx: any): any;
    visitErrorClause(ctx: any): any;
    visitResumeStatement(ctx: any): any;
    visitResumeClause(ctx: any): any;
    visitBranchStatement(ctx: any): any;
    visitGoToStatement(ctx: any): any;
    visitExitStatement(ctx: any): any;
    visitExitKind(ctx: any): any;
    visitContinueStatement(ctx: any): any;
    visitContinueKind(ctx: any): any;
    visitStopStatement(ctx: any): any;
    visitEndStatement(ctx: any): any;
    visitReturnStatement(ctx: any): any;
    visitArrayHandlingStatement(ctx: any): any;
    visitRedimStatement(ctx: any): any;
    visitRedimClauses(ctx: any): any;
    visitRedimClause(ctx: any): any;
    visitEraseStatement(ctx: any): any;
    visitEraseExpressions(ctx: any): any;
    visitUsingStatement(ctx: any): any;
    visitUsingResources(ctx: any): any;
    visitAwaitStatement(ctx: any): any;
    visitYieldStatement(ctx: any): any;
    visitExpression(ctx: any): any;
    visitMemberAccessBase(ctx: any): any;
    visitConstantExpression(ctx: any): any;
    visitSimpleExpression(ctx: any): any;
    visitLiteralExpression(ctx: any): any;
    visitParenthesizedExpression(ctx: any): any;
    visitInstanceExpression(ctx: any): any;
    visitSimpleNameExpression(ctx: any): any;
    visitAddressOfExpression(ctx: any): any;
    visitGetTypeExpression(ctx: any): any;
    visitGetTypeTypeName(ctx: any): any;
    visitQualifiedOpenTypeName(ctx: any): any;
    visitTypeArityList(ctx: any): any;
    visitCommaList(ctx: any): any;
    visitTypeOfIsExpression(ctx: any): any;
    visitGetXmlNamespaceExpression(ctx: any): any;
    visitArgumentList(ctx: any): any;
    visitPositionalArgumentList(ctx: any): any;
    visitNamedArgumentList(ctx: any): any;
    visitNewExpression(ctx: any): any;
    visitObjectCreationExpression(ctx: any): any;
    visitObjectCreationExpressionInitializer(ctx: any): any;
    visitObjectMemberInitializer(ctx: any): any;
    visitFieldInitializerList(ctx: any): any;
    visitFieldInitializer(ctx: any): any;
    visitObjectCollectionInitializer(ctx: any): any;
    visitCollectionInitializer(ctx: any): any;
    visitCollectionElementList(ctx: any): any;
    visitCollectionElement(ctx: any): any;
    visitArrayExpression(ctx: any): any;
    visitArrayCreationExpression(ctx: any): any;
    visitArrayLiteralExpression(ctx: any): any;
    visitAnonymousObjectCreationExpression(ctx: any): any;
    visitCastExpression(ctx: any): any;
    visitCastTarget(ctx: any): any;
    visitUnaryPlusExpression(ctx: any): any;
    visitUnaryMinusExpression(ctx: any): any;
    visitBooleanExpression(ctx: any): any;
    visitLambdaExpression(ctx: any): any;
    visitSingleLineLambda(ctx: any): any;
    visitMultiLineLambda(ctx: any): any;
    visitMultiLineFunctionLambda(ctx: any): any;
    visitMultiLineSubLambda(ctx: any): any;
    visitLambdaModifier(ctx: any): any;
    visitQueryExpression(ctx: any): any;
    visitFromOrAggregateQueryOperator(ctx: any): any;
    visitQueryOperator(ctx: any): any;
    visitJoinOrGroupJoinQueryOperator(ctx: any): any;
    visitCollectionRangeVariableDeclarationList(ctx: any): any;
    visitCollectionRangeVariableDeclaration(ctx: any): any;
    visitExpressionRangeVariableDeclarationList(ctx: any): any;
    visitExpressionRangeVariableDeclaration(ctx: any): any;
    visitFromQueryOperator(ctx: any): any;
    visitJoinQueryOperator(ctx: any): any;
    visitJoinConditionList(ctx: any): any;
    visitJoinCondition(ctx: any): any;
    visitLetQueryOperator(ctx: any): any;
    visitSelectQueryOperator(ctx: any): any;
    visitDistinctQueryOperator(ctx: any): any;
    visitWhereQueryOperator(ctx: any): any;
    visitPartitionQueryOperator(ctx: any): any;
    visitOrderByQueryOperator(ctx: any): any;
    visitOrderExpressionList(ctx: any): any;
    visitOrderExpression(ctx: any): any;
    visitOrdering(ctx: any): any;
    visitGroupByQueryOperator(ctx: any): any;
    visitAggregateQueryOperator(ctx: any): any;
    visitGroupJoinQueryOperator(ctx: any): any;
    visitConditionalExpression(ctx: any): any;
    visitXMLLiteralExpression(ctx: any): any;
    visitXMLEmbeddedExpression(ctx: any): any;
    visitXMLDocument(ctx: any): any;
    visitXMLDocumentPrologue(ctx: any): any;
    visitXMLVersion(ctx: any): any;
    visitXMLVersionNumberValue(ctx: any): any;
    visitXMLEncoding(ctx: any): any;
    visitXMLEncodingNameValue(ctx: any): any;
    visitXMLEncodingName(ctx: any): any;
    visitXMLEncodingNameCharacter(ctx: any): any;
    visitXMLStandalone(ctx: any): any;
    visitXMLYesNoValue(ctx: any): any;
    visitXMLYesNo(ctx: any): any;
    visitXMLMisc(ctx: any): any;
    visitXMLDocumentBody(ctx: any): any;
    visitXMLElement(ctx: any): any;
    visitXMLEmptyElement(ctx: any): any;
    visitXMLElementStart(ctx: any): any;
    visitXMLElementEnd(ctx: any): any;
    visitXMLContent(ctx: any): any;
    visitXMLNestedContent(ctx: any): any;
    visitXMLAttribute(ctx: any): any;
    visitXMLAttributeName(ctx: any): any;
    visitXMLAttributeValue(ctx: any): any;
    visitXMLAttributeDoubleQuoteValueCharacter(ctx: any): any;
    visitXMLAttributeSingleQuoteValueCharacter(ctx: any): any;
    visitXMLReference(ctx: any): any;
    visitXMLEntityReference(ctx: any): any;
    visitXMLCharacterReference(ctx: any): any;
    visitXMLNamespaceAttributeName(ctx: any): any;
    visitXMLPrefixedNamespaceAttributeName(ctx: any): any;
    visitXMLDefaultNamespaceAttributeName(ctx: any): any;
    visitXMLNamespaceName(ctx: any): any;
    visitXMLNamespaceNameCharacter(ctx: any): any;
    visitXMLQualifiedNameOrExpression(ctx: any): any;
    visitXMLQualifiedName(ctx: any): any;
    visitXMLPrefixedName(ctx: any): any;
    visitXMLUnprefixedName(ctx: any): any;
    visitXMLProcessingInstruction(ctx: any): any;
    visitXMLComment(ctx: any): any;
    visitXMLCDATASection(ctx: any): any;
    visitAwaitOperatorExpression(ctx: any): any;
}
//# sourceMappingURL=vbParserVisitor.d.ts.map