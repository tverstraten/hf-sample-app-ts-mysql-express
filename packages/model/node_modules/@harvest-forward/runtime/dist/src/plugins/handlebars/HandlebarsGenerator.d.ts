import { AbstractSingularBuilder } from '../../runtime/AbstractSingularBuilder';
import { Artifact } from '../../system/Artifact';
import { System } from '../../system/System';
import { SystemComponent } from '../../system/SystemComponent';
export declare class HandlebarsGenerator extends AbstractSingularBuilder {
    private static helpersRegistered;
    private static templatePathParameterDefinition;
    private static templateNameParameterDefinition;
    private static targetPathParameterDefinition;
    private static fileNamePatternParameterDefinition;
    private static fileNameFunctionParameterDefinition;
    private static repeatForParameterDefinition;
    private static overwriteParameterDefinition;
    constructor(configurationValues?: Record<string, any>);
    protected getTemplateBody(): Promise<string>;
    protected _doesConfigurationWork(): Promise<boolean>;
    protected registerHelpers(): Promise<void>;
    private performTemplate;
    private getFileName;
    protected buildInternal(__system: System, component: SystemComponent): Promise<Artifact[]>;
}
//# sourceMappingURL=HandlebarsGenerator.d.ts.map