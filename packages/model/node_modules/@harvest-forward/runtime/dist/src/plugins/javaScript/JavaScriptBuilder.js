"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.JavaScriptBuilder = void 0;
const AbstractSingularBuilder_1 = require("../../runtime/AbstractSingularBuilder");
const System_1 = require("../../system/System");
const SystemComponent_1 = require("../../system/SystemComponent");
const ValueType_1 = require("../../system/ValueType");
const LogAsyncMethod_1 = require("../../util/LogAsyncMethod");
class JavaScriptBuilder extends AbstractSingularBuilder_1.AbstractSingularBuilder {
    constructor(configurationValues) {
        super('scriptToRun', 'A builder that executes arbitrary JavaScript code', {
            scriptToRun: {
                name: 'scriptToRun',
                required: true,
                description: `The JavaScript to invoke, it should have the signature of Builder.build 'function(system: System, component: SystemComponent): Promise<Artifact[]>, for example function( system, component ){ return [ system ] }'`,
                valueType: ValueType_1.ValueType.STRING,
                defaultValue: ``,
            },
        }, configurationValues ? configurationValues : []);
    }
    async buildInternal(system, component) {
        const scriptBody = this.getConfiguredValue('scriptToRun');
        const wrap = (__stub) => `{ return ${scriptBody} };`;
        const functionToExecute = new Function(wrap(scriptBody));
        return functionToExecute.call(null).call(null, system, component);
    }
}
__decorate([
    (0, LogAsyncMethod_1.LogAsyncMethod)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [System_1.System, SystemComponent_1.SystemComponent]),
    __metadata("design:returntype", Promise)
], JavaScriptBuilder.prototype, "buildInternal", null);
exports.JavaScriptBuilder = JavaScriptBuilder;
