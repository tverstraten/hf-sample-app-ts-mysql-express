"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RelationalStorage = void 0;
const pluralize_1 = __importDefault(require("pluralize"));
const Column_1 = require("./Column");
const RelationalComponent_1 = require("./RelationalComponent");
class RelationalStorage extends RelationalComponent_1.RelationalComponent {
    constructor(objectType, schemaName, tableName, description, tableType, componentType) {
        super(objectType, schemaName, schemaName, tableName, componentType, description);
        this.tableType = tableType;
        this._columns = {};
        if (!pluralize_1.default.isPlural(tableName) && pluralize_1.default.isSingular(tableName)) {
            this._singularName = tableName;
            this._pluralName = pluralize_1.default.plural(tableName);
        }
        else {
            this._singularName = pluralize_1.default.singular(tableName);
            this._pluralName = tableName;
        }
    }
    setNames(nameSpace, name) {
        super.setNames(nameSpace, name);
        if (!pluralize_1.default.isPlural(name) && pluralize_1.default.isSingular(name)) {
            this._singularName = name;
            this._pluralName = pluralize_1.default.plural(name);
        }
        else {
            this._singularName = pluralize_1.default.singular(name);
            this._pluralName = name;
        }
    }
    get singularName() {
        return this._singularName;
    }
    get pluralName() {
        return this._pluralName;
    }
    get columns() {
        return this._columns;
    }
    addChild(child) {
        super.addChild(child);
        this.database.addDescendant(child);
        if (child instanceof Column_1.Column)
            this._columns[child.constantCaseName] = child;
    }
    removeChild(child) {
        this.database.removeDescendant(child);
        if (child instanceof Column_1.Column)
            delete this._columns[child.constantCaseName];
        return super.removeChild(child);
    }
}
exports.RelationalStorage = RelationalStorage;
