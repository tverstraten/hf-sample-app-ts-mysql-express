import { ValueType } from '../../system/ValueType';
import { Constraint } from './Constraint';
import { Domain } from './Domain';
import { ForeignKey } from './ForeignKey';
import { RelationalComponent } from './RelationalComponent';
import { Table } from './Table';
import { View } from './View';
export declare class Column extends RelationalComponent {
    private _tableName;
    private _storage?;
    ordinalPosition: number;
    columnDefault: any;
    isNullable: boolean;
    isIdentity: boolean;
    dataType: string;
    valueType: ValueType;
    inDomain?: Domain;
    characterMaximumLength: number;
    ansiTypeDeclaration: string;
    foreignKey?: ForeignKey;
    constraint?: Constraint;
    constructor(schemaName: string, tableName: string, name: string, description: string, dataType: string, valueType: ValueType, characterMaximumLength: number, ansiTypeDeclaration: string);
    static computeFullName(schemaName: string, tableName: string): string;
    get tableName(): string;
    set tableName(value: string);
    set nameSpace(value: string);
    get storage(): Table | View | undefined;
    set storage(value: Table | View | undefined);
    get discriminator(): boolean;
}
//# sourceMappingURL=Column.d.ts.map