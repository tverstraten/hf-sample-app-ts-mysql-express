declare class vbLexer {
    static grammarFileName: string;
    static channelNames: string[];
    static modeNames: string[];
    static literalNames: (string | null)[];
    static symbolicNames: (string | null)[];
    static ruleNames: string[];
    constructor(input: any);
    _interp: any;
    get atn(): any;
}
declare namespace vbLexer {
    const EOF: any;
    const ADDHANDLER: number;
    const ADDRESSOF: number;
    const AGGREGATE: number;
    const ALIAS: number;
    const AND: number;
    const ANDALSO: number;
    const ANSI: number;
    const AS: number;
    const ASCENDING: number;
    const ASSEMBLY: number;
    const ASYNC: number;
    const AUTO: number;
    const AWAIT: number;
    const BINARY: number;
    const BOOLEAN: number;
    const BY: number;
    const BYREF: number;
    const BYTE: number;
    const BYVAL: number;
    const CALL: number;
    const CASE: number;
    const CATCH: number;
    const CBOOL: number;
    const CBYTE: number;
    const CCHAR: number;
    const CDATE: number;
    const CDBL: number;
    const CDEC: number;
    const CHAR: number;
    const CINT: number;
    const CLASS: number;
    const CLNG: number;
    const COBJ: number;
    const COMPARE: number;
    const CONST: number;
    const CONTINUE: number;
    const CSBYTE: number;
    const CSHORT: number;
    const CSNG: number;
    const CSTR: number;
    const CTYPE: number;
    const CUINT: number;
    const CULNG: number;
    const CUSHORT: number;
    const CUSTOM: number;
    const DATE: number;
    const DECIMAL: number;
    const DECLARE: number;
    const DEFAULT: number;
    const DELEGATE: number;
    const DESCENDING: number;
    const DIM: number;
    const DIRECTCAST: number;
    const DISTINCT: number;
    const DO: number;
    const DOUBLE: number;
    const EACH: number;
    const ELSE: number;
    const ELSEIF: number;
    const END: number;
    const ENUM: number;
    const EQUALSKEYWORD: number;
    const ERASE: number;
    const ERROR: number;
    const EVENT: number;
    const EXIT: number;
    const EXPLICIT: number;
    const FINALLY: number;
    const FOR: number;
    const FRIEND: number;
    const FROM: number;
    const FUNCTION: number;
    const GET: number;
    const GETTYPE: number;
    const GLOBAL: number;
    const GOTO: number;
    const GROUP: number;
    const HANDLES: number;
    const IF: number;
    const IMPLEMENTS: number;
    const IMPORTS: number;
    const IN: number;
    const INFER: number;
    const INHERITS: number;
    const INTEGER: number;
    const INTERFACE: number;
    const INTO: number;
    const IS: number;
    const IS_FALSE: number;
    const IS_TRUE: number;
    const ISNOT: number;
    const ITERATOR: number;
    const JOIN: number;
    const KEY: number;
    const LET: number;
    const LIB: number;
    const LIKE: number;
    const LONG: number;
    const LOOP: number;
    const ME: number;
    const MID: number;
    const MOD: number;
    const MODULE: number;
    const MUST_INHERIT: number;
    const MUSTOVERRIDE: number;
    const MYBASE: number;
    const MYCLASS: number;
    const NAMESPACE: number;
    const NARROWING: number;
    const NEW: number;
    const NEXT: number;
    const NOT: number;
    const NOT_INHERITABLE: number;
    const NOTHING: number;
    const NOTOVERRIDABLE: number;
    const OBJECT: number;
    const OF: number;
    const OFF: number;
    const ON: number;
    const OPERATORKEYWORD: number;
    const OPTION: number;
    const OPTIONAL: number;
    const OR: number;
    const ORDER: number;
    const ORELSE: number;
    const OUT: number;
    const OVERLOADS: number;
    const OVERRIDABLE: number;
    const OVERRIDES: number;
    const PARAM_ARRAY: number;
    const PARTIAL: number;
    const PRESERVE: number;
    const PRIVATE: number;
    const PROPERTY: number;
    const PROTECTED: number;
    const PUBLIC: number;
    const RAISEEVENT: number;
    const READONLY: number;
    const REDIM: number;
    const REGION: number;
    const REM: number;
    const REMOVEHANDLER: number;
    const RESUME: number;
    const RETURN: number;
    const SBYTE: number;
    const SELECT: number;
    const SET: number;
    const SHADOWS: number;
    const SHARED: number;
    const SHORT: number;
    const SINGLE: number;
    const SKIP_KEYWORD: number;
    const STATIC: number;
    const STEP: number;
    const STOP: number;
    const STRICT: number;
    const STRING: number;
    const STRUCTURE: number;
    const SUB: number;
    const SYNCLOCK: number;
    const TAKE: number;
    const TEXT: number;
    const THEN: number;
    const THROW: number;
    const TO: number;
    const TRY: number;
    const TRYCAST: number;
    const TYPEOF: number;
    const UINTEGER: number;
    const ULONG: number;
    const UNICODE: number;
    const UNTIL: number;
    const USHORT: number;
    const USING: number;
    const When: number;
    const WHEN: number;
    const WHERE: number;
    const WHILE: number;
    const WIDENING: number;
    const WITH: number;
    const WITH_EVENTS: number;
    const WRITEONLY: number;
    const XOR: number;
    const YIELD: number;
    const GET_XML_NAMESPACE: number;
    const XML9: number;
    const XMLA: number;
    const XMLD: number;
    const XMLLetter: number;
    const XMLDigit: number;
    const XMLCombiningCharacter: number;
    const XMLExtender: number;
    const XMLString: number;
    const XMLWhitespace: number;
    const XMLWhitespaceCharacter: number;
    const XMLProcessingTarget: number;
    const XMLProcessingValue: number;
    const XMLCharacter: number;
    const XMLLatinAlphaCharacter: number;
    const XMLNumericCharacter: number;
    const XMLHexNumericCharacter: number;
    const XMLPeriodCharacter: number;
    const XMLUnderscoreCharacter: number;
    const XMLDashCharacter: number;
    const XMLCommentCharacter: number;
    const XMLCDATASectionString: number;
    const XMLCharacterData: number;
    const XMLCharacterDataString: number;
    const VERSION: number;
    const XML: number;
    const CDATA: number;
    const XMLNS: number;
    const ENCODING: number;
    const STANDALONE: number;
    const YES: number;
    const NO: number;
    const XMLEntityName: number;
    const XMLNamespaceNameStartCharacter: number;
    const XMLNotDoubleQuote: number;
    const XMLNotSingleQuote: number;
    const ZERO: number;
    const ONE: number;
    const TWO: number;
    const THREE: number;
    const FOUR: number;
    const FIVE: number;
    const SIX: number;
    const SEVEN: number;
    const EIGHT: number;
    const NINE: number;
    const LINE_TERMINATOR: number;
    const SINGLE_QUOTE_CHAR: number;
    const DOUBLE_QUOTE_CHARACTER: number;
    const QUESTION_MARK: number;
    const COMMA: number;
    const ASTERISK: number;
    const EQUALS: number;
    const LEFT_ARROW: number;
    const RIGHT_ARROW: number;
    const SLASH: number;
    const DOUBLE_BACK_SLASH: number;
    const CARET: number;
    const COLON: number;
    const SEMICOLON: number;
    const AMPERSAND: number;
    const EXCLAMATION: number;
    const POUND: number;
    const UNDERSCORE: number;
    const PERIOD: number;
    const MINUS: number;
    const PLUS: number;
    const PERCENT: number;
    const DOLLAR: number;
    const AT: number;
    const LEFT_PAREN: number;
    const RIGHT_PAREN: number;
    const LEFT_BRACE: number;
    const RIGHT_BRACE: number;
    const LEFT_SQUARE_BRACKET: number;
    const RIGHT_SQUARE_BRACKET: number;
    const SHORT_CHARACTER: number;
    const UNSIGNED_SHORT_CHARACTER: number;
    const INTEGER_CHARACTER: number;
    const UNSIGNED_INTEGER_CHARACTER: number;
    const LONG_CHARACTER: number;
    const UNSIGNED_LONG_CHARACTER: number;
    const SINGLE_CHARACTER: number;
    const DOUBLE_CHARACTER: number;
    const DECIMAL_CHARACTER: number;
    const A: number;
    const B: number;
    const C: number;
    const D: number;
    const E: number;
    const F: number;
    const G: number;
    const H: number;
    const I: number;
    const J: number;
    const K: number;
    const L: number;
    const M: number;
    const N: number;
    const O: number;
    const P: number;
    const Q: number;
    const R: number;
    const S: number;
    const T: number;
    const U: number;
    const V: number;
    const W: number;
    const X: number;
    const Y: number;
    const Z: number;
    const WS: number;
}
export default vbLexer;
//# sourceMappingURL=vbLexer.d.ts.map