"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MySqlConstraintHarvester = void 0;
const SystemComponentArtifact_1 = require("../../system/SystemComponentArtifact");
const rdbms_basic_1 = require("../rdbms-basic");
const AbstractMySqlSchemaHarvester_1 = require("./AbstractMySqlSchemaHarvester");
class MySqlConstraintHarvester extends AbstractMySqlSchemaHarvester_1.AbstractMySqlSchemaHarvester {
    constructor(configurationValues) {
        const nonNullConfigurationValues = configurationValues ? configurationValues : [];
        nonNullConfigurationValues['queryText'] = `SELECT * FROM information_schema.CHECK_CONSTRAINTS`;
        super('MySqlConstraintHarvester', 'A harvester of basic rdbms constraints from a specified database', nonNullConfigurationValues);
    }
    harvestRow(system, __db, row) {
        const results = [];
        const newRow = new rdbms_basic_1.Constraint(row['CONSTRAINT_SCHEMA'], row['TABLE_NAME'], row['CONSTRAINT_NAME'], '', '', row['CHECK_CLAUSE']);
        if (this.validConstraint(newRow)) {
            system.addChild(newRow);
            results.push(new SystemComponentArtifact_1.SystemComponentArtifact(newRow));
        }
        return results;
    }
}
exports.MySqlConstraintHarvester = MySqlConstraintHarvester;
