export function Python3ParserVisitor(): this;
export class Python3ParserVisitor {
    constructor: typeof Python3ParserVisitor;
    visitSingle_input(ctx: any): any;
    visitFile_input(ctx: any): any;
    visitEval_input(ctx: any): any;
    visitDecorator(ctx: any): any;
    visitDecorators(ctx: any): any;
    visitDecorated(ctx: any): any;
    visitAsync_funcdef(ctx: any): any;
    visitFuncdef(ctx: any): any;
    visitParameters(ctx: any): any;
    visitTypedargslist(ctx: any): any;
    visitTfpdef(ctx: any): any;
    visitVarargslist(ctx: any): any;
    visitVfpdef(ctx: any): any;
    visitStmt(ctx: any): any;
    visitSimple_stmt(ctx: any): any;
    visitSmall_stmt(ctx: any): any;
    visitExpr_stmt(ctx: any): any;
    visitAnnassign(ctx: any): any;
    visitTestlist_star_expr(ctx: any): any;
    visitAugassign(ctx: any): any;
    visitDel_stmt(ctx: any): any;
    visitPass_stmt(ctx: any): any;
    visitFlow_stmt(ctx: any): any;
    visitBreak_stmt(ctx: any): any;
    visitContinue_stmt(ctx: any): any;
    visitReturn_stmt(ctx: any): any;
    visitYield_stmt(ctx: any): any;
    visitRaise_stmt(ctx: any): any;
    visitImport_stmt(ctx: any): any;
    visitImport_name(ctx: any): any;
    visitImport_from(ctx: any): any;
    visitImport_as_name(ctx: any): any;
    visitDotted_as_name(ctx: any): any;
    visitImport_as_names(ctx: any): any;
    visitDotted_as_names(ctx: any): any;
    visitDotted_name(ctx: any): any;
    visitGlobal_stmt(ctx: any): any;
    visitNonlocal_stmt(ctx: any): any;
    visitAssert_stmt(ctx: any): any;
    visitCompound_stmt(ctx: any): any;
    visitAsync_stmt(ctx: any): any;
    visitIf_stmt(ctx: any): any;
    visitWhile_stmt(ctx: any): any;
    visitFor_stmt(ctx: any): any;
    visitTry_stmt(ctx: any): any;
    visitWith_stmt(ctx: any): any;
    visitWith_item(ctx: any): any;
    visitExcept_clause(ctx: any): any;
    visitSuite(ctx: any): any;
    visitTest(ctx: any): any;
    visitTest_nocond(ctx: any): any;
    visitLambdef(ctx: any): any;
    visitLambdef_nocond(ctx: any): any;
    visitOr_test(ctx: any): any;
    visitAnd_test(ctx: any): any;
    visitNot_test(ctx: any): any;
    visitComparison(ctx: any): any;
    visitComp_op(ctx: any): any;
    visitStar_expr(ctx: any): any;
    visitExpr(ctx: any): any;
    visitXor_expr(ctx: any): any;
    visitAnd_expr(ctx: any): any;
    visitShift_expr(ctx: any): any;
    visitArith_expr(ctx: any): any;
    visitTerm(ctx: any): any;
    visitFactor(ctx: any): any;
    visitPower(ctx: any): any;
    visitAtom_expr(ctx: any): any;
    visitAtom(ctx: any): any;
    visitTestlist_comp(ctx: any): any;
    visitTrailer(ctx: any): any;
    visitSubscriptlist(ctx: any): any;
    visitSubscript(ctx: any): any;
    visitSliceop(ctx: any): any;
    visitExprlist(ctx: any): any;
    visitTestlist(ctx: any): any;
    visitDictorsetmaker(ctx: any): any;
    visitClassdef(ctx: any): any;
    visitArglist(ctx: any): any;
    visitArgument(ctx: any): any;
    visitComp_iter(ctx: any): any;
    visitComp_for(ctx: any): any;
    visitComp_if(ctx: any): any;
    visitEncoding_decl(ctx: any): any;
    visitYield_expr(ctx: any): any;
    visitYield_arg(ctx: any): any;
}
//# sourceMappingURL=Python3ParserVisitor.d.ts.map