"use strict";
var antlr4 = require('antlr4/index');
function Java9ParserVisitor() {
    antlr4.tree.ParseTreeVisitor.call(this);
    return this;
}
Java9ParserVisitor.prototype = Object.create(antlr4.tree.ParseTreeVisitor.prototype);
Java9ParserVisitor.prototype.constructor = Java9ParserVisitor;
Java9ParserVisitor.prototype.visitLiteral = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitPrimitiveType = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitNumericType = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitIntegralType = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitFloatingPointType = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitReferenceType = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitClassOrInterfaceType = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitClassType = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitClassType_lf_classOrInterfaceType = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitClassType_lfno_classOrInterfaceType = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitInterfaceType = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitInterfaceType_lf_classOrInterfaceType = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitInterfaceType_lfno_classOrInterfaceType = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitTypeVariable = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitArrayType = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitDims = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitTypeParameter = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitTypeParameterModifier = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitTypeBound = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitAdditionalBound = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitTypeArguments = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitTypeArgumentList = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitTypeArgument = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitWildcard = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitWildcardBounds = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitModuleName = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitPackageName = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitTypeName = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitPackageOrTypeName = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitExpressionName = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitMethodName = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitAmbiguousName = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitCompilationUnit = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitOrdinaryCompilation = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitModularCompilation = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitPackageDeclaration = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitPackageModifier = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitImportDeclaration = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitSingleTypeImportDeclaration = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitTypeImportOnDemandDeclaration = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitSingleStaticImportDeclaration = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitStaticImportOnDemandDeclaration = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitTypeDeclaration = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitModuleDeclaration = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitModuleDirective = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitRequiresModifier = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitClassDeclaration = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitNormalClassDeclaration = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitClassModifier = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitTypeParameters = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitTypeParameterList = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitSuperclass = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitSuperinterfaces = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitInterfaceTypeList = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitClassBody = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitClassBodyDeclaration = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitClassMemberDeclaration = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitFieldDeclaration = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitFieldModifier = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitVariableDeclaratorList = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitVariableDeclarator = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitVariableDeclaratorId = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitVariableInitializer = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitUnannType = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitUnannPrimitiveType = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitUnannReferenceType = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitUnannClassOrInterfaceType = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitUnannClassType = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitUnannClassType_lf_unannClassOrInterfaceType = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitUnannClassType_lfno_unannClassOrInterfaceType = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitUnannInterfaceType = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitUnannInterfaceType_lf_unannClassOrInterfaceType = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitUnannInterfaceType_lfno_unannClassOrInterfaceType = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitUnannTypeVariable = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitUnannArrayType = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitMethodDeclaration = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitMethodModifier = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitMethodHeader = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitResult = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitMethodDeclarator = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitFormalParameterList = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitFormalParameters = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitFormalParameter = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitVariableModifier = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitLastFormalParameter = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitReceiverParameter = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitThrows_ = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitExceptionTypeList = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitExceptionType = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitMethodBody = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitInstanceInitializer = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitStaticInitializer = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitConstructorDeclaration = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitConstructorModifier = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitConstructorDeclarator = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitSimpleTypeName = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitConstructorBody = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitExplicitConstructorInvocation = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitEnumDeclaration = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitEnumBody = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitEnumConstantList = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitEnumConstant = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitEnumConstantModifier = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitEnumBodyDeclarations = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitInterfaceDeclaration = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitNormalInterfaceDeclaration = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitInterfaceModifier = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitExtendsInterfaces = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitInterfaceBody = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitInterfaceMemberDeclaration = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitConstantDeclaration = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitConstantModifier = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitInterfaceMethodDeclaration = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitInterfaceMethodModifier = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitAnnotationTypeDeclaration = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitAnnotationTypeBody = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitAnnotationTypeMemberDeclaration = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitAnnotationTypeElementDeclaration = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitAnnotationTypeElementModifier = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitDefaultValue = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitAnnotation = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitNormalAnnotation = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitElementValuePairList = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitElementValuePair = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitElementValue = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitElementValueArrayInitializer = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitElementValueList = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitMarkerAnnotation = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitSingleElementAnnotation = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitArrayInitializer = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitVariableInitializerList = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitBlock = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitBlockStatements = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitBlockStatement = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitLocalVariableDeclarationStatement = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitLocalVariableDeclaration = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitStatement = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitStatementNoShortIf = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitStatementWithoutTrailingSubstatement = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitEmptyStatement = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitLabeledStatement = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitLabeledStatementNoShortIf = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitExpressionStatement = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitStatementExpression = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitIfThenStatement = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitIfThenElseStatement = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitIfThenElseStatementNoShortIf = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitAssertStatement = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitSwitchStatement = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitSwitchBlock = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitSwitchBlockStatementGroup = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitSwitchLabels = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitSwitchLabel = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitEnumConstantName = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitWhileStatement = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitWhileStatementNoShortIf = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitDoStatement = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitForStatement = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitForStatementNoShortIf = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitBasicForStatement = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitBasicForStatementNoShortIf = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitForInit = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitForUpdate = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitStatementExpressionList = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitEnhancedForStatement = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitEnhancedForStatementNoShortIf = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitBreakStatement = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitContinueStatement = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitReturnStatement = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitThrowStatement = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitSynchronizedStatement = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitTryStatement = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitCatches = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitCatchClause = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitCatchFormalParameter = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitCatchType = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitFinally_ = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitTryWithResourcesStatement = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitResourceSpecification = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitResourceList = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitResource = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitVariableAccess = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitPrimary = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitPrimaryNoNewArray = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitPrimaryNoNewArray_lf_arrayAccess = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitPrimaryNoNewArray_lfno_arrayAccess = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitPrimaryNoNewArray_lf_primary = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitPrimaryNoNewArray_lf_primary_lf_arrayAccess_lf_primary = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitPrimaryNoNewArray_lf_primary_lfno_arrayAccess_lf_primary = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitPrimaryNoNewArray_lfno_primary = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitPrimaryNoNewArray_lfno_primary_lf_arrayAccess_lfno_primary = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitPrimaryNoNewArray_lfno_primary_lfno_arrayAccess_lfno_primary = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitClassLiteral = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitClassInstanceCreationExpression = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitClassInstanceCreationExpression_lf_primary = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitClassInstanceCreationExpression_lfno_primary = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitTypeArgumentsOrDiamond = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitFieldAccess = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitFieldAccess_lf_primary = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitFieldAccess_lfno_primary = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitArrayAccess = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitArrayAccess_lf_primary = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitArrayAccess_lfno_primary = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitMethodInvocation = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitMethodInvocation_lf_primary = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitMethodInvocation_lfno_primary = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitArgumentList = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitMethodReference = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitMethodReference_lf_primary = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitMethodReference_lfno_primary = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitArrayCreationExpression = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitDimExprs = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitDimExpr = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitConstantExpression = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitExpression = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitLambdaExpression = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitLambdaParameters = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitInferredFormalParameterList = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitLambdaBody = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitAssignmentExpression = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitAssignment = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitLeftHandSide = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitAssignmentOperator = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitConditionalExpression = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitConditionalOrExpression = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitConditionalAndExpression = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitInclusiveOrExpression = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitExclusiveOrExpression = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitAndExpression = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitEqualityExpression = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitRelationalExpression = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitShiftExpression = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitAdditiveExpression = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitMultiplicativeExpression = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitUnaryExpression = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitPreIncrementExpression = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitPreDecrementExpression = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitUnaryExpressionNotPlusMinus = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitPostfixExpression = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitPostIncrementExpression = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitPostIncrementExpression_lf_postfixExpression = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitPostDecrementExpression = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitPostDecrementExpression_lf_postfixExpression = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitCastExpression = function (ctx) {
    return this.visitChildren(ctx);
};
Java9ParserVisitor.prototype.visitIdentifier = function (ctx) {
    return this.visitChildren(ctx);
};
exports.Java9ParserVisitor = Java9ParserVisitor;
