"use strict";
var antlr4 = require('antlr4/index');
function Python3ParserVisitor() {
    antlr4.tree.ParseTreeVisitor.call(this);
    return this;
}
Python3ParserVisitor.prototype = Object.create(antlr4.tree.ParseTreeVisitor.prototype);
Python3ParserVisitor.prototype.constructor = Python3ParserVisitor;
Python3ParserVisitor.prototype.visitSingle_input = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitFile_input = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitEval_input = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitDecorator = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitDecorators = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitDecorated = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitAsync_funcdef = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitFuncdef = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitParameters = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitTypedargslist = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitTfpdef = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitVarargslist = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitVfpdef = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitStmt = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitSimple_stmt = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitSmall_stmt = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitExpr_stmt = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitAnnassign = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitTestlist_star_expr = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitAugassign = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitDel_stmt = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitPass_stmt = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitFlow_stmt = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitBreak_stmt = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitContinue_stmt = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitReturn_stmt = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitYield_stmt = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitRaise_stmt = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitImport_stmt = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitImport_name = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitImport_from = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitImport_as_name = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitDotted_as_name = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitImport_as_names = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitDotted_as_names = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitDotted_name = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitGlobal_stmt = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitNonlocal_stmt = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitAssert_stmt = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitCompound_stmt = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitAsync_stmt = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitIf_stmt = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitWhile_stmt = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitFor_stmt = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitTry_stmt = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitWith_stmt = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitWith_item = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitExcept_clause = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitSuite = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitTest = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitTest_nocond = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitLambdef = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitLambdef_nocond = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitOr_test = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitAnd_test = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitNot_test = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitComparison = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitComp_op = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitStar_expr = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitExpr = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitXor_expr = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitAnd_expr = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitShift_expr = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitArith_expr = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitTerm = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitFactor = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitPower = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitAtom_expr = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitAtom = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitTestlist_comp = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitTrailer = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitSubscriptlist = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitSubscript = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitSliceop = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitExprlist = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitTestlist = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitDictorsetmaker = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitClassdef = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitArglist = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitArgument = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitComp_iter = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitComp_for = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitComp_if = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitEncoding_decl = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitYield_expr = function (ctx) {
    return this.visitChildren(ctx);
};
Python3ParserVisitor.prototype.visitYield_arg = function (ctx) {
    return this.visitChildren(ctx);
};
exports.Python3ParserVisitor = Python3ParserVisitor;
