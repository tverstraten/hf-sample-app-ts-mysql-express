"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const antlr4_1 = __importDefault(require("antlr4"));
class vbParserVisitor extends antlr4_1.default.tree.ParseTreeVisitor {
    visitStart(ctx) {
        return this.visitChildren(ctx);
    }
    visitHexDigit(ctx) {
        return this.visitChildren(ctx);
    }
    visitDecimalDigit(ctx) {
        return this.visitChildren(ctx);
    }
    visitOctalDigit(ctx) {
        return this.visitChildren(ctx);
    }
    visitAlphaCharacter(ctx) {
        return this.visitChildren(ctx);
    }
    visitBooleanLiteral(ctx) {
        return this.visitChildren(ctx);
    }
    visitIntLiteral(ctx) {
        return this.visitChildren(ctx);
    }
    visitHexLiteral(ctx) {
        return this.visitChildren(ctx);
    }
    visitOctalLiteral(ctx) {
        return this.visitChildren(ctx);
    }
    visitIntegerLiteral(ctx) {
        return this.visitChildren(ctx);
    }
    visitIntegerLiteralValue(ctx) {
        return this.visitChildren(ctx);
    }
    visitFloatingPointLiteral(ctx) {
        return this.visitChildren(ctx);
    }
    visitFloatingPointLiteralValue(ctx) {
        return this.visitChildren(ctx);
    }
    visitExponent(ctx) {
        return this.visitChildren(ctx);
    }
    visitSign(ctx) {
        return this.visitChildren(ctx);
    }
    visitSingleTypeCharacter(ctx) {
        return this.visitChildren(ctx);
    }
    visitDoubleTypeCharacter(ctx) {
        return this.visitChildren(ctx);
    }
    visitLongTypeCharacter(ctx) {
        return this.visitChildren(ctx);
    }
    visitStringTypeCharacter(ctx) {
        return this.visitChildren(ctx);
    }
    visitIntegerTypeCharacter(ctx) {
        return this.visitChildren(ctx);
    }
    visitDecimalTypeCharacter(ctx) {
        return this.visitChildren(ctx);
    }
    visitIntegralTypeCharacter(ctx) {
        return this.visitChildren(ctx);
    }
    visitFloatingPointTypeCharacter(ctx) {
        return this.visitChildren(ctx);
    }
    visitMonthValue(ctx) {
        return this.visitChildren(ctx);
    }
    visitDayValue(ctx) {
        return this.visitChildren(ctx);
    }
    visitYearValue(ctx) {
        return this.visitChildren(ctx);
    }
    visitHourValue(ctx) {
        return this.visitChildren(ctx);
    }
    visitMinuteValue(ctx) {
        return this.visitChildren(ctx);
    }
    visitSecondValue(ctx) {
        return this.visitChildren(ctx);
    }
    visitAmpm(ctx) {
        return this.visitChildren(ctx);
    }
    visitDateValue(ctx) {
        return this.visitChildren(ctx);
    }
    visitTimeValue(ctx) {
        return this.visitChildren(ctx);
    }
    visitDateOrTime(ctx) {
        return this.visitChildren(ctx);
    }
    visitDateLiteral(ctx) {
        return this.visitChildren(ctx);
    }
    visitStringCharacter(ctx) {
        return this.visitChildren(ctx);
    }
    visitStringLiteral(ctx) {
        return this.visitChildren(ctx);
    }
    visitCharacterLiteral(ctx) {
        return this.visitChildren(ctx);
    }
    visitIdentifierStart(ctx) {
        return this.visitChildren(ctx);
    }
    visitIdentifierName(ctx) {
        return this.visitChildren(ctx);
    }
    visitIdentifierCharacter(ctx) {
        return this.visitChildren(ctx);
    }
    visitIdentifier(ctx) {
        return this.visitChildren(ctx);
    }
    visitIdentifierOrKeyword(ctx) {
        return this.visitChildren(ctx);
    }
    visitTypeCharacter(ctx) {
        return this.visitChildren(ctx);
    }
    visitLiteral(ctx) {
        return this.visitChildren(ctx);
    }
    visitElseIf(ctx) {
        return this.visitChildren(ctx);
    }
    visitCCStart(ctx) {
        return this.visitChildren(ctx);
    }
    visitCCStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitCCExpression(ctx) {
        return this.visitChildren(ctx);
    }
    visitCCParenthesizedExpression(ctx) {
        return this.visitChildren(ctx);
    }
    visitCCSimpleNameExpression(ctx) {
        return this.visitChildren(ctx);
    }
    visitCCCastExpression(ctx) {
        return this.visitChildren(ctx);
    }
    visitCCPlusMinus(ctx) {
        return this.visitChildren(ctx);
    }
    visitCCUnaryOperator(ctx) {
        return this.visitChildren(ctx);
    }
    visitCCBinaryOperator(ctx) {
        return this.visitChildren(ctx);
    }
    visitCCConditionalExpression(ctx) {
        return this.visitChildren(ctx);
    }
    visitCCConstantDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitCCIfGroup(ctx) {
        return this.visitChildren(ctx);
    }
    visitCCElseIfGroup(ctx) {
        return this.visitChildren(ctx);
    }
    visitCCElseGroup(ctx) {
        return this.visitChildren(ctx);
    }
    visitRegionStart(ctx) {
        return this.visitChildren(ctx);
    }
    visitRegionStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitRegionGroup(ctx) {
        return this.visitChildren(ctx);
    }
    visitAccessModifier(ctx) {
        return this.visitChildren(ctx);
    }
    visitTypeParameterList(ctx) {
        return this.visitChildren(ctx);
    }
    visitTypeParameter(ctx) {
        return this.visitChildren(ctx);
    }
    visitVarianceModifier(ctx) {
        return this.visitChildren(ctx);
    }
    visitTypeParameterConstraints(ctx) {
        return this.visitChildren(ctx);
    }
    visitConstraintList(ctx) {
        return this.visitChildren(ctx);
    }
    visitConstraint(ctx) {
        return this.visitChildren(ctx);
    }
    visitAttributes(ctx) {
        return this.visitChildren(ctx);
    }
    visitAttributeBlock(ctx) {
        return this.visitChildren(ctx);
    }
    visitAttributeList(ctx) {
        return this.visitChildren(ctx);
    }
    visitAttribute(ctx) {
        return this.visitChildren(ctx);
    }
    visitAttributeModifier(ctx) {
        return this.visitChildren(ctx);
    }
    visitAttributeArguments(ctx) {
        return this.visitChildren(ctx);
    }
    visitAttributePositionalArgumentList(ctx) {
        return this.visitChildren(ctx);
    }
    visitVariablePropertyInitializerList(ctx) {
        return this.visitChildren(ctx);
    }
    visitVariablePropertyInitializer(ctx) {
        return this.visitChildren(ctx);
    }
    visitAttributeArgumentExpression(ctx) {
        return this.visitChildren(ctx);
    }
    visitStatementTerminator(ctx) {
        return this.visitChildren(ctx);
    }
    visitAttributesStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitOptionStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitOptionExplicitStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitOnOff(ctx) {
        return this.visitChildren(ctx);
    }
    visitOptionStrictStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitOptionCompareStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitCompareOption(ctx) {
        return this.visitChildren(ctx);
    }
    visitOptionInferStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitImportsStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitImportsClauses(ctx) {
        return this.visitChildren(ctx);
    }
    visitImportsClause(ctx) {
        return this.visitChildren(ctx);
    }
    visitAliasImportsClause(ctx) {
        return this.visitChildren(ctx);
    }
    visitMembersImportsClause(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLNamespaceImportsClause(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLNamespaceValue(ctx) {
        return this.visitChildren(ctx);
    }
    visitNamespaceDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitNamespaceName(ctx) {
        return this.visitChildren(ctx);
    }
    visitRelativeNamespaceName(ctx) {
        return this.visitChildren(ctx);
    }
    visitNamespaceMemberDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitTypeDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitNonModuleDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitTypeName(ctx) {
        return this.visitChildren(ctx);
    }
    visitNonArrayTypeName(ctx) {
        return this.visitChildren(ctx);
    }
    visitSimpleTypeName(ctx) {
        return this.visitChildren(ctx);
    }
    visitQualifiedTypeName(ctx) {
        return this.visitChildren(ctx);
    }
    visitTypeArguments(ctx) {
        return this.visitChildren(ctx);
    }
    visitTypeArgumentList(ctx) {
        return this.visitChildren(ctx);
    }
    visitBuiltInTypeName(ctx) {
        return this.visitChildren(ctx);
    }
    visitTypeModifier(ctx) {
        return this.visitChildren(ctx);
    }
    visitIdentifierModifiers(ctx) {
        return this.visitChildren(ctx);
    }
    visitNullableNameModifier(ctx) {
        return this.visitChildren(ctx);
    }
    visitTypeImplementsClause(ctx) {
        return this.visitChildren(ctx);
    }
    visitTypeImplements(ctx) {
        return this.visitChildren(ctx);
    }
    visitPrimitiveTypeName(ctx) {
        return this.visitChildren(ctx);
    }
    visitNumericTypeName(ctx) {
        return this.visitChildren(ctx);
    }
    visitIntegralTypeName(ctx) {
        return this.visitChildren(ctx);
    }
    visitFloatingPointTypeName(ctx) {
        return this.visitChildren(ctx);
    }
    visitEnumDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitEnumMemberDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitClassDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitClassModifier(ctx) {
        return this.visitChildren(ctx);
    }
    visitClassBase(ctx) {
        return this.visitChildren(ctx);
    }
    visitClassMemberDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitStructureDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitStructureModifier(ctx) {
        return this.visitChildren(ctx);
    }
    visitStructMemberDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitModuleDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitModuleMemberDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitInterfaceDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitInterfaceBase(ctx) {
        return this.visitChildren(ctx);
    }
    visitInterfaceBases(ctx) {
        return this.visitChildren(ctx);
    }
    visitInterfaceMemberDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitArrayTypeName(ctx) {
        return this.visitChildren(ctx);
    }
    visitArrayTypeModifiers(ctx) {
        return this.visitChildren(ctx);
    }
    visitArrayTypeModifier(ctx) {
        return this.visitChildren(ctx);
    }
    visitRankList(ctx) {
        return this.visitChildren(ctx);
    }
    visitArrayNameModifier(ctx) {
        return this.visitChildren(ctx);
    }
    visitDelegateDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitMethodSignature(ctx) {
        return this.visitChildren(ctx);
    }
    visitImplementsClause(ctx) {
        return this.visitChildren(ctx);
    }
    visitImplementsList(ctx) {
        return this.visitChildren(ctx);
    }
    visitInterfaceMemberSpecifier(ctx) {
        return this.visitChildren(ctx);
    }
    visitMethodMemberDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitInterfaceMethodMemberDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitMethodDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitInterfaceMethodDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitSubSignature(ctx) {
        return this.visitChildren(ctx);
    }
    visitFunctionSignature(ctx) {
        return this.visitChildren(ctx);
    }
    visitSubDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitMustOverrideSubDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitInterfaceSubDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitFunctionDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitMustOverrideFunctionDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitInterfaceFunctionDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitProcedureModifier(ctx) {
        return this.visitChildren(ctx);
    }
    visitMustOverrideProcedureModifier(ctx) {
        return this.visitChildren(ctx);
    }
    visitInterfaceProcedureModifier(ctx) {
        return this.visitChildren(ctx);
    }
    visitHandlesOrImplements(ctx) {
        return this.visitChildren(ctx);
    }
    visitExternalMethodDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitExternalSubDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitExternalFunctionDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitExternalMethodModifier(ctx) {
        return this.visitChildren(ctx);
    }
    visitCharsetModifier(ctx) {
        return this.visitChildren(ctx);
    }
    visitLibraryClause(ctx) {
        return this.visitChildren(ctx);
    }
    visitAliasClause(ctx) {
        return this.visitChildren(ctx);
    }
    visitParameterList(ctx) {
        return this.visitChildren(ctx);
    }
    visitParameter(ctx) {
        return this.visitChildren(ctx);
    }
    visitParameterModifier(ctx) {
        return this.visitChildren(ctx);
    }
    visitParameterIdentifier(ctx) {
        return this.visitChildren(ctx);
    }
    visitHandlesClause(ctx) {
        return this.visitChildren(ctx);
    }
    visitEventHandlesList(ctx) {
        return this.visitChildren(ctx);
    }
    visitEventMemberSpecifier(ctx) {
        return this.visitChildren(ctx);
    }
    visitConstructorMemberDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitConstructorModifier(ctx) {
        return this.visitChildren(ctx);
    }
    visitEventMemberDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitRegularEventMemberDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitInterfaceEventMemberDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitParametersOrType(ctx) {
        return this.visitChildren(ctx);
    }
    visitEventModifiers(ctx) {
        return this.visitChildren(ctx);
    }
    visitInterfaceEventModifiers(ctx) {
        return this.visitChildren(ctx);
    }
    visitCustomEventMemberDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitEventAccessorDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitAddHandlerDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitRemoveHandlerDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitRaiseEventDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitConstantMemberDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitConstantModifier(ctx) {
        return this.visitChildren(ctx);
    }
    visitConstantDeclarators(ctx) {
        return this.visitChildren(ctx);
    }
    visitConstantDeclarator(ctx) {
        return this.visitChildren(ctx);
    }
    visitVariableMemberDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitVariableModifier(ctx) {
        return this.visitChildren(ctx);
    }
    visitVariableDeclarators(ctx) {
        return this.visitChildren(ctx);
    }
    visitVariableDeclarator(ctx) {
        return this.visitChildren(ctx);
    }
    visitVariableIdentifiers(ctx) {
        return this.visitChildren(ctx);
    }
    visitVariableIdentifier(ctx) {
        return this.visitChildren(ctx);
    }
    visitArraySizeInitializationModifier(ctx) {
        return this.visitChildren(ctx);
    }
    visitBoundList(ctx) {
        return this.visitChildren(ctx);
    }
    visitBound(ctx) {
        return this.visitChildren(ctx);
    }
    visitPropertyMemberDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitPropertySignature(ctx) {
        return this.visitChildren(ctx);
    }
    visitRegularPropertyMemberDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitMustOverridePropertyMemberDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitAutoPropertyMemberDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitInterfacePropertyMemberDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitAutoPropertyModifier(ctx) {
        return this.visitChildren(ctx);
    }
    visitPropertyModifier(ctx) {
        return this.visitChildren(ctx);
    }
    visitMustOverridePropertyModifier(ctx) {
        return this.visitChildren(ctx);
    }
    visitInterfacePropertyModifier(ctx) {
        return this.visitChildren(ctx);
    }
    visitPropertyAccessorDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitPropertyGetDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitPropertySetDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitOperatorDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitOperatorModifier(ctx) {
        return this.visitChildren(ctx);
    }
    visitOverloadableOperator(ctx) {
        return this.visitChildren(ctx);
    }
    visitStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitBlock(ctx) {
        return this.visitChildren(ctx);
    }
    visitLabelDeclarationStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitLabelName(ctx) {
        return this.visitChildren(ctx);
    }
    visitStatements(ctx) {
        return this.visitChildren(ctx);
    }
    visitLocalDeclarationStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitLocalModifier(ctx) {
        return this.visitChildren(ctx);
    }
    visitWithStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitSyncLockStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitEventStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitRaiseEventStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitAddHandlerStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitRemoveHandlerStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitAssignmentStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitRegularAssignmentStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitCompoundAssignmentStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitCompoundBinaryOperator(ctx) {
        return this.visitChildren(ctx);
    }
    visitMidAssignmentStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitInvocationStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitConditionalStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitIfStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitBlockIfStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitElseIfStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitElseStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitLineIfThenStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitSelectStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitCaseStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitCaseClauses(ctx) {
        return this.visitChildren(ctx);
    }
    visitCaseClause(ctx) {
        return this.visitChildren(ctx);
    }
    visitComparisonOperator(ctx) {
        return this.visitChildren(ctx);
    }
    visitCaseElseStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitLoopStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitWhileStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitDoLoopStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitDoTopLoopStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitDoBottomLoopStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitWhileOrUntil(ctx) {
        return this.visitChildren(ctx);
    }
    visitForStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitLoopControlVariable(ctx) {
        return this.visitChildren(ctx);
    }
    visitNextExpressionList(ctx) {
        return this.visitChildren(ctx);
    }
    visitForEachStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitErrorHandlingStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitStructuredErrorStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitTryStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitFinallyStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitCatchStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitThrowStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitUnstructuredErrorStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitErrorStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitOnErrorStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitErrorClause(ctx) {
        return this.visitChildren(ctx);
    }
    visitResumeStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitResumeClause(ctx) {
        return this.visitChildren(ctx);
    }
    visitBranchStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitGoToStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitExitStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitExitKind(ctx) {
        return this.visitChildren(ctx);
    }
    visitContinueStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitContinueKind(ctx) {
        return this.visitChildren(ctx);
    }
    visitStopStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitEndStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitReturnStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitArrayHandlingStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitRedimStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitRedimClauses(ctx) {
        return this.visitChildren(ctx);
    }
    visitRedimClause(ctx) {
        return this.visitChildren(ctx);
    }
    visitEraseStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitEraseExpressions(ctx) {
        return this.visitChildren(ctx);
    }
    visitUsingStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitUsingResources(ctx) {
        return this.visitChildren(ctx);
    }
    visitAwaitStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitYieldStatement(ctx) {
        return this.visitChildren(ctx);
    }
    visitExpression(ctx) {
        return this.visitChildren(ctx);
    }
    visitMemberAccessBase(ctx) {
        return this.visitChildren(ctx);
    }
    visitConstantExpression(ctx) {
        return this.visitChildren(ctx);
    }
    visitSimpleExpression(ctx) {
        return this.visitChildren(ctx);
    }
    visitLiteralExpression(ctx) {
        return this.visitChildren(ctx);
    }
    visitParenthesizedExpression(ctx) {
        return this.visitChildren(ctx);
    }
    visitInstanceExpression(ctx) {
        return this.visitChildren(ctx);
    }
    visitSimpleNameExpression(ctx) {
        return this.visitChildren(ctx);
    }
    visitAddressOfExpression(ctx) {
        return this.visitChildren(ctx);
    }
    visitGetTypeExpression(ctx) {
        return this.visitChildren(ctx);
    }
    visitGetTypeTypeName(ctx) {
        return this.visitChildren(ctx);
    }
    visitQualifiedOpenTypeName(ctx) {
        return this.visitChildren(ctx);
    }
    visitTypeArityList(ctx) {
        return this.visitChildren(ctx);
    }
    visitCommaList(ctx) {
        return this.visitChildren(ctx);
    }
    visitTypeOfIsExpression(ctx) {
        return this.visitChildren(ctx);
    }
    visitGetXmlNamespaceExpression(ctx) {
        return this.visitChildren(ctx);
    }
    visitArgumentList(ctx) {
        return this.visitChildren(ctx);
    }
    visitPositionalArgumentList(ctx) {
        return this.visitChildren(ctx);
    }
    visitNamedArgumentList(ctx) {
        return this.visitChildren(ctx);
    }
    visitNewExpression(ctx) {
        return this.visitChildren(ctx);
    }
    visitObjectCreationExpression(ctx) {
        return this.visitChildren(ctx);
    }
    visitObjectCreationExpressionInitializer(ctx) {
        return this.visitChildren(ctx);
    }
    visitObjectMemberInitializer(ctx) {
        return this.visitChildren(ctx);
    }
    visitFieldInitializerList(ctx) {
        return this.visitChildren(ctx);
    }
    visitFieldInitializer(ctx) {
        return this.visitChildren(ctx);
    }
    visitObjectCollectionInitializer(ctx) {
        return this.visitChildren(ctx);
    }
    visitCollectionInitializer(ctx) {
        return this.visitChildren(ctx);
    }
    visitCollectionElementList(ctx) {
        return this.visitChildren(ctx);
    }
    visitCollectionElement(ctx) {
        return this.visitChildren(ctx);
    }
    visitArrayExpression(ctx) {
        return this.visitChildren(ctx);
    }
    visitArrayCreationExpression(ctx) {
        return this.visitChildren(ctx);
    }
    visitArrayLiteralExpression(ctx) {
        return this.visitChildren(ctx);
    }
    visitAnonymousObjectCreationExpression(ctx) {
        return this.visitChildren(ctx);
    }
    visitCastExpression(ctx) {
        return this.visitChildren(ctx);
    }
    visitCastTarget(ctx) {
        return this.visitChildren(ctx);
    }
    visitUnaryPlusExpression(ctx) {
        return this.visitChildren(ctx);
    }
    visitUnaryMinusExpression(ctx) {
        return this.visitChildren(ctx);
    }
    visitBooleanExpression(ctx) {
        return this.visitChildren(ctx);
    }
    visitLambdaExpression(ctx) {
        return this.visitChildren(ctx);
    }
    visitSingleLineLambda(ctx) {
        return this.visitChildren(ctx);
    }
    visitMultiLineLambda(ctx) {
        return this.visitChildren(ctx);
    }
    visitMultiLineFunctionLambda(ctx) {
        return this.visitChildren(ctx);
    }
    visitMultiLineSubLambda(ctx) {
        return this.visitChildren(ctx);
    }
    visitLambdaModifier(ctx) {
        return this.visitChildren(ctx);
    }
    visitQueryExpression(ctx) {
        return this.visitChildren(ctx);
    }
    visitFromOrAggregateQueryOperator(ctx) {
        return this.visitChildren(ctx);
    }
    visitQueryOperator(ctx) {
        return this.visitChildren(ctx);
    }
    visitJoinOrGroupJoinQueryOperator(ctx) {
        return this.visitChildren(ctx);
    }
    visitCollectionRangeVariableDeclarationList(ctx) {
        return this.visitChildren(ctx);
    }
    visitCollectionRangeVariableDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitExpressionRangeVariableDeclarationList(ctx) {
        return this.visitChildren(ctx);
    }
    visitExpressionRangeVariableDeclaration(ctx) {
        return this.visitChildren(ctx);
    }
    visitFromQueryOperator(ctx) {
        return this.visitChildren(ctx);
    }
    visitJoinQueryOperator(ctx) {
        return this.visitChildren(ctx);
    }
    visitJoinConditionList(ctx) {
        return this.visitChildren(ctx);
    }
    visitJoinCondition(ctx) {
        return this.visitChildren(ctx);
    }
    visitLetQueryOperator(ctx) {
        return this.visitChildren(ctx);
    }
    visitSelectQueryOperator(ctx) {
        return this.visitChildren(ctx);
    }
    visitDistinctQueryOperator(ctx) {
        return this.visitChildren(ctx);
    }
    visitWhereQueryOperator(ctx) {
        return this.visitChildren(ctx);
    }
    visitPartitionQueryOperator(ctx) {
        return this.visitChildren(ctx);
    }
    visitOrderByQueryOperator(ctx) {
        return this.visitChildren(ctx);
    }
    visitOrderExpressionList(ctx) {
        return this.visitChildren(ctx);
    }
    visitOrderExpression(ctx) {
        return this.visitChildren(ctx);
    }
    visitOrdering(ctx) {
        return this.visitChildren(ctx);
    }
    visitGroupByQueryOperator(ctx) {
        return this.visitChildren(ctx);
    }
    visitAggregateQueryOperator(ctx) {
        return this.visitChildren(ctx);
    }
    visitGroupJoinQueryOperator(ctx) {
        return this.visitChildren(ctx);
    }
    visitConditionalExpression(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLLiteralExpression(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLEmbeddedExpression(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLDocument(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLDocumentPrologue(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLVersion(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLVersionNumberValue(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLEncoding(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLEncodingNameValue(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLEncodingName(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLEncodingNameCharacter(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLStandalone(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLYesNoValue(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLYesNo(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLMisc(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLDocumentBody(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLElement(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLEmptyElement(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLElementStart(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLElementEnd(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLContent(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLNestedContent(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLAttribute(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLAttributeName(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLAttributeValue(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLAttributeDoubleQuoteValueCharacter(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLAttributeSingleQuoteValueCharacter(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLReference(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLEntityReference(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLCharacterReference(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLNamespaceAttributeName(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLPrefixedNamespaceAttributeName(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLDefaultNamespaceAttributeName(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLNamespaceName(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLNamespaceNameCharacter(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLQualifiedNameOrExpression(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLQualifiedName(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLPrefixedName(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLUnprefixedName(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLProcessingInstruction(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLComment(ctx) {
        return this.visitChildren(ctx);
    }
    visitXMLCDATASection(ctx) {
        return this.visitChildren(ctx);
    }
    visitAwaitOperatorExpression(ctx) {
        return this.visitChildren(ctx);
    }
}
exports.default = vbParserVisitor;
