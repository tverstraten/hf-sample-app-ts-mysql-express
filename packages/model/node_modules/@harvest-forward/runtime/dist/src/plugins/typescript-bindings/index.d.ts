import { Builder } from '../../runtime/Builder';
import { SimpleMappedValueTypeResolver } from '../../system/SimpleMappedValueTypeResolver';
export declare const typeResolvers: {
    TypeScript: SimpleMappedValueTypeResolver;
};
export declare const templates: {
    Model: {
        type: string;
        contents: () => string;
    };
};
export declare const builders: {
    EnumValueHarvester: (settings: any) => Builder;
    ClassFieldToModelHarvester: (settings: any) => Builder;
    ClassToModelHarvester: (settings: any) => Builder;
    ClassPropertyToModelHarvester: (settings: any) => Builder;
};
export * from './AbstractTypeScriptAstHarvester';
export * from './TypeScriptClassFieldToModelHarvester';
export * from './TypeScriptClassPropertyToModelHarvester';
export * from './TypeScriptClassToModelHarvester';
export * from './TypeScriptEnumValueHarvester';
//# sourceMappingURL=index.d.ts.map