import { AbstractSingularBuilder } from '../../../runtime/AbstractSingularBuilder';
import { Artifact } from '../../../system/Artifact';
import { System } from '../../../system/System';
import { SystemComponent } from '../../../system/SystemComponent';
import { Column, View } from '../../rdbms-basic';
export declare abstract class RdbmsDiscriminatorHarvester extends AbstractSingularBuilder {
    protected discriminatorRegex: RegExp;
    constructor(configurationValues?: {
        [key: string]: any;
    });
    regexFromConfigurationString(configurationString: string): RegExp;
    getViewDiscriminatorColumn(view: View): Column | null;
    buildInternal(system: System, component: SystemComponent): Promise<Artifact[]>;
    protected abstract harvestInheritanceValues(view: View): void;
}
//# sourceMappingURL=RdbmsDiscriminatorHarvester.d.ts.map