declare class VisualBasic6Lexer {
    static grammarFileName: string;
    static channelNames: string[];
    static modeNames: string[];
    static literalNames: (string | null)[];
    static symbolicNames: (string | null)[];
    static ruleNames: string[];
    constructor(input: any);
    _interp: any;
    get atn(): any;
}
declare namespace VisualBasic6Lexer {
    const EOF: any;
    const ACCESS: number;
    const ADDRESSOF: number;
    const ALIAS: number;
    const AND: number;
    const ATTRIBUTE: number;
    const APPACTIVATE: number;
    const APPEND: number;
    const AS: number;
    const BEEP: number;
    const BEGIN: number;
    const BEGINPROPERTY: number;
    const BINARY: number;
    const BOOLEAN: number;
    const BYVAL: number;
    const BYREF: number;
    const BYTE: number;
    const CALL: number;
    const CASE: number;
    const CHDIR: number;
    const CHDRIVE: number;
    const CLASS: number;
    const CLOSE: number;
    const COLLECTION: number;
    const CONST: number;
    const DATE: number;
    const DECLARE: number;
    const DEFBOOL: number;
    const DEFBYTE: number;
    const DEFDATE: number;
    const DEFDBL: number;
    const DEFDEC: number;
    const DEFCUR: number;
    const DEFINT: number;
    const DEFLNG: number;
    const DEFOBJ: number;
    const DEFSNG: number;
    const DEFSTR: number;
    const DEFVAR: number;
    const DELETESETTING: number;
    const DIM: number;
    const DO: number;
    const DOUBLE: number;
    const EACH: number;
    const ELSE: number;
    const ELSEIF: number;
    const END_ENUM: number;
    const END_FUNCTION: number;
    const END_IF: number;
    const END_PROPERTY: number;
    const END_SELECT: number;
    const END_SUB: number;
    const END_TYPE: number;
    const END_WITH: number;
    const END: number;
    const ENDPROPERTY: number;
    const ENUM: number;
    const EQV: number;
    const ERASE: number;
    const ERROR: number;
    const EVENT: number;
    const EXIT_DO: number;
    const EXIT_FOR: number;
    const EXIT_FUNCTION: number;
    const EXIT_PROPERTY: number;
    const EXIT_SUB: number;
    const FALSE: number;
    const FILECOPY: number;
    const FRIEND: number;
    const FOR: number;
    const FUNCTION: number;
    const GET: number;
    const GLOBAL: number;
    const GOSUB: number;
    const GOTO: number;
    const IF: number;
    const IMP: number;
    const IMPLEMENTS: number;
    const IN: number;
    const INPUT: number;
    const IS: number;
    const INTEGER: number;
    const KILL: number;
    const LOAD: number;
    const LOCK: number;
    const LONG: number;
    const LOOP: number;
    const LEN: number;
    const LET: number;
    const LIB: number;
    const LIKE: number;
    const LINE_INPUT: number;
    const LOCK_READ: number;
    const LOCK_WRITE: number;
    const LOCK_READ_WRITE: number;
    const LSET: number;
    const MACRO_IF: number;
    const MACRO_ELSEIF: number;
    const MACRO_ELSE: number;
    const MACRO_END_IF: number;
    const ME: number;
    const MID: number;
    const MKDIR: number;
    const MOD: number;
    const NAME: number;
    const NEXT: number;
    const NEW: number;
    const NOT: number;
    const NOTHING: number;
    const NULL_: number;
    const OBJECT: number;
    const ON: number;
    const ON_ERROR: number;
    const ON_LOCAL_ERROR: number;
    const OPEN: number;
    const OPTIONAL: number;
    const OPTION_BASE: number;
    const OPTION_EXPLICIT: number;
    const OPTION_COMPARE: number;
    const OPTION_PRIVATE_MODULE: number;
    const OR: number;
    const OUTPUT: number;
    const PARAMARRAY: number;
    const PRESERVE: number;
    const PRINT: number;
    const PRIVATE: number;
    const PROPERTY_GET: number;
    const PROPERTY_LET: number;
    const PROPERTY_SET: number;
    const PUBLIC: number;
    const PUT: number;
    const RANDOM: number;
    const RANDOMIZE: number;
    const RAISEEVENT: number;
    const READ: number;
    const READ_WRITE: number;
    const REDIM: number;
    const REM: number;
    const RESET: number;
    const RESUME: number;
    const RETURN: number;
    const RMDIR: number;
    const RSET: number;
    const SAVEPICTURE: number;
    const SAVESETTING: number;
    const SEEK: number;
    const SELECT: number;
    const SENDKEYS: number;
    const SET: number;
    const SETATTR: number;
    const SHARED: number;
    const SINGLE: number;
    const SPC: number;
    const STATIC: number;
    const STEP: number;
    const STOP: number;
    const STRING: number;
    const SUB: number;
    const TAB: number;
    const TEXT: number;
    const THEN: number;
    const TIME: number;
    const TO: number;
    const TRUE: number;
    const TYPE: number;
    const TYPEOF: number;
    const UNLOAD: number;
    const UNLOCK: number;
    const UNTIL: number;
    const VARIANT: number;
    const VERSION: number;
    const WEND: number;
    const WHILE: number;
    const WIDTH: number;
    const WITH: number;
    const WITHEVENTS: number;
    const WRITE: number;
    const XOR: number;
    const AMPERSAND: number;
    const ASSIGN: number;
    const AT: number;
    const COLON: number;
    const COMMA: number;
    const IDIV: number;
    const DIV: number;
    const DOLLAR: number;
    const DOT: number;
    const EQ: number;
    const EXCLAMATIONMARK: number;
    const GEQ: number;
    const GT: number;
    const HASH: number;
    const LEQ: number;
    const LBRACE: number;
    const LPAREN: number;
    const LT: number;
    const MINUS: number;
    const MINUS_EQ: number;
    const MULT: number;
    const NEQ: number;
    const PERCENT: number;
    const PLUS: number;
    const PLUS_EQ: number;
    const POW: number;
    const RBRACE: number;
    const RPAREN: number;
    const SEMICOLON: number;
    const L_SQUARE_BRACKET: number;
    const R_SQUARE_BRACKET: number;
    const STRINGLITERAL: number;
    const DATELITERAL: number;
    const COLORLITERAL: number;
    const INTEGERLITERAL: number;
    const DOUBLELITERAL: number;
    const FILENUMBER: number;
    const OCTALLITERAL: number;
    const FRX_OFFSET: number;
    const GUID: number;
    const IDENTIFIER: number;
    const LINE_CONTINUATION: number;
    const NEWLINE: number;
    const COMMENT: number;
    const WS: number;
}
export default VisualBasic6Lexer;
//# sourceMappingURL=VisualBasic6Lexer.d.ts.map