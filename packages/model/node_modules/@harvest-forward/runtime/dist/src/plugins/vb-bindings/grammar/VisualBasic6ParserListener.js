"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const antlr4_1 = __importDefault(require("antlr4"));
class VisualBasic6ParserListener extends antlr4_1.default.tree.ParseTreeListener {
    enterStartRule(ctx) {
    }
    exitStartRule(ctx) {
    }
    enterModule(ctx) {
    }
    exitModule(ctx) {
    }
    enterModuleReferences(ctx) {
    }
    exitModuleReferences(ctx) {
    }
    enterModuleReference(ctx) {
    }
    exitModuleReference(ctx) {
    }
    enterModuleReferenceValue(ctx) {
    }
    exitModuleReferenceValue(ctx) {
    }
    enterModuleReferenceComponent(ctx) {
    }
    exitModuleReferenceComponent(ctx) {
    }
    enterModuleHeader(ctx) {
    }
    exitModuleHeader(ctx) {
    }
    enterModuleConfig(ctx) {
    }
    exitModuleConfig(ctx) {
    }
    enterModuleConfigElement(ctx) {
    }
    exitModuleConfigElement(ctx) {
    }
    enterModuleAttributes(ctx) {
    }
    exitModuleAttributes(ctx) {
    }
    enterModuleOptions(ctx) {
    }
    exitModuleOptions(ctx) {
    }
    enterOptionBaseStmt(ctx) {
    }
    exitOptionBaseStmt(ctx) {
    }
    enterOptionCompareStmt(ctx) {
    }
    exitOptionCompareStmt(ctx) {
    }
    enterOptionExplicitStmt(ctx) {
    }
    exitOptionExplicitStmt(ctx) {
    }
    enterOptionPrivateModuleStmt(ctx) {
    }
    exitOptionPrivateModuleStmt(ctx) {
    }
    enterModuleBody(ctx) {
    }
    exitModuleBody(ctx) {
    }
    enterModuleBodyElement(ctx) {
    }
    exitModuleBodyElement(ctx) {
    }
    enterControlProperties(ctx) {
    }
    exitControlProperties(ctx) {
    }
    enterCp_Properties(ctx) {
    }
    exitCp_Properties(ctx) {
    }
    enterCp_SingleProperty(ctx) {
    }
    exitCp_SingleProperty(ctx) {
    }
    enterCp_PropertyName(ctx) {
    }
    exitCp_PropertyName(ctx) {
    }
    enterCp_PropertyValue(ctx) {
    }
    exitCp_PropertyValue(ctx) {
    }
    enterCp_NestedProperty(ctx) {
    }
    exitCp_NestedProperty(ctx) {
    }
    enterCp_ControlType(ctx) {
    }
    exitCp_ControlType(ctx) {
    }
    enterCp_ControlIdentifier(ctx) {
    }
    exitCp_ControlIdentifier(ctx) {
    }
    enterModuleBlock(ctx) {
    }
    exitModuleBlock(ctx) {
    }
    enterAttributeStmt(ctx) {
    }
    exitAttributeStmt(ctx) {
    }
    enterBlock(ctx) {
    }
    exitBlock(ctx) {
    }
    enterBlockStmt(ctx) {
    }
    exitBlockStmt(ctx) {
    }
    enterAppActivateStmt(ctx) {
    }
    exitAppActivateStmt(ctx) {
    }
    enterBeepStmt(ctx) {
    }
    exitBeepStmt(ctx) {
    }
    enterChDirStmt(ctx) {
    }
    exitChDirStmt(ctx) {
    }
    enterChDriveStmt(ctx) {
    }
    exitChDriveStmt(ctx) {
    }
    enterCloseStmt(ctx) {
    }
    exitCloseStmt(ctx) {
    }
    enterConstStmt(ctx) {
    }
    exitConstStmt(ctx) {
    }
    enterConstSubStmt(ctx) {
    }
    exitConstSubStmt(ctx) {
    }
    enterDateStmt(ctx) {
    }
    exitDateStmt(ctx) {
    }
    enterDeclareStmt(ctx) {
    }
    exitDeclareStmt(ctx) {
    }
    enterDeftypeStmt(ctx) {
    }
    exitDeftypeStmt(ctx) {
    }
    enterDeleteSettingStmt(ctx) {
    }
    exitDeleteSettingStmt(ctx) {
    }
    enterDoLoopStmt(ctx) {
    }
    exitDoLoopStmt(ctx) {
    }
    enterEndStmt(ctx) {
    }
    exitEndStmt(ctx) {
    }
    enterEnumerationStmt(ctx) {
    }
    exitEnumerationStmt(ctx) {
    }
    enterEnumerationStmt_Constant(ctx) {
    }
    exitEnumerationStmt_Constant(ctx) {
    }
    enterEraseStmt(ctx) {
    }
    exitEraseStmt(ctx) {
    }
    enterErrorStmt(ctx) {
    }
    exitErrorStmt(ctx) {
    }
    enterEventStmt(ctx) {
    }
    exitEventStmt(ctx) {
    }
    enterExitStmt(ctx) {
    }
    exitExitStmt(ctx) {
    }
    enterFilecopyStmt(ctx) {
    }
    exitFilecopyStmt(ctx) {
    }
    enterForEachStmt(ctx) {
    }
    exitForEachStmt(ctx) {
    }
    enterForNextStmt(ctx) {
    }
    exitForNextStmt(ctx) {
    }
    enterFunctionStmt(ctx) {
    }
    exitFunctionStmt(ctx) {
    }
    enterGetStmt(ctx) {
    }
    exitGetStmt(ctx) {
    }
    enterGoSubStmt(ctx) {
    }
    exitGoSubStmt(ctx) {
    }
    enterGoToStmt(ctx) {
    }
    exitGoToStmt(ctx) {
    }
    enterInlineIfThenElse(ctx) {
    }
    exitInlineIfThenElse(ctx) {
    }
    enterBlockIfThenElse(ctx) {
    }
    exitBlockIfThenElse(ctx) {
    }
    enterIfBlockStmt(ctx) {
    }
    exitIfBlockStmt(ctx) {
    }
    enterIfConditionStmt(ctx) {
    }
    exitIfConditionStmt(ctx) {
    }
    enterIfElseIfBlockStmt(ctx) {
    }
    exitIfElseIfBlockStmt(ctx) {
    }
    enterIfElseBlockStmt(ctx) {
    }
    exitIfElseBlockStmt(ctx) {
    }
    enterImplementsStmt(ctx) {
    }
    exitImplementsStmt(ctx) {
    }
    enterInputStmt(ctx) {
    }
    exitInputStmt(ctx) {
    }
    enterKillStmt(ctx) {
    }
    exitKillStmt(ctx) {
    }
    enterLetStmt(ctx) {
    }
    exitLetStmt(ctx) {
    }
    enterLineInputStmt(ctx) {
    }
    exitLineInputStmt(ctx) {
    }
    enterLoadStmt(ctx) {
    }
    exitLoadStmt(ctx) {
    }
    enterLockStmt(ctx) {
    }
    exitLockStmt(ctx) {
    }
    enterLsetStmt(ctx) {
    }
    exitLsetStmt(ctx) {
    }
    enterMacroIfThenElseStmt(ctx) {
    }
    exitMacroIfThenElseStmt(ctx) {
    }
    enterMacroIfBlockStmt(ctx) {
    }
    exitMacroIfBlockStmt(ctx) {
    }
    enterMacroElseIfBlockStmt(ctx) {
    }
    exitMacroElseIfBlockStmt(ctx) {
    }
    enterMacroElseBlockStmt(ctx) {
    }
    exitMacroElseBlockStmt(ctx) {
    }
    enterMidStmt(ctx) {
    }
    exitMidStmt(ctx) {
    }
    enterMkdirStmt(ctx) {
    }
    exitMkdirStmt(ctx) {
    }
    enterNameStmt(ctx) {
    }
    exitNameStmt(ctx) {
    }
    enterOnErrorStmt(ctx) {
    }
    exitOnErrorStmt(ctx) {
    }
    enterOnGoToStmt(ctx) {
    }
    exitOnGoToStmt(ctx) {
    }
    enterOnGoSubStmt(ctx) {
    }
    exitOnGoSubStmt(ctx) {
    }
    enterOpenStmt(ctx) {
    }
    exitOpenStmt(ctx) {
    }
    enterOutputList(ctx) {
    }
    exitOutputList(ctx) {
    }
    enterOutputList_Expression(ctx) {
    }
    exitOutputList_Expression(ctx) {
    }
    enterPrintStmt(ctx) {
    }
    exitPrintStmt(ctx) {
    }
    enterPropertyGetStmt(ctx) {
    }
    exitPropertyGetStmt(ctx) {
    }
    enterPropertySetStmt(ctx) {
    }
    exitPropertySetStmt(ctx) {
    }
    enterPropertyLetStmt(ctx) {
    }
    exitPropertyLetStmt(ctx) {
    }
    enterPutStmt(ctx) {
    }
    exitPutStmt(ctx) {
    }
    enterRaiseEventStmt(ctx) {
    }
    exitRaiseEventStmt(ctx) {
    }
    enterRandomizeStmt(ctx) {
    }
    exitRandomizeStmt(ctx) {
    }
    enterRedimStmt(ctx) {
    }
    exitRedimStmt(ctx) {
    }
    enterRedimSubStmt(ctx) {
    }
    exitRedimSubStmt(ctx) {
    }
    enterResetStmt(ctx) {
    }
    exitResetStmt(ctx) {
    }
    enterResumeStmt(ctx) {
    }
    exitResumeStmt(ctx) {
    }
    enterReturnStmt(ctx) {
    }
    exitReturnStmt(ctx) {
    }
    enterRmdirStmt(ctx) {
    }
    exitRmdirStmt(ctx) {
    }
    enterRsetStmt(ctx) {
    }
    exitRsetStmt(ctx) {
    }
    enterSavepictureStmt(ctx) {
    }
    exitSavepictureStmt(ctx) {
    }
    enterSaveSettingStmt(ctx) {
    }
    exitSaveSettingStmt(ctx) {
    }
    enterSeekStmt(ctx) {
    }
    exitSeekStmt(ctx) {
    }
    enterSelectCaseStmt(ctx) {
    }
    exitSelectCaseStmt(ctx) {
    }
    enterSC_Case(ctx) {
    }
    exitSC_Case(ctx) {
    }
    enterCaseCondElse(ctx) {
    }
    exitCaseCondElse(ctx) {
    }
    enterCaseCondExpr(ctx) {
    }
    exitCaseCondExpr(ctx) {
    }
    enterCaseCondExprIs(ctx) {
    }
    exitCaseCondExprIs(ctx) {
    }
    enterCaseCondExprValue(ctx) {
    }
    exitCaseCondExprValue(ctx) {
    }
    enterCaseCondExprTo(ctx) {
    }
    exitCaseCondExprTo(ctx) {
    }
    enterSendkeysStmt(ctx) {
    }
    exitSendkeysStmt(ctx) {
    }
    enterSetattrStmt(ctx) {
    }
    exitSetattrStmt(ctx) {
    }
    enterSetStmt(ctx) {
    }
    exitSetStmt(ctx) {
    }
    enterStopStmt(ctx) {
    }
    exitStopStmt(ctx) {
    }
    enterSubStmt(ctx) {
    }
    exitSubStmt(ctx) {
    }
    enterTimeStmt(ctx) {
    }
    exitTimeStmt(ctx) {
    }
    enterTypeStmt(ctx) {
    }
    exitTypeStmt(ctx) {
    }
    enterTypeStmt_Element(ctx) {
    }
    exitTypeStmt_Element(ctx) {
    }
    enterTypeOfStmt(ctx) {
    }
    exitTypeOfStmt(ctx) {
    }
    enterUnloadStmt(ctx) {
    }
    exitUnloadStmt(ctx) {
    }
    enterUnlockStmt(ctx) {
    }
    exitUnlockStmt(ctx) {
    }
    enterVsAssign(ctx) {
    }
    exitVsAssign(ctx) {
    }
    enterVsNot(ctx) {
    }
    exitVsNot(ctx) {
    }
    enterVsStruct(ctx) {
    }
    exitVsStruct(ctx) {
    }
    enterVsMultDiv(ctx) {
    }
    exitVsMultDiv(ctx) {
    }
    enterVsTypeOf(ctx) {
    }
    exitVsTypeOf(ctx) {
    }
    enterVsICS(ctx) {
    }
    exitVsICS(ctx) {
    }
    enterVsXor(ctx) {
    }
    exitVsXor(ctx) {
    }
    enterVsAddSub(ctx) {
    }
    exitVsAddSub(ctx) {
    }
    enterVsAnd(ctx) {
    }
    exitVsAnd(ctx) {
    }
    enterVsPow(ctx) {
    }
    exitVsPow(ctx) {
    }
    enterVsMod(ctx) {
    }
    exitVsMod(ctx) {
    }
    enterVsAmp(ctx) {
    }
    exitVsAmp(ctx) {
    }
    enterVsAddressOf(ctx) {
    }
    exitVsAddressOf(ctx) {
    }
    enterVsNew(ctx) {
    }
    exitVsNew(ctx) {
    }
    enterVsPlusMinus(ctx) {
    }
    exitVsPlusMinus(ctx) {
    }
    enterVsIDiv(ctx) {
    }
    exitVsIDiv(ctx) {
    }
    enterVsOr(ctx) {
    }
    exitVsOr(ctx) {
    }
    enterVsLiteral(ctx) {
    }
    exitVsLiteral(ctx) {
    }
    enterVsEqv(ctx) {
    }
    exitVsEqv(ctx) {
    }
    enterVsImp(ctx) {
    }
    exitVsImp(ctx) {
    }
    enterVsComp(ctx) {
    }
    exitVsComp(ctx) {
    }
    enterVsMid(ctx) {
    }
    exitVsMid(ctx) {
    }
    enterVariableStmt(ctx) {
    }
    exitVariableStmt(ctx) {
    }
    enterVariableListStmt(ctx) {
    }
    exitVariableListStmt(ctx) {
    }
    enterVariableSubStmt(ctx) {
    }
    exitVariableSubStmt(ctx) {
    }
    enterWhileWendStmt(ctx) {
    }
    exitWhileWendStmt(ctx) {
    }
    enterWidthStmt(ctx) {
    }
    exitWidthStmt(ctx) {
    }
    enterWithStmt(ctx) {
    }
    exitWithStmt(ctx) {
    }
    enterWriteStmt(ctx) {
    }
    exitWriteStmt(ctx) {
    }
    enterExplicitCallStmt(ctx) {
    }
    exitExplicitCallStmt(ctx) {
    }
    enterECS_ProcedureCall(ctx) {
    }
    exitECS_ProcedureCall(ctx) {
    }
    enterECS_MemberProcedureCall(ctx) {
    }
    exitECS_MemberProcedureCall(ctx) {
    }
    enterImplicitCallStmt_InBlock(ctx) {
    }
    exitImplicitCallStmt_InBlock(ctx) {
    }
    enterICS_B_ProcedureCall(ctx) {
    }
    exitICS_B_ProcedureCall(ctx) {
    }
    enterICS_B_MemberProcedureCall(ctx) {
    }
    exitICS_B_MemberProcedureCall(ctx) {
    }
    enterImplicitCallStmt_InStmt(ctx) {
    }
    exitImplicitCallStmt_InStmt(ctx) {
    }
    enterICS_S_VariableOrProcedureCall(ctx) {
    }
    exitICS_S_VariableOrProcedureCall(ctx) {
    }
    enterICS_S_ProcedureOrArrayCall(ctx) {
    }
    exitICS_S_ProcedureOrArrayCall(ctx) {
    }
    enterICS_S_NestedProcedureCall(ctx) {
    }
    exitICS_S_NestedProcedureCall(ctx) {
    }
    enterICS_S_MembersCall(ctx) {
    }
    exitICS_S_MembersCall(ctx) {
    }
    enterICS_S_MemberCall(ctx) {
    }
    exitICS_S_MemberCall(ctx) {
    }
    enterICS_S_DictionaryCall(ctx) {
    }
    exitICS_S_DictionaryCall(ctx) {
    }
    enterArgsCall(ctx) {
    }
    exitArgsCall(ctx) {
    }
    enterArgCall(ctx) {
    }
    exitArgCall(ctx) {
    }
    enterDictionaryCallStmt(ctx) {
    }
    exitDictionaryCallStmt(ctx) {
    }
    enterArgList(ctx) {
    }
    exitArgList(ctx) {
    }
    enterArg(ctx) {
    }
    exitArg(ctx) {
    }
    enterArgDefaultValue(ctx) {
    }
    exitArgDefaultValue(ctx) {
    }
    enterSubscripts(ctx) {
    }
    exitSubscripts(ctx) {
    }
    enterSubscript_(ctx) {
    }
    exitSubscript_(ctx) {
    }
    enterAmbiguousIdentifier(ctx) {
    }
    exitAmbiguousIdentifier(ctx) {
    }
    enterAsTypeClause(ctx) {
    }
    exitAsTypeClause(ctx) {
    }
    enterBaseType(ctx) {
    }
    exitBaseType(ctx) {
    }
    enterCertainIdentifier(ctx) {
    }
    exitCertainIdentifier(ctx) {
    }
    enterComparisonOperator(ctx) {
    }
    exitComparisonOperator(ctx) {
    }
    enterComplexType(ctx) {
    }
    exitComplexType(ctx) {
    }
    enterFieldLength(ctx) {
    }
    exitFieldLength(ctx) {
    }
    enterLetterrange(ctx) {
    }
    exitLetterrange(ctx) {
    }
    enterLineLabel(ctx) {
    }
    exitLineLabel(ctx) {
    }
    enterLiteral(ctx) {
    }
    exitLiteral(ctx) {
    }
    enterPublicPrivateVisibility(ctx) {
    }
    exitPublicPrivateVisibility(ctx) {
    }
    enterPublicPrivateGlobalVisibility(ctx) {
    }
    exitPublicPrivateGlobalVisibility(ctx) {
    }
    enterType_(ctx) {
    }
    exitType_(ctx) {
    }
    enterTypeHint(ctx) {
    }
    exitTypeHint(ctx) {
    }
    enterVisibility(ctx) {
    }
    exitVisibility(ctx) {
    }
    enterAmbiguousKeyword(ctx) {
    }
    exitAmbiguousKeyword(ctx) {
    }
}
exports.default = VisualBasic6ParserListener;
