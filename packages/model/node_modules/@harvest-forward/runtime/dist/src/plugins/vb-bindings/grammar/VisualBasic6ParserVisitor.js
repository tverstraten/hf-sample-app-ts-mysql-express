"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const antlr4_1 = __importDefault(require("antlr4"));
class VisualBasic6ParserVisitor extends antlr4_1.default.tree.ParseTreeVisitor {
    visitStartRule(ctx) {
        return this.visitChildren(ctx);
    }
    visitModule(ctx) {
        return this.visitChildren(ctx);
    }
    visitModuleReferences(ctx) {
        return this.visitChildren(ctx);
    }
    visitModuleReference(ctx) {
        return this.visitChildren(ctx);
    }
    visitModuleReferenceValue(ctx) {
        return this.visitChildren(ctx);
    }
    visitModuleReferenceComponent(ctx) {
        return this.visitChildren(ctx);
    }
    visitModuleHeader(ctx) {
        return this.visitChildren(ctx);
    }
    visitModuleConfig(ctx) {
        return this.visitChildren(ctx);
    }
    visitModuleConfigElement(ctx) {
        return this.visitChildren(ctx);
    }
    visitModuleAttributes(ctx) {
        return this.visitChildren(ctx);
    }
    visitModuleOptions(ctx) {
        return this.visitChildren(ctx);
    }
    visitOptionBaseStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitOptionCompareStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitOptionExplicitStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitOptionPrivateModuleStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitModuleBody(ctx) {
        return this.visitChildren(ctx);
    }
    visitModuleBodyElement(ctx) {
        return this.visitChildren(ctx);
    }
    visitControlProperties(ctx) {
        return this.visitChildren(ctx);
    }
    visitCp_Properties(ctx) {
        return this.visitChildren(ctx);
    }
    visitCp_SingleProperty(ctx) {
        return this.visitChildren(ctx);
    }
    visitCp_PropertyName(ctx) {
        return this.visitChildren(ctx);
    }
    visitCp_PropertyValue(ctx) {
        return this.visitChildren(ctx);
    }
    visitCp_NestedProperty(ctx) {
        return this.visitChildren(ctx);
    }
    visitCp_ControlType(ctx) {
        return this.visitChildren(ctx);
    }
    visitCp_ControlIdentifier(ctx) {
        return this.visitChildren(ctx);
    }
    visitModuleBlock(ctx) {
        return this.visitChildren(ctx);
    }
    visitAttributeStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitBlock(ctx) {
        return this.visitChildren(ctx);
    }
    visitBlockStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitAppActivateStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitBeepStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitChDirStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitChDriveStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitCloseStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitConstStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitConstSubStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitDateStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitDeclareStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitDeftypeStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitDeleteSettingStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitDoLoopStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitEndStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitEnumerationStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitEnumerationStmt_Constant(ctx) {
        return this.visitChildren(ctx);
    }
    visitEraseStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitErrorStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitEventStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitExitStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitFilecopyStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitForEachStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitForNextStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitFunctionStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitGetStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitGoSubStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitGoToStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitInlineIfThenElse(ctx) {
        return this.visitChildren(ctx);
    }
    visitBlockIfThenElse(ctx) {
        return this.visitChildren(ctx);
    }
    visitIfBlockStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitIfConditionStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitIfElseIfBlockStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitIfElseBlockStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitImplementsStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitInputStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitKillStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitLetStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitLineInputStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitLoadStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitLockStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitLsetStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitMacroIfThenElseStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitMacroIfBlockStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitMacroElseIfBlockStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitMacroElseBlockStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitMidStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitMkdirStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitNameStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitOnErrorStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitOnGoToStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitOnGoSubStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitOpenStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitOutputList(ctx) {
        return this.visitChildren(ctx);
    }
    visitOutputList_Expression(ctx) {
        return this.visitChildren(ctx);
    }
    visitPrintStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitPropertyGetStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitPropertySetStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitPropertyLetStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitPutStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitRaiseEventStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitRandomizeStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitRedimStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitRedimSubStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitResetStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitResumeStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitReturnStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitRmdirStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitRsetStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitSavepictureStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitSaveSettingStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitSeekStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitSelectCaseStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitSC_Case(ctx) {
        return this.visitChildren(ctx);
    }
    visitCaseCondElse(ctx) {
        return this.visitChildren(ctx);
    }
    visitCaseCondExpr(ctx) {
        return this.visitChildren(ctx);
    }
    visitCaseCondExprIs(ctx) {
        return this.visitChildren(ctx);
    }
    visitCaseCondExprValue(ctx) {
        return this.visitChildren(ctx);
    }
    visitCaseCondExprTo(ctx) {
        return this.visitChildren(ctx);
    }
    visitSendkeysStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitSetattrStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitSetStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitStopStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitSubStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitTimeStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitTypeStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitTypeStmt_Element(ctx) {
        return this.visitChildren(ctx);
    }
    visitTypeOfStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitUnloadStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitUnlockStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitVsAssign(ctx) {
        return this.visitChildren(ctx);
    }
    visitVsNot(ctx) {
        return this.visitChildren(ctx);
    }
    visitVsStruct(ctx) {
        return this.visitChildren(ctx);
    }
    visitVsMultDiv(ctx) {
        return this.visitChildren(ctx);
    }
    visitVsTypeOf(ctx) {
        return this.visitChildren(ctx);
    }
    visitVsICS(ctx) {
        return this.visitChildren(ctx);
    }
    visitVsXor(ctx) {
        return this.visitChildren(ctx);
    }
    visitVsAddSub(ctx) {
        return this.visitChildren(ctx);
    }
    visitVsAnd(ctx) {
        return this.visitChildren(ctx);
    }
    visitVsPow(ctx) {
        return this.visitChildren(ctx);
    }
    visitVsMod(ctx) {
        return this.visitChildren(ctx);
    }
    visitVsAmp(ctx) {
        return this.visitChildren(ctx);
    }
    visitVsAddressOf(ctx) {
        return this.visitChildren(ctx);
    }
    visitVsNew(ctx) {
        return this.visitChildren(ctx);
    }
    visitVsPlusMinus(ctx) {
        return this.visitChildren(ctx);
    }
    visitVsIDiv(ctx) {
        return this.visitChildren(ctx);
    }
    visitVsOr(ctx) {
        return this.visitChildren(ctx);
    }
    visitVsLiteral(ctx) {
        return this.visitChildren(ctx);
    }
    visitVsEqv(ctx) {
        return this.visitChildren(ctx);
    }
    visitVsImp(ctx) {
        return this.visitChildren(ctx);
    }
    visitVsComp(ctx) {
        return this.visitChildren(ctx);
    }
    visitVsMid(ctx) {
        return this.visitChildren(ctx);
    }
    visitVariableStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitVariableListStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitVariableSubStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitWhileWendStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitWidthStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitWithStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitWriteStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitExplicitCallStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitECS_ProcedureCall(ctx) {
        return this.visitChildren(ctx);
    }
    visitECS_MemberProcedureCall(ctx) {
        return this.visitChildren(ctx);
    }
    visitImplicitCallStmt_InBlock(ctx) {
        return this.visitChildren(ctx);
    }
    visitICS_B_ProcedureCall(ctx) {
        return this.visitChildren(ctx);
    }
    visitICS_B_MemberProcedureCall(ctx) {
        return this.visitChildren(ctx);
    }
    visitImplicitCallStmt_InStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitICS_S_VariableOrProcedureCall(ctx) {
        return this.visitChildren(ctx);
    }
    visitICS_S_ProcedureOrArrayCall(ctx) {
        return this.visitChildren(ctx);
    }
    visitICS_S_NestedProcedureCall(ctx) {
        return this.visitChildren(ctx);
    }
    visitICS_S_MembersCall(ctx) {
        return this.visitChildren(ctx);
    }
    visitICS_S_MemberCall(ctx) {
        return this.visitChildren(ctx);
    }
    visitICS_S_DictionaryCall(ctx) {
        return this.visitChildren(ctx);
    }
    visitArgsCall(ctx) {
        return this.visitChildren(ctx);
    }
    visitArgCall(ctx) {
        return this.visitChildren(ctx);
    }
    visitDictionaryCallStmt(ctx) {
        return this.visitChildren(ctx);
    }
    visitArgList(ctx) {
        return this.visitChildren(ctx);
    }
    visitArg(ctx) {
        return this.visitChildren(ctx);
    }
    visitArgDefaultValue(ctx) {
        return this.visitChildren(ctx);
    }
    visitSubscripts(ctx) {
        return this.visitChildren(ctx);
    }
    visitSubscript_(ctx) {
        return this.visitChildren(ctx);
    }
    visitAmbiguousIdentifier(ctx) {
        return this.visitChildren(ctx);
    }
    visitAsTypeClause(ctx) {
        return this.visitChildren(ctx);
    }
    visitBaseType(ctx) {
        return this.visitChildren(ctx);
    }
    visitCertainIdentifier(ctx) {
        return this.visitChildren(ctx);
    }
    visitComparisonOperator(ctx) {
        return this.visitChildren(ctx);
    }
    visitComplexType(ctx) {
        return this.visitChildren(ctx);
    }
    visitFieldLength(ctx) {
        return this.visitChildren(ctx);
    }
    visitLetterrange(ctx) {
        return this.visitChildren(ctx);
    }
    visitLineLabel(ctx) {
        return this.visitChildren(ctx);
    }
    visitLiteral(ctx) {
        return this.visitChildren(ctx);
    }
    visitPublicPrivateVisibility(ctx) {
        return this.visitChildren(ctx);
    }
    visitPublicPrivateGlobalVisibility(ctx) {
        return this.visitChildren(ctx);
    }
    visitType_(ctx) {
        return this.visitChildren(ctx);
    }
    visitTypeHint(ctx) {
        return this.visitChildren(ctx);
    }
    visitVisibility(ctx) {
        return this.visitChildren(ctx);
    }
    visitAmbiguousKeyword(ctx) {
        return this.visitChildren(ctx);
    }
}
exports.default = VisualBasic6ParserVisitor;
