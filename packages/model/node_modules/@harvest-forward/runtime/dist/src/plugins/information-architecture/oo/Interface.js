"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Interface = void 0;
const SystemComponentComparator_1 = require("../../../system/SystemComponentComparator");
const ObjectType_1 = require("../information/ObjectType");
const Method_1 = require("./Method");
const Property_1 = require("./Property");
class Interface extends ObjectType_1.ObjectType {
    constructor(nameSpace, name, description, role) {
        super('Interface', nameSpace, name, description, role);
        this._properties = {};
        this._methods = {};
    }
    addChild(child) {
        super.addChild(child);
        if (child instanceof Property_1.Property) {
            this._properties[child.name] = child;
        }
        else if (child instanceof Method_1.Method) {
            this._methods[child.name] = child;
        }
    }
    removeChild(child) {
        if (child instanceof Property_1.Property) {
            delete this._properties[child.name];
        }
        else if (child instanceof Method_1.Method) {
            delete this._methods[child.name];
        }
        return super.removeChild(child);
    }
    get propertiesMap() {
        return this._properties;
    }
    get properties() {
        return Object.values(this._properties).sort(SystemComponentComparator_1.SystemComponentComparator);
    }
    get methodsMap() {
        return this._methods;
    }
    get methods() {
        return Object.values(this._methods).sort(SystemComponentComparator_1.SystemComponentComparator);
    }
    get classReferences() {
        return this.allReferences.filter((item) => item.objectTypeName === 'Class');
    }
}
exports.Interface = Interface;
