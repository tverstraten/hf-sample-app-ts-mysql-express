import mariadb from 'mariadb';
import { Artifact } from '../../system/Artifact';
import { System } from '../../system/System';
import { ValueType } from '../../system/ValueType';
import { AbstractSqlSchemaHarvester, RelationalDatabase } from '../rdbms-basic';
export declare abstract class AbstractMySqlSchemaHarvester extends AbstractSqlSchemaHarvester {
    private pool?;
    private _connection?;
    columnTypeToValueTypeMap: {
        [key: string]: ValueType;
    };
    protected connection(): mariadb.PoolConnection;
    protected connect(): Promise<void>;
    protected disconnect(): Promise<void>;
    protected abstract harvestRow(system: System, db: RelationalDatabase, row: any): Artifact[];
    protected performQuery(system: System): Promise<Artifact[]>;
    protected getValueToValueTypeMap(): {
        [key: string]: ValueType;
    };
}
//# sourceMappingURL=AbstractMySqlSchemaHarvester.d.ts.map