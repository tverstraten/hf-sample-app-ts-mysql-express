"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Domain = void 0;
const pluralize_1 = __importDefault(require("pluralize"));
const SystemComponentType_1 = require("../../system/SystemComponentType");
const RelationalComponent_1 = require("./RelationalComponent");
class Domain extends RelationalComponent_1.RelationalComponent {
    constructor(schemaName, name, description, definition, values) {
        super('Domain', schemaName, schemaName, name, SystemComponentType_1.SystemComponentType.storage, description);
        this.definition = definition;
        this.values = values == null ? [] : values;
        if (!pluralize_1.default.isPlural(name) && pluralize_1.default.isSingular(name)) {
            this._singularName = name;
            this._pluralName = pluralize_1.default.plural(name);
        }
        else {
            this._singularName = pluralize_1.default.singular(name);
            this._pluralName = name;
        }
    }
    setNames(name, nameSpace) {
        super.setNames(name, nameSpace);
        if (!pluralize_1.default.isPlural(name) && pluralize_1.default.isSingular(name)) {
            this._singularName = name;
            this._pluralName = pluralize_1.default.plural(name);
        }
        else {
            this._singularName = pluralize_1.default.singular(name);
            this._pluralName = name;
        }
    }
    get singularName() {
        return this._singularName;
    }
    get pluralName() {
        return this._pluralName;
    }
}
exports.Domain = Domain;
