"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.templates = exports.builders = void 0;
const fs_1 = __importDefault(require("fs"));
const MySqlColumnHarvester_1 = require("./MySqlColumnHarvester");
const MySqlConstraintHarvester_1 = require("./MySqlConstraintHarvester");
const MySqlDomainHarvester_1 = require("./MySqlDomainHarvester");
const MySqlFkHarvester_1 = require("./MySqlFkHarvester");
const MySqlPkHarvester_1 = require("./MySqlPkHarvester");
const MySqlTableHarvester_1 = require("./MySqlTableHarvester");
const MySqlViewHarvester_1 = require("./MySqlViewHarvester");
exports.builders = {
    ColumnHarvester: (settings) => new MySqlColumnHarvester_1.MySqlColumnHarvester(settings),
    ConstraintHarvester: (settings) => new MySqlConstraintHarvester_1.MySqlConstraintHarvester(settings),
    DomainHarvester: (settings) => new MySqlDomainHarvester_1.MySqlDomainHarvester(settings),
    FkHarvester: (settings) => new MySqlFkHarvester_1.MySqlFkHarvester(settings),
    PkHarvester: (settings) => new MySqlPkHarvester_1.MySqlPkHarvester(settings),
    TableHarvester: (settings) => new MySqlTableHarvester_1.MySqlTableHarvester(settings),
    ViewHarvester: (settings) => new MySqlViewHarvester_1.MySqlViewHarvester(settings),
};
exports.templates = { Schema: { type: 'handlebars', contents: () => fs_1.default.readFileSync(`${__dirname}/MySqlSchema.handlebars`).toString() } };
__exportStar(require("./AbstractMySqlSchemaHarvester"), exports);
__exportStar(require("./MySqlColumnHarvester"), exports);
__exportStar(require("./MySqlConstraintHarvester"), exports);
__exportStar(require("./MySqlDomainHarvester"), exports);
__exportStar(require("./MySqlFkHarvester"), exports);
__exportStar(require("./MySqlPkHarvester"), exports);
__exportStar(require("./MySqlTableHarvester"), exports);
__exportStar(require("./MySqlViewHarvester"), exports);
