"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Path = void 0;
const SystemComponentComparator_1 = require("../../system/SystemComponentComparator");
const information_architecture_1 = require("../information-architecture");
const HttpVerb_1 = require("./HttpVerb");
const PathParameter_1 = require("./PathParameter");
const RestParameterLocation_1 = require("./RestParameterLocation");
class Path extends information_architecture_1.Method {
    get httpVerbText() {
        if (this.httpVerb == null)
            return '';
        return HttpVerb_1.HttpVerb[this.httpVerb];
    }
    get queryParameters() {
        const result = [];
        Object.values(this.parameters).forEach((parameter) => {
            if (parameter instanceof PathParameter_1.PathParameter) {
                if (parameter.location == RestParameterLocation_1.RestParameterLocation.query) {
                    result.push(parameter);
                }
            }
        });
        result.sort(SystemComponentComparator_1.SystemComponentComparator);
        return result;
    }
    get bodyParameter() {
        let result;
        Object.values(this.parameters).forEach((parameter) => {
            if (parameter instanceof PathParameter_1.PathParameter) {
                if (parameter.location == RestParameterLocation_1.RestParameterLocation.body)
                    result = parameter;
            }
        });
        return result;
    }
    get pathParameters() {
        const result = [];
        Object.values(this.parameters).forEach((parameter) => {
            if (parameter instanceof PathParameter_1.PathParameter) {
                if (parameter.location == RestParameterLocation_1.RestParameterLocation.path)
                    result.push(parameter);
            }
        });
        result.sort(SystemComponentComparator_1.SystemComponentComparator);
        return result;
    }
}
exports.Path = Path;
